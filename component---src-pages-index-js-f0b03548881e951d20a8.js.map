{"version":3,"sources":["webpack:///./src/components/PhotoFrame.js","webpack:///./src/components/Profile.js","webpack:///./src/components/Post.js","webpack:///./src/pages/index.js","webpack:///./src/components/Divider.js"],"names":["PhotoFrame","img","alt","_css","src","onError","e","target","css","Wrapper","ProfileContainer","Profile","isDarkMode","useContext","ThemeContext","darkModeColor","textColor1","whiteModeColor","Divider","color","title","href","Post","post","to","node","fields","slug","frontmatter","date","excerpt","posts","data","allMarkdownRemark","edges","map","index","key","pageQuery","vertical","margin","fat","mainColor1","mainColor2","mainColor3"],"mappings":"iJAgBeA,EAbI,SAAC,GAA4C,IAAD,IAAzCC,WAAyC,MAAnC,GAAmC,MAA/BC,WAA+B,MAAzB,aAAyB,EAAXC,EAAW,EAAXA,KAClD,OACE,mBACEC,IAAKH,EACLI,QAAS,SAACC,GACRA,EAAEC,OAAOH,IAAM,oBAEjBF,IAAKA,EACLM,IAAG,YAAE,CAAC,CAAD,sJAAsDL,O,gDCH3DM,EAAO,kQACPC,EAAgB,wK,wLAwEPC,IAtEC,WAAO,IACbC,EAAeC,qBAAWC,KAA1BF,WACR,OACE,YAACH,EAAD,KACE,YAACC,EAAD,KACE,YAAC,EAAD,CACEP,KAAI,qJACJF,IAAG,0DAEL,uBACE,uCACA,iBACEO,IAAKA,YAAF,gJAECI,EAAU,yJAFX,UAIGA,EACIG,gBAAcC,WACdC,iBAAeD,WANtB,MADL,cAaA,mBAAKR,IAAG,GAAR,2BAKJ,YAACU,EAAA,EAAD,CAASC,OAAK,IACd,iBACEX,IAAG,EAGHY,MAAO,cACPC,KAAI,gCAEJ,YAAC,IAAD,CACEb,IAAKA,YAAF,kIAKUI,EAAa,OAAS,OALhC,SAUP,iBACEJ,IAAG,EAGHY,MAAO,gBACPC,KAAI,2DAEJ,YAAC,IAAD,CACEb,IAAKA,YAAF,kIAKUI,EAAa,OAAS,OALhC,Y,63BC5BEU,IAnCF,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACd,OACE,mBACEf,IAAG,GAKH,YAAC,OAAD,CAAMgB,GAAID,EAAKE,KAAKC,OAAOC,MACzB,kBACEnB,IAAG,GAIFe,EAAKE,KAAKG,YAAYR,OAEzB,kBACEZ,IAAG,GAIFe,EAAKE,KAAKG,YAAYC,MAEzB,oBACErB,IAAG,GAIFe,EAAKE,KAAKK,a,2KCxBfrB,EAAO,gIAEE,sBAAe,IACtBsB,EADqB,EAAXC,KACGC,kBAAkBC,MACrC,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAKd,MAAM,SACX,YAACX,EAAD,KACE,YAAC,IAAD,MACCsB,EAAMI,KAAI,SAACZ,EAAMa,GAChB,OAAO,YAAC,IAAD,CAAMb,KAAMA,EAAMc,IAAG,QAAUD,UAOzC,IAAME,EAAS,c,2GC0BPpB,IA9CC,SAAC,GAAsC,IAApCqB,EAAmC,EAAnCA,SAAUpB,EAAyB,EAAzBA,MAAOqB,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,IAClC7B,EAAeC,qBAAWC,KAA1BF,WACR,OACE,8BACE,mBACEJ,IACE+B,EACI,CAAC,CAAD,sDAAiCC,GAAM,4CACvC,CAAC,CAAD,wCAA0BA,GAAM,6CAGtC,mBACEhC,IAAG,YAAE,CAAC,CAAD,uBAEHiC,EACIF,EAAQ,qGAGRA,EAAQ,6FAGZ3B,EAAU,yJACVO,GACEX,YADG,+BAGG+B,EAAW,MAAQ,MAHtB,OAIG3B,EACEG,gBAAc2B,WACd,IACA3B,gBAAc4B,WACd,IACA5B,gBAAc6B,WACd3B,iBAAeyB,WACf,IACAzB,iBAAe0B,WACf,IACA1B,iBAAe2B,WAdpB","file":"component---src-pages-index-js-f0b03548881e951d20a8.js","sourcesContent":["import React from \"react\"\nimport tw from \"twin.macro\"\n\nconst PhotoFrame = ({ img = \"\", alt = \"profileImg\", _css }) => {\n  return (\n    <img\n      src={img}\n      onError={(e) => {\n        e.target.src = \"/img/profile.png\"\n      }}\n      alt={alt}\n      css={[tw`rounded-full border border-purple-300 h-40 w-40`, _css]}\n    />\n  )\n}\n\nexport default PhotoFrame\n","import React, { useContext } from \"react\"\nimport tw, { css } from \"twin.macro\"\nimport PhotoFrame from \"./PhotoFrame\"\nimport Divider from \"./Divider\"\nimport ThemeContext from \"../lib/context/ThemContext\"\nimport { whiteModeColor, darkModeColor } from \"../../them-color\"\nimport { FaFacebook, FaGithub } from \"react-icons/fa\"\n\nconst Wrapper = tw.div`w-full max-w-screen-md px-4 md:px-0 mx-auto pt-8 md:pt-12`\nconst ProfileContainer = tw.div`md:flex items-center px-2`\n\nconst Profile = () => {\n  const { isDarkMode } = useContext(ThemeContext)\n  return (\n    <Wrapper>\n      <ProfileContainer>\n        <PhotoFrame\n          _css={tw`mr-8 mb-2 md:mb-4 h-24 w-24 md:h-40 md:w-40`}\n          img={`https://avatars2.githubusercontent.com/u/48559454?v=4`}\n        />\n        <div>\n          <span>Written by </span>\n          <p\n            css={css`\n              ${tw`inline-block text-xl font-medium rounded-lg mb-2 px-1`}\n              ${isDarkMode ? tw`bg-gray-800` : tw`bg-gray-200`}\n                color: ${\n                  isDarkMode\n                    ? darkModeColor.textColor1\n                    : whiteModeColor.textColor1\n                };\n              `}\n          >\n            @JaeSeoKim\n          </p>\n          <div css={tw`text-sm font-normal mb-2`}>\n            보안과 개발을 좋아하는 학생 입니다~!\n          </div>\n        </div>\n      </ProfileContainer>\n      <Divider color />\n      <a\n        css={css`\n          display: inline-block;\n        `}\n        title={\"github Link\"}\n        href={`https://github.com/JaeSeoKim`}\n      >\n        <FaGithub\n          css={css`\n            ${tw`w-8 h-8 mt-4 ml-4`}\n            transition: all 300ms cubic-bezier(0, 0, 0.2, 1);\n            color: #888;\n            &:hover {\n              color: ${isDarkMode ? \"#fff\" : \"#000\"};\n            }\n          `}\n        />\n      </a>\n      <a\n        css={css`\n          display: inline-block;\n        `}\n        title={\"facebook Link\"}\n        href={`https://www.facebook.com/profile.php?id=100009150322038`}\n      >\n        <FaFacebook\n          css={css`\n            ${tw`w-8 h-8 mt-4 ml-4`}\n            transition: all 300ms cubic-bezier(0, 0, 0.2, 1);\n            color: #888;\n            &:hover {\n              color: ${isDarkMode ? \"#fff\" : \"#000\"};\n            }\n          `}\n        ></FaFacebook>\n      </a>\n    </Wrapper>\n  )\n}\n\nexport default Profile\n","import React from \"react\"\nimport tw, { css } from \"twin.macro\"\nimport { Link } from \"gatsby\"\n\nconst Post = ({ post }) => {\n  return (\n    <div\n      css={css`\n        transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1);\n        ${tw`mx-4 my-12 transform hover:scale-105`}\n      `}\n    >\n      <Link to={post.node.fields.slug}>\n        <h1\n          css={css`\n            ${tw`text-xl font-semibold`}\n          `}\n        >\n          {post.node.frontmatter.title}\n        </h1>\n        <h2\n          css={css`\n            ${tw`my-1 text-xs`}\n          `}\n        >\n          {post.node.frontmatter.date}\n        </h2>\n        <span\n          css={css`\n            ${tw`break-words`}\n          `}\n        >\n          {post.node.excerpt}\n        </span>\n      </Link>\n    </div>\n  )\n}\n\nexport default Post\n","import tw from \"twin.macro\"\nimport React from \"react\"\nimport SEO from \"../components/seo\"\nimport Profile from \"../components/Profile\"\nimport Post from \"../components/Post\"\nimport Layout from \"../components/Layout\"\nimport { graphql } from \"gatsby\"\n\nconst Wrapper = tw.div`w-full max-w-screen-md mx-auto`\n\nexport default ({ data }) => {\n  const posts = data.allMarkdownRemark.edges\n  return (\n    <Layout>\n      <SEO title=\"Home\" />\n      <Wrapper>\n        <Profile />\n        {posts.map((post, index) => {\n          return <Post post={post} key={`post_${index}`} />\n        })}\n      </Wrapper>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt(pruneLength: 200, truncate: true)\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`\n","import React, { useContext } from \"react\"\nimport ThemeContext from \"../lib/context/ThemContext\"\nimport { darkModeColor, whiteModeColor } from \"../../them-color\"\nimport tw, { css } from \"twin.macro\"\n\nconst Divider = ({ vertical, color, margin, fat }) => {\n  const { isDarkMode } = useContext(ThemeContext)\n  return (\n    <>\n      <div\n        css={\n          vertical\n            ? [tw`h-full flex justify-center`, margin && tw`my-2`]\n            : [tw`flex justify-center`, margin && tw`mx-2`]\n        }\n      >\n        <div\n          css={[\n            tw`rounded-full`,\n            fat\n              ? vertical\n                ? tw`h-full w-1 my-auto`\n                : tw`w-full h-1`\n              : vertical\n              ? tw`h-full w-px my-auto`\n              : tw`w-full h-px`,\n            isDarkMode ? tw`bg-gray-800` : tw`bg-gray-100`,\n            color &&\n              css`\n                background: linear-gradient(\n                  ${vertical ? \"180\" : \"270\"}deg,\n                  ${isDarkMode\n                    ? darkModeColor.mainColor1 +\n                      \",\" +\n                      darkModeColor.mainColor2 +\n                      \",\" +\n                      darkModeColor.mainColor3\n                    : whiteModeColor.mainColor1 +\n                      \",\" +\n                      whiteModeColor.mainColor2 +\n                      \",\" +\n                      whiteModeColor.mainColor3}\n                );\n              `,\n          ]}\n        ></div>\n      </div>\n    </>\n  )\n}\n\nexport default Divider\n"],"sourceRoot":""}