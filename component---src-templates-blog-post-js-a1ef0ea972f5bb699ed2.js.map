{"version":3,"sources":["webpack:///./src/components/PhotoFrame.js","webpack:///./src/components/Profile.js","webpack:///./src/components/Divider.js","webpack:///./src/components/Markdown.js","webpack:///./src/components/Navigator.js","webpack:///./src/components/TableOfContents.js","webpack:///./src/components/Utterances.js","webpack:///./src/templates/blogPost.js"],"names":["PhotoFrame","img","alt","_css","src","onError","e","target","css","Wrapper","ProfileContainer","Profile","isDarkMode","useContext","ThemeContext","darkModeColor","mainColor1","whiteModeColor","Divider","color","href","vertical","margin","fat","mainColor2","mainColor3","Markdown","html","MarkdownCSS","className","dangerouslySetInnerHTML","__html","Button","Navigator","pageContext","previous","next","to","fields","slug","rel","frontmatter","title","TableOfContents","toc","currentHeaderUrl","Utterances","repo","rootElm","React","createRef","useEffect","utterances","document","createElement","utterancesConfig","theme","label","async","crossorigin","Object","keys","forEach","configKey","setAttribute","current","innerHTML","appendChild","ref","pageQuery","data","markdownRemark","tableOfContents","useState","undefined","setCurrentHeaderUrl","isTOCVisible","length","handleScroll","aboveHeaderUrl","currentOffsetY","window","pageYOffset","headerElements","querySelectorAll","elem","elemTop","getBoundingClientRect","top","isLast","split","location","origin","addEventListener","removeEventListener","Layout","date"],"mappings":"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","file":"component---src-templates-blog-post-js-a1ef0ea972f5bb699ed2.js","sourcesContent":["import React from \"react\"\nimport tw from \"twin.macro\"\n\nconst PhotoFrame = ({ img = \"\", alt = \"profileImg\", _css }) => {\n  return (\n    <img\n      src={img}\n      onError={(e) => {\n        e.target.src = \"/img/profile.png\"\n      }}\n      alt={alt}\n      css={[tw`rounded-full border border-purple-300 h-40 w-40`, _css]}\n    />\n  )\n}\n\nexport default PhotoFrame\n","import React, { useContext } from \"react\"\nimport tw, { css } from \"twin.macro\"\nimport PhotoFrame from \"./PhotoFrame\"\nimport Divider from \"./Divider\"\nimport ThemeContext from \"../lib/context/ThemContext\"\nimport { whiteModeColor, darkModeColor } from \"../../them-color\"\nimport { FaFacebook, FaGithub } from \"react-icons/fa\"\n\nconst Wrapper = tw.div`w-full max-w-screen-md px-4 md:px-0 mx-auto pt-8 md:pt-12`\nconst ProfileContainer = tw.div`md:flex items-center px-2`\n\nconst Profile = () => {\n  const { isDarkMode } = useContext(ThemeContext)\n  return (\n    <Wrapper>\n      <ProfileContainer>\n        <PhotoFrame\n          _css={tw`mr-8 mb-2 md:mb-4 h-24 w-24 md:h-40 md:w-40`}\n          img={`https://avatars2.githubusercontent.com/u/48559454?v=4`}\n        />\n        <div>\n          <span>Written by </span>\n          <p\n            css={css`\n              ${tw`inline-block text-xl font-medium rounded-lg mb-2 px-1`}\n              ${isDarkMode ? tw`bg-gray-800` : tw`bg-gray-200`}\n                color: ${\n                  isDarkMode\n                    ? darkModeColor.mainColor1\n                    : whiteModeColor.mainColor1\n                };\n              `}\n          >\n            @JaeSeoKim\n          </p>\n          <div css={tw`text-sm font-normal mb-2`}>\n            보안과 개발을 좋아하는 학생 입니다~!\n          </div>\n        </div>\n      </ProfileContainer>\n      <Divider color />\n      <a\n        css={css`\n          display: inline-block;\n        `}\n        href={`https://github.com/JaeSeoKim`}\n      >\n        <FaGithub\n          css={css`\n            ${tw`w-8 h-8 mt-4 ml-4`}\n            transition: all 300ms cubic-bezier(0, 0, 0.2, 1);\n            color: #888;\n            &:hover {\n              color: ${isDarkMode ? \"#fff\" : \"#000\"};\n            }\n          `}\n        />\n      </a>\n      <a\n        css={css`\n          display: inline-block;\n        `}\n        href={`https://www.facebook.com/profile.php?id=100009150322038`}\n      >\n        <FaFacebook\n          css={css`\n            ${tw`w-8 h-8 mt-4 ml-4`}\n            transition: all 300ms cubic-bezier(0, 0, 0.2, 1);\n            color: #888;\n            &:hover {\n              color: ${isDarkMode ? \"#fff\" : \"#000\"};\n            }\n          `}\n        ></FaFacebook>\n      </a>\n    </Wrapper>\n  )\n}\n\nexport default Profile\n","import React, { useContext } from \"react\"\nimport ThemeContext from \"../lib/context/ThemContext\"\nimport { darkModeColor, whiteModeColor } from \"../../them-color\"\nimport tw, { css } from \"twin.macro\"\n\nconst Divider = ({ vertical, color, margin, fat }) => {\n  const { isDarkMode } = useContext(ThemeContext)\n  return (\n    <>\n      <div\n        css={\n          vertical\n            ? [tw`h-full flex justify-center`, margin && tw`my-2`]\n            : [tw`flex justify-center`, margin && tw`mx-2`]\n        }\n      >\n        <div\n          css={[\n            tw`rounded-full`,\n            fat\n              ? vertical\n                ? tw`h-full w-1 my-auto`\n                : tw`w-full h-1`\n              : vertical\n              ? tw`h-full w-px my-auto`\n              : tw`w-full h-px`,\n            isDarkMode ? tw`bg-gray-800` : tw`bg-gray-100`,\n            color &&\n              css`\n                background: linear-gradient(\n                  ${vertical ? \"180\" : \"270\"}deg,\n                  ${isDarkMode\n                    ? darkModeColor.mainColor1 +\n                      \",\" +\n                      darkModeColor.mainColor2 +\n                      \",\" +\n                      darkModeColor.mainColor3\n                    : whiteModeColor.mainColor1 +\n                      \",\" +\n                      whiteModeColor.mainColor2 +\n                      \",\" +\n                      whiteModeColor.mainColor3}\n                );\n              `,\n          ]}\n        ></div>\n      </div>\n    </>\n  )\n}\n\nexport default Divider\n","import React, { useContext } from \"react\"\nimport { css } from \"twin.macro\"\nimport ThemeContext from \"../lib/context/ThemContext\"\nimport { whiteModeColor, darkModeColor } from \"../../them-color\"\n\nconst Markdown = ({ html }) => {\n  const { isDarkMode } = useContext(ThemeContext)\n  const MarkdownCSS = css`\n    font-size: 1rem;\n    word-break: break-word;\n\n    h1 > a > svg,\n    h2 > a > svg,\n    h3 > a > svg,\n    h4 > a > svg,\n    h5 > a > svg,\n    h6 > a > svg {\n      fill: ${isDarkMode ? \"#fff\" : \"#000\"};\n    }\n\n    h1,\n    h2 {\n      font-size: 1.25rem;\n      font-weight: 600;\n      margin-top: 1.5rem;\n      margin-bottom: 1.5rem;\n    }\n    h3,\n    h4,\n    h5,\n    h6 {\n      font-size: 1.125rem;\n      margin-top: 1.5rem;\n      margin-bottom: 1.5rem;\n      font-weight: 600;\n    }\n\n    @media (min-width: 640px) {\n      h1,\n      h2 {\n        font-size: 1.5rem;\n      }\n      h3,\n      h4,\n      h5,\n      h6 {\n        font-size: 1.25rem;\n      }\n    }\n\n    a {\n      color: ${isDarkMode\n        ? darkModeColor.mainColor2\n        : whiteModeColor.mainColor2};\n    }\n    a:hover {\n      text-decoration: underline;\n    }\n    p {\n      margin: 0.3rem;\n    }\n    ul,\n    ol {\n      margin: 0.3rem;\n      margin-left: 2rem;\n    }\n    li > p,\n    li > ul,\n    li > ol {\n      margin-bottom: 0;\n    }\n    ol {\n      list-style-type: decimal;\n    }\n    ul {\n      list-style-type: disc;\n    }\n    blockquote {\n      padding: 0.5rem;\n      background-color: ${isDarkMode ? \"#333\" : \"#eee\"};\n      border-radius: 0.25rem;\n      margin: 0.3rem;\n      margin-top: 0.5rem;\n      margin-bottom: 0.5rem;\n      border-left-width: 4px;\n      border-color: ${isDarkMode\n        ? darkModeColor.mainColor2\n        : whiteModeColor.mainColor2};\n    }\n    blockquote > p {\n      margin: 0.5rem;\n    }\n    blockquote > h1,\n    blockquote > h2,\n    blockquote > h3,\n    blockquote > h4,\n    blockquote > h5 {\n      margin-top: 0.5rem;\n      margin-bottom: 0.5rem;\n    }\n    td,\n    th {\n      padding-left: 0.5rem;\n      padding-right: 0.5rem;\n      padding-top: 0.25rem;\n      padding-bottom: 0.25rem;\n      border-width: 1px;\n      border-color: ${isDarkMode\n        ? darkModeColor.mainColor2\n        : whiteModeColor.mainColor2};\n    }\n    tr:nth-of-type(even) {\n      background-color: ${isDarkMode ? \"#2f2f2f\" : \"#eee\"};\n    }\n    th {\n      background-color: ${isDarkMode ? \"#2f2f2f\" : \"#eee\"};\n    }\n    table {\n      margin-bottom: 1.5rem;\n    }\n\n    not(pre) code {\n      padding: 0.1rem;\n      border-radius: 0.25rem;\n      background-color: ${isDarkMode ? \"#404040\" : \"#eee\"};\n      white-space: pre-line;\n    }\n  `\n  return (\n    <div>\n      <div\n        css={MarkdownCSS}\n        className=\"markdown\"\n        dangerouslySetInnerHTML={{ __html: html }}\n      />\n    </div>\n  )\n}\n\nexport default Markdown\n","import React, { useContext } from \"react\"\nimport tw, { css } from \"twin.macro\"\nimport { Link } from \"gatsby\"\nimport ThemeContext from \"../lib/context/ThemContext\"\nimport { darkModeColor, whiteModeColor } from \"../../them-color\"\nimport { AiOutlineArrowRight, AiOutlineArrowLeft } from \"react-icons/ai\"\n\nconst Wrapper = tw.div`flex flex-wrap-reverse mt-16 md:flex-no-wrap md:justify-between`\n\nconst Button = tw.div`w-full md:w-1/2 m-2 md:m-4`\n\nconst Navigator = ({ pageContext }) => {\n  const { isDarkMode } = useContext(ThemeContext)\n  const { previous, next } = pageContext\n  return (\n    <Wrapper>\n      <Button>\n        {previous && (\n          <Link\n            css={css`\n              display: inline-block;\n              transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1);\n              text-align: left;\n              width: 100%;\n              height: 100%;\n              padding: 0.5rem;\n              background-color: ${isDarkMode ? \"#333\" : \"#eee\"};\n              border-radius: 0.25rem;\n              border-left-width: 4px;\n              border-color: ${isDarkMode\n                ? darkModeColor.mainColor2\n                : whiteModeColor.mainColor2};\n              &:hover {\n                background-color: ${isDarkMode ? \"#444\" : \"#ddd\"};\n              }\n            `}\n            to={previous.fields.slug}\n            rel=\"prev\"\n          >\n            <div css={tw`mr-4 ml-2 inline-block`}>\n              <AiOutlineArrowLeft css={tw`block w-8 h-8`} />\n            </div>\n            <div css={tw`inline-block my-2`}>\n              <p\n                css={css`\n                  color: ${isDarkMode\n                    ? darkModeColor.mainColor2\n                    : whiteModeColor.mainColor2};\n                `}\n              >\n                이전 포스트\n              </p>\n              <p>{previous.frontmatter.title}</p>\n            </div>\n          </Link>\n        )}\n      </Button>\n      <Button>\n        {next && (\n          <Link\n            css={css`\n              display: inline-block;\n              transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1);\n              text-align: right;\n              width: 100%;\n              height: 100%;\n              padding: 0.5rem;\n              background-color: ${isDarkMode ? \"#333\" : \"#eee\"};\n              border-radius: 0.25rem;\n              border-right-width: 4px;\n              border-color: ${isDarkMode\n                ? darkModeColor.mainColor2\n                : whiteModeColor.mainColor2};\n              &:hover {\n                background-color: ${isDarkMode ? \"#444\" : \"#ddd\"};\n              }\n            `}\n            to={next.fields.slug}\n            rel=\"next\"\n          >\n            <div css={tw`inline-block my-2`}>\n              <p\n                css={css`\n                  color: ${isDarkMode\n                    ? darkModeColor.mainColor2\n                    : whiteModeColor.mainColor2};\n                `}\n              >\n                다음 포스트\n              </p>\n              <p>{next.frontmatter.title}</p>\n            </div>\n            <div css={tw`ml-4 mr-2 inline-block`}>\n              <AiOutlineArrowRight css={tw`block w-8 h-8`} />\n            </div>\n          </Link>\n        )}\n      </Button>\n    </Wrapper>\n  )\n}\n\nexport default Navigator\n","import React, { useContext } from \"react\"\nimport { whiteModeColor, darkModeColor } from \"../../them-color\"\nimport ThemeContext from \"../lib/context/ThemContext\"\nimport tw, { css } from \"twin.macro\"\n\nconst TableOfContents = ({ toc, currentHeaderUrl }) => {\n  const { isDarkMode } = useContext(ThemeContext)\n  return toc ? (\n    <>\n      <div\n        css={css`\n          ::-webkit-scrollbar {\n            width: 4px;\n          }\n          ::-webkit-scrollbar-track {\n            background-color: transparent;\n          }\n          ::-webkit-scrollbar-thumb {\n            border-radius: 9999px;\n            background-color: gray;\n          }\n          ::-webkit-scrollbar-button {\n            width: 0;\n            height: 0;\n          }\n          /* Firefox scrollbar */\n          scrollbar-width: thin;\n          scrollbar-color: gray transparent;\n          display: none;\n          @media screen and (min-width: 1200px) {\n            float: right;\n            position: sticky;\n            top: 100px;\n            width: calc((100vw - 720px) / 2 - 80px);\n            max-width: 250px;\n            margin-right: 1rem;\n            overflow: auto;\n            word-break: break-word;\n            max-height: calc(100vh - 200px);\n            fontsize: 1rem;\n            display: flex;\n            border-left-width: 4px;\n            border-image: linear-gradient(180deg,\n              ${isDarkMode\n                ? darkModeColor.mainColor1 +\n                  \",\" +\n                  darkModeColor.mainColor2 +\n                  \",\" +\n                  darkModeColor.mainColor3\n                : whiteModeColor.mainColor1 +\n                  \",\" +\n                  whiteModeColor.mainColor2 +\n                  \",\" +\n                  whiteModeColor.mainColor3}\n            );\n            border-image-slice: 1;\n          }\n        `}\n      >\n        <div\n          css={css`\n          ul {\n            margin-left: 13px;\n          }\n          ul > li a:hover {\n            color: ${isDarkMode ? \"#DDDDDD\" : \"#555555\"};\n          }\n          ul > li a {\n            transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1);\n            ${tw`text-gray-500 text-sm`}\n          }\n          ul > li a[href=\"${currentHeaderUrl}\"] {\n            font-size: 0.95rem;\n            color: ${isDarkMode ? \"#DDDDDD\" : \"#555555\"};\n          }\n        `}\n          dangerouslySetInnerHTML={{ __html: toc }}\n        ></div>\n      </div>\n    </>\n  ) : null\n}\n\nexport default TableOfContents\n","import React, { useEffect, useContext } from \"react\"\nimport ThemeContext from \"../lib/context/ThemContext\"\n\nconst src = \"https://utteranc.es/client.js\"\nconst DARK_THEME = \"github-dark\"\nconst LIGHT_THEME = \"github-light\"\n\nconst Utterances = ({ repo }) => {\n  const rootElm = React.createRef()\n  const { isDarkMode } = useContext(ThemeContext)\n\n  useEffect(() => {\n    const utterances = document.createElement(\"script\")\n    const utterancesConfig = {\n      src,\n      repo,\n      theme: isDarkMode ? DARK_THEME : LIGHT_THEME,\n      label: \"💬Comment\",\n      async: true,\n      \"issue-term\": \"pathname\",\n      crossorigin: \"anonymous\",\n    }\n\n    Object.keys(utterancesConfig).forEach((configKey) => {\n      utterances.setAttribute(configKey, utterancesConfig[configKey])\n    })\n    rootElm.current.innerHTML = '';\n    rootElm.current.appendChild(utterances)\n  }, [isDarkMode])\n\n  return <div className=\"utterances\" ref={rootElm} />\n}\n\nexport default Utterances\n","import React, { useEffect, useState } from \"react\"\nimport { graphql } from \"gatsby\"\nimport SEO from \"../components/seo\"\nimport Profile from \"../components/Profile\"\nimport tw from \"twin.macro\"\nimport Markdown from \"../components/Markdown\"\nimport Navigator from \"../components/Navigator\"\nimport Divider from \"../components/Divider\"\nimport TableOfContents from \"../components/TableOfContents\"\nimport Layout from \"../components/Layout\"\nimport Utterances from \"../components/Utterances\"\n\nconst Wrapper = tw.div`w-full max-w-screen-md mx-auto`\nconst NAV_OFFSET_Y = 36\n\nexport default ({ data, pageContext }) => {\n  const { markdownRemark } = data\n  const { frontmatter, html, tableOfContents } = markdownRemark\n\n  const [currentHeaderUrl, setCurrentHeaderUrl] = useState(undefined)\n\n  const isTOCVisible = tableOfContents?.length > 0\n\n  useEffect(() => {\n    const handleScroll = () => {\n      let aboveHeaderUrl\n      const currentOffsetY = window.pageYOffset\n      const headerElements = document.querySelectorAll(\".toc-header\")\n      for (const elem of headerElements) {\n        const { top } = elem.getBoundingClientRect()\n        const elemTop = top + currentOffsetY\n        const isLast = elem === headerElements[headerElements.length - 1]\n        if (currentOffsetY < elemTop - NAV_OFFSET_Y) {\n          aboveHeaderUrl &&\n            setCurrentHeaderUrl(aboveHeaderUrl.split(window.location.origin)[1])\n          !aboveHeaderUrl && setCurrentHeaderUrl(undefined)\n          break\n        } else {\n          isLast &&\n            setCurrentHeaderUrl(elem.href.split(window.location.origin)[1])\n          !isLast && (aboveHeaderUrl = elem.href)\n        }\n      }\n    }\n    window.addEventListener(\"scroll\", handleScroll)\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll)\n    }\n  }, [])\n\n  return (\n    <>\n      <Layout>\n        <SEO title={frontmatter.title} />\n        <div css={tw`mt-4 px-4`} className=\"blog-post-container\">\n          <div className=\"blog-post\">\n            <Wrapper>\n              <h1 css={tw`text-4xl md:text-5xl font-bold mb-4`}>\n                {frontmatter.title}\n              </h1>\n              <h2 css={tw`text-base mb-4`}>\n                <span css={tw`font-semibold`}>JaeSeoKim</span> -{\" \"}\n                {frontmatter.date}\n              </h2>\n              <Divider color />\n            </Wrapper>\n            <div className={\"blog-content\"}>\n              {isTOCVisible && (\n                <TableOfContents\n                  toc={tableOfContents}\n                  currentHeaderUrl={currentHeaderUrl}\n                />\n              )}\n              <Wrapper>\n                <Markdown html={html} />\n              </Wrapper>\n            </div>\n          </div>\n        </div>\n        <Wrapper>\n          <Navigator pageContext={pageContext} />\n          <Profile />\n          <Utterances repo={\"JaeSeoKim/jaeseokim.github.io\"} />\n        </Wrapper>\n      </Layout>\n    </>\n  )\n}\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      tableOfContents\n      frontmatter {\n        date(formatString: \"MMMM DD YYYY\")\n        title\n      }\n    }\n  }\n`\n"],"sourceRoot":""}