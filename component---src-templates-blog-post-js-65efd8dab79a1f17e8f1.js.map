{"version":3,"sources":["webpack:///./src/components/ShareButtons.js","webpack:///./src/components/Markdown.js","webpack:///./src/components/Navigator.js","webpack:///./src/components/TableOfContents.js","webpack:///./src/components/Utterances.js","webpack:///./src/templates/blogPost.js"],"names":["timeId1","timeId2","Markdown","html","isDarkMode","useContext","ThemeContext","MarkdownCSS","css","darkModeColor","textColor1","whiteModeColor","mainColor2","className","dangerouslySetInnerHTML","__html","Wrapper","Button","Navigator","pageContext","previous","next","to","fields","slug","rel","frontmatter","title","TableOfContents","toc","currentHeaderUrl","mainColor1","mainColor3","Utterances","repo","rootElm","React","createRef","useEffect","utterances","document","createElement","utterancesConfig","src","theme","label","async","crossorigin","Object","keys","forEach","configKey","setAttribute","current","innerHTML","appendChild","ref","ShareButton","color","icon","target","onClick","ShareButtons","url","text","useState","visible","end","isCopy","setIsCopy","leftIn","keyframes","leftOut","Divider","margin","window","FB","ui","method","mobile_iframe","href","quote","open","encodeURI","copyText","value","body","select","setSelectionRange","execCommand","removeChild","clearTimeout","setTimeout","pageQuery","data","location","metaData","site","siteMetadata","markdownRemark","tableOfContents","excerpt","undefined","setCurrentHeaderUrl","isTOCVisible","length","handleScroll","aboveHeaderUrl","currentOffsetY","pageYOffset","headerElements","querySelectorAll","elem","elemTop","getBoundingClientRect","top","isLast","split","origin","addEventListener","removeEventListener","Layout","description","date","Tags","tags","tag","navigate","author","sponsor","buyMeACoffeeId","alt","Profile","comment"],"mappings":"kJAQIA,EAASC,E,yGC0IEC,EA7IE,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACVC,EAAeC,qBAAWC,KAA1BF,WACFG,EAAcC,YAAH,2HAULJ,EAAa,OAAS,OAVjB,qQA4CJA,EACLK,gBAAcC,WACdC,iBAAeD,WA9CN,uOAwEON,EAAa,OAAS,OAxE7B,4FA6EGA,EACZK,gBAAcG,WACdD,iBAAeC,WA/EN,mRAmGGR,EACZK,gBAAcG,WACdD,iBAAeC,WArGN,2CAwGOR,EAAa,UAAY,OAxGhC,yBA2GOA,EAAa,UAAY,OA3GhC,iHAqHGA,EACZK,gBAAcG,WACdD,iBAAeC,WAvHN,gCAyHJR,EACLK,gBAAcC,WACdC,iBAAeD,WA3HN,qBA4HON,EAAa,UAAY,OA5HhC,2BAgIjB,OACE,uBACE,mBACEI,IAAKD,EACLM,UAAU,WACVC,wBAAyB,CAAEC,OAAQZ,O,YCrIrCa,EAAO,wOAEPC,EAAM,6I,geA6FGC,EA3FG,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACXf,EAAeC,qBAAWC,KAA1BF,WACAgB,EAAmBD,EAAnBC,SAAUC,EAASF,EAATE,KAClB,OACE,YAACL,EAAD,KACE,YAACC,EAAD,KACGG,GACC,YAAC,OAAD,CACEZ,IAAKA,YAAF,8IAOmBJ,EAAa,OAAS,OAPzC,6DAUeA,EACZK,gBAAcG,WACdD,iBAAeC,WAZlB,6BAcqBR,EAAa,OAAS,OAd3C,MAiBHkB,GAAIF,EAASG,OAAOC,KACpBC,IAAI,QAEJ,mBAAKjB,IAAG,GACN,YAAC,IAAD,CAAoBA,IAAG,KAEzB,mBAAKA,IAAG,GACN,iBACEA,IAAKA,YAAF,SACQJ,EACLK,gBAAcC,WACdC,iBAAeD,WAHlB,MADL,UASA,qBAAIU,EAASM,YAAYC,UAKjC,YAACV,EAAD,KACGI,GACC,YAAC,OAAD,CACEb,IAAKA,YAAF,+IAOmBJ,EAAa,OAAS,OAPzC,8DAUeA,EACZK,gBAAcG,WACdD,iBAAeC,WAZlB,6BAcqBR,EAAa,OAAS,OAd3C,MAiBHkB,GAAID,EAAKE,OAAOC,KAChBC,IAAI,QAEJ,mBAAKjB,IAAG,GACN,iBACEA,IAAKA,YAAF,SACQJ,EACLK,gBAAcC,WACdC,iBAAeD,WAHlB,MADL,UASA,qBAAIW,EAAKK,YAAYC,QAEvB,mBAAKnB,IAAG,GACN,YAAC,IAAD,CAAqBA,IAAG,S,YCTvBoB,EA/ES,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,IAAKC,EAAuB,EAAvBA,iBACtB1B,EAAeC,qBAAWC,KAA1BF,WACR,OAAOyB,EACL,8BACE,mBACErB,IAAKA,YAAF,6jBAkCKJ,EACEK,gBAAcsB,WACd,IACAtB,gBAAcG,WACd,IACAH,gBAAcuB,WACdrB,iBAAeoB,WACf,IACApB,iBAAeC,WACf,IACAD,iBAAeqB,WA5CtB,8BAkDH,mBACExB,IAAKA,YAAF,8CAKQJ,EAAa,UAAY,UALjC,kKAWe0B,EAXf,8BAaQ1B,EAAa,UAAY,UAbjC,MAgBHU,wBAAyB,CAAEC,OAAQc,OAIvC,M,YC9CSI,EA5BI,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACdC,EAAUC,IAAMC,YACdjC,EAAeC,qBAAWC,KAA1BF,WAuBR,OArBAkC,qBAAU,WACR,IAAMC,EAAaC,SAASC,cAAc,UACpCC,EAAmB,CACvBC,IAXM,gCAYNT,OACAU,MAAOxC,EAZM,cACC,eAYdyC,MAAO,YACPC,OAAO,EACP,aAAc,WACdC,YAAa,aAGfC,OAAOC,KAAKP,GAAkBQ,SAAQ,SAACC,GACrCZ,EAAWa,aAAaD,EAAWT,EAAiBS,OAElDhB,EAAQkB,UACVlB,EAAQkB,QAAQC,UAAY,GAC5BnB,EAAQkB,QAAQE,YAAYhB,MAE7B,CAACnC,EAAY+B,EAASD,IAElB,mBAAKrB,UAAU,aAAa2C,IAAKrB,K,kvBJtB1C,IAAMsB,EAAc,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1C,OACE,sBACErD,IAAKA,YAAF,0RAEiBkD,GAEpBG,QAASA,GAERF,EAPH,cAQcC,I,+mBAwIHE,EAnIM,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,IAAKC,EAAW,EAAXA,KACnB5D,EAAeC,qBAAWC,KAA1BF,WAD8B,EAEV6D,mBAAS,CACnCC,SAAS,EACTC,KAAK,IAFAC,EAF+B,KAEvBC,EAFuB,KAqDhCC,EAASC,YAAH,KAeNC,EAAUD,YAAH,KAkBb,OACE,uBACE,mBAAK/D,IAAG,GACN,YAACiE,EAAA,EAAD,CAASf,OAAK,EAACgB,QAAM,KAEvB,mBAAKlE,IAAG,GACN,YAAC,EAAD,CACEkD,MAAO,UACPC,KAAM,YAAC,IAAD,CAAanD,IAAG,IACtBoD,OAAQ,WACRC,QA1FiB,WACvBc,OAAOC,GAAGC,GAAG,CACXC,OAAQ,QACRC,eAAe,EACfC,KAAMjB,EACNkB,MAAOjB,OAuFL,YAAC,EAAD,CACEN,MAAO,UACPC,KAAM,YAAC,IAAD,CAAWnD,IAAG,IACpBoD,OAAQ,UACRC,QAvFe,WACrBc,OAAOO,KAAP,iCACmCC,UAAUA,UAAUpB,IADvD,SACqEC,EACnE,SACA,8CAqFE,YAAC,EAAD,CACEN,MAAO,UACPC,KAAM,YAAC,IAAD,CAAQnD,IAAG,IACjBoD,OAAQ,MACRC,QArFW,WACjB,IAAMuB,EAAW5C,SAASC,cAAc,SACxC2C,EAASC,MAAQtB,EAEjBvB,SAAS8C,KAAK/B,YAAY6B,GAC1BA,EAASG,SACTH,EAASI,kBAAkB,EAAG,OAC9BhD,SAASiD,YAAY,QACrBjD,SAAS8C,KAAKI,YAAYN,GAE1Bf,EAAU,CACRH,SAAS,EACTC,KAAK,IAEPwB,aAAa3F,GACb2F,aAAa1F,GACbD,EAAU4F,YAAW,WACnBvB,EAAU,CACRH,SAAS,EACTC,KAAK,MAEN,MACHlE,EAAU2F,YAAW,WACnBvB,EAAU,CACRH,SAAS,EACTC,KAAK,MAEN,SA6DAC,EAAOF,SACN,mBACE1D,IAAKA,YAAF,aACQ4D,EAAOD,IAAMK,EAAUF,EAD/B,waAKDlE,EAAaK,gBAAcG,WAAaD,iBAAeC,WALtD,mBAUH,YAAC,IAAD,CAAQJ,IAAG,IACX,mBAAKA,IAAG,GAAR,oB,k0BKvIV,IAAMQ,EAAO,iI,w1BAoHA6E,IAjHE,sBAAsC,IAAnCC,EAAkC,EAAlCA,KAAM3E,EAA4B,EAA5BA,YAAa4E,EAAe,EAAfA,SAC7BC,EAAWF,EAAKG,KAAKC,aACnBC,EAAmBL,EAAnBK,eACAzE,EAAgDyE,EAAhDzE,YAAavB,EAAmCgG,EAAnChG,KAAMiG,EAA6BD,EAA7BC,gBAAiBC,EAAYF,EAAZE,QAHM,EAKFpC,wBAASqC,GAAlDxE,EAL2C,KAKzByE,EALyB,KAO5CC,GAAeJ,aAAA,EAAAA,EAAiBK,QAAS,EAiC/C,OA3BAnE,qBAAU,WACR,IAAMoE,EAAe,WAInB,IAHA,IAAIC,EAGJ,EAFMC,EAAiBjC,OAAOkC,YACxBC,EAAiBtE,SAASuE,iBAAiB,eACjD,IAAmBD,KAAnB,aAAmC,CAAC,IAAzBE,EAAwB,QAE3BC,EADUD,EAAKE,wBAAbC,IACcP,EAChBQ,EAASJ,IAASF,EAAeA,EAAeL,OAAS,GAC/D,GAAIG,EAAiBK,EAxBR,GAwBgC,CAC3CN,GACEJ,EAAoBI,EAAeU,MAAM1C,OAAOoB,SAASuB,QAAQ,KAClEX,GAAkBJ,OAAoBD,GACvC,MAEAc,GACEb,EAAoBS,EAAKhC,KAAKqC,MAAM1C,OAAOoB,SAASuB,QAAQ,KAC7DF,IAAWT,EAAiBK,EAAKhC,QAKxC,OADAL,OAAO4C,iBAAiB,SAAUb,GAC3B,WACL/B,OAAO6C,oBAAoB,SAAUd,MAEtC,IAGD,8BACE,YAACe,EAAA,EAAD,KACE,YAAC,IAAD,CAAK9F,MAAOD,EAAYC,MAAO+F,YAAarB,IAC5C,mBAAK7F,IAAG,EAAiBK,UAAU,uBACjC,mBAAKA,UAAU,aACb,YAAC,EAAD,KACE,kBACEA,UAAU,aACVL,IAAG,GAEFkB,EAAYC,OAEf,kBAAId,UAAU,YAAYL,IAAG,GAC1BkB,EAAYiG,MAEf,mBAAK9G,UAAU,YAAYL,IAAG,GAC5B,YAACoH,EAAA,EAAD,CAAMC,KAAMnG,EAAYmG,KAAMhE,QAhDrB,SAACiE,GACtBC,mBAAS,SAASD,OAiDR,YAACrD,EAAA,EAAD,CAASf,OAAK,KAEhB,mBAAK7C,UAAW,gBACb2F,GACC,YAAC,EAAD,CACE3E,IAAKuE,EACLtE,iBAAkBA,IAGtB,YAAC,EAAD,KACE,YAAC,EAAD,CAAU3B,KAAMA,MAGpB,YAAC,EAAD,KACE,YAAC,EAAD,CACE4D,IAAKgC,EAASf,KACdhB,KAAI,mBACJtC,EAAYC,MADR,MACmBqE,EAASgC,OAD5B,qBAEJ3B,IAEDL,EAASiC,QAAQC,gBAChB,mBAAK1H,IAAG,GACN,iBACEA,IAAG,EAIHoD,OAAO,SACPnC,IAAI,sBACJuD,KAAI,gCAAkCgB,EAASiC,QAAQC,gBAEvD,mBACE1H,IAAG,EACHmC,IAAI,2DACJwF,IAAI,oBAEN,gDAOZ,YAAC,EAAD,KACE,YAAC,EAAD,CAAWhH,YAAaA,IACxB,YAACiH,EAAA,EAAD,MACA,mBAAK5H,IAAG,GACN,YAAC,EAAD,CAAY0B,KAAM8D,EAASqC,QAAQ9F,kBAOzB","file":"component---src-templates-blog-post-js-65efd8dab79a1f17e8f1.js","sourcesContent":["import React, { useContext, useState } from \"react\"\nimport tw, { css } from \"twin.macro\"\nimport { keyframes } from \"@emotion/core\"\nimport Divider from \"./Divider\"\nimport { FaFacebookF, FaTwitter, FaLink, FaInfo } from \"react-icons/fa\"\nimport { whiteModeColor, darkModeColor } from \"../../them-color\"\nimport ThemeContext from \"../lib/context/ThemContext\"\n\nvar timeId1, timeId2\n\nconst ShareButton = ({ color, icon, target, onClick }) => {\n  return (\n    <button\n      css={css`\n      ${tw`flex px-3 py-1 my-2 ml-2 rounded text-white focus:outline-none`}\n      background-color: ${color}\n      `}\n      onClick={onClick}\n    >\n      {icon}\n      Share with {target}\n    </button>\n  )\n}\n\nconst ShareButtons = ({ url, text }) => {\n  const { isDarkMode } = useContext(ThemeContext)\n  const [isCopy, setIsCopy] = useState({\n    visible: false,\n    end: true,\n  })\n  const onFackebookClick = () => {\n    window.FB.ui({\n      method: \"share\",\n      mobile_iframe: true,\n      href: url,\n      quote: text,\n    })\n  }\n\n  const onTwitterClick = () => {\n    window.open(\n      `https://twitter.com/share?url=${encodeURI(encodeURI(url))}&text=${text}`,\n      \"sharer\",\n      \"toolbar=0,status=0,width=626,height=436\"\n    )\n  }\n\n  const onUrlClick = () => {\n    const copyText = document.createElement(\"input\")\n    copyText.value = url\n\n    document.body.appendChild(copyText)\n    copyText.select()\n    copyText.setSelectionRange(0, 99999)\n    document.execCommand(\"copy\")\n    document.body.removeChild(copyText)\n\n    setIsCopy({\n      visible: true,\n      end: false,\n    })\n    clearTimeout(timeId1)\n    clearTimeout(timeId2)\n    timeId1 = setTimeout(() => {\n      setIsCopy({\n        visible: true,\n        end: true,\n      })\n    }, 1500)\n    timeId2 = setTimeout(() => {\n      setIsCopy({\n        visible: false,\n        end: false,\n      })\n    }, 2000)\n  }\n\n  const leftIn = keyframes`\n  0% {\n    transform: translateX(-2000px) scale(0.7);\n    opacity: 0.7;\n  }\n  80% {\n    transform: translateX(0px) scale(0.7);\n    opacity: 0.7;\n  }\n  100% {\n    transform: scale(1);\n    opacity: 1;\n  }\n  `\n\n  const leftOut = keyframes`\n  0% {\n    -webkit-transform: scale(1);\n    transform: scale(1);\n    opacity: 1;\n  }\n  20% {\n    -webkit-transform: translateX(0px) scale(0.7);\n    transform: translateX(0px) scale(0.7);\n    opacity: 0.7;\n  }\n  100% {\n    -webkit-transform: translateX(-2000px) scale(0.7);\n    transform: translateX(-2000px) scale(0.7);\n    opacity: 0.7;\n  }\n  `\n\n  return (\n    <div>\n      <div css={tw`my-4`}>\n        <Divider color margin />\n      </div>\n      <div css={tw`flex flex-wrap justify-end mt-4 px-2`}>\n        <ShareButton\n          color={\"#2D87FD\"}\n          icon={<FaFacebookF css={tw`fill-current my-auto mr-1`} />}\n          target={\"Facebook\"}\n          onClick={onFackebookClick}\n        />\n        <ShareButton\n          color={\"#1CA1F2\"}\n          icon={<FaTwitter css={tw`fill-current my-auto mr-1`} />}\n          target={\"Twitter\"}\n          onClick={onTwitterClick}\n        />\n        <ShareButton\n          color={\"#6E7783\"}\n          icon={<FaLink css={tw`fill-current my-auto mr-1`} />}\n          target={\"Url\"}\n          onClick={onUrlClick}\n        />\n      </div>\n      {isCopy.visible && (\n        <div\n          css={css`\n        animation: ${isCopy.end ? leftOut : leftIn} 500ms;\n        ${tw`fixed my-auto top-0 left-0 ml-4 mt-4`}\n        ${tw`inline-flex shadow items-center rounded text-white text-sm font-bold px-4 py-3`}\n          background-color: ${\n            isDarkMode ? darkModeColor.mainColor2 : whiteModeColor.mainColor2\n          };\n          z-index: 9999;\n        `}\n        >\n          <FaInfo css={tw`fill-current mr-2`} />\n          <div css={tw`ml-2`}>링크가 복사 되었습니다.</div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default ShareButtons\n","import React, { useContext } from \"react\"\nimport { css } from \"twin.macro\"\nimport ThemeContext from \"../lib/context/ThemContext\"\nimport { whiteModeColor, darkModeColor } from \"../../them-color\"\n\nconst Markdown = ({ html }) => {\n  const { isDarkMode } = useContext(ThemeContext)\n  const MarkdownCSS = css`\n    font-size: 1rem;\n    word-break: break-word;\n\n    h1 > a > svg,\n    h2 > a > svg,\n    h3 > a > svg,\n    h4 > a > svg,\n    h5 > a > svg,\n    h6 > a > svg {\n      fill: ${isDarkMode ? \"#fff\" : \"#000\"};\n    }\n\n    h1,\n    h2 {\n      font-size: 1.25rem;\n      font-weight: 600;\n      margin-top: 1.5rem;\n      margin-bottom: 1.5rem;\n    }\n    h3,\n    h4,\n    h5,\n    h6 {\n      font-size: 1.125rem;\n      margin-top: 1.5rem;\n      margin-bottom: 1.5rem;\n      font-weight: 600;\n    }\n\n    @media (min-width: 640px) {\n      h1,\n      h2 {\n        font-size: 1.5rem;\n      }\n      h3,\n      h4,\n      h5,\n      h6 {\n        font-size: 1.25rem;\n      }\n    }\n\n    a {\n      color: ${isDarkMode\n        ? darkModeColor.textColor1\n        : whiteModeColor.textColor1};\n    }\n    a:hover {\n      text-decoration: underline;\n    }\n    p {\n      margin: 0.3rem;\n    }\n    ul,\n    ol {\n      margin: 0.3rem;\n      margin-left: 2rem;\n    }\n    li > p,\n    li > ul,\n    li > ol {\n      margin-bottom: 0;\n    }\n    ol {\n      list-style-type: decimal;\n    }\n    ul {\n      list-style-type: disc;\n    }\n    blockquote {\n      padding: 0.5rem;\n      background-color: ${isDarkMode ? \"#333\" : \"#eee\"};\n      margin: 0.3rem;\n      margin-top: 0.5rem;\n      margin-bottom: 0.5rem;\n      border-left-width: 4px;\n      border-color: ${isDarkMode\n        ? darkModeColor.mainColor2\n        : whiteModeColor.mainColor2};\n    }\n    blockquote > p {\n      margin: 0.5rem;\n    }\n    blockquote > h1,\n    blockquote > h2,\n    blockquote > h3,\n    blockquote > h4,\n    blockquote > h5 {\n      margin-top: 0.5rem;\n      margin-bottom: 0.5rem;\n    }\n    td,\n    th {\n      padding-left: 0.5rem;\n      padding-right: 0.5rem;\n      padding-top: 0.25rem;\n      padding-bottom: 0.25rem;\n      border-width: 1px;\n      border-color: ${isDarkMode\n        ? darkModeColor.mainColor2\n        : whiteModeColor.mainColor2};\n    }\n    tr:nth-of-type(even) {\n      background-color: ${isDarkMode ? \"#2f2f2f\" : \"#eee\"};\n    }\n    th {\n      background-color: ${isDarkMode ? \"#2f2f2f\" : \"#eee\"};\n    }\n    table {\n      margin-bottom: 1.5rem;\n    }\n\n    p > code {\n      padding-right: 0.1rem;\n      padding-left: 0.1rem;\n      border-width: 1px;\n      border-color: ${isDarkMode\n        ? darkModeColor.mainColor2\n        : whiteModeColor.mainColor2};\n      border-radius: 0.25rem;\n      color: ${isDarkMode\n        ? darkModeColor.textColor1\n        : whiteModeColor.textColor1};\n      background-color: ${isDarkMode ? \"#404040\" : \"#eee\"};\n      white-space: pre-line;\n    }\n  `\n  return (\n    <div>\n      <div\n        css={MarkdownCSS}\n        className=\"markdown\"\n        dangerouslySetInnerHTML={{ __html: html }}\n      />\n    </div>\n  )\n}\n\nexport default Markdown\n","import React, { useContext } from \"react\"\nimport tw, { css } from \"twin.macro\"\nimport { Link } from \"gatsby\"\nimport ThemeContext from \"../lib/context/ThemContext\"\nimport { darkModeColor, whiteModeColor } from \"../../them-color\"\nimport { AiOutlineArrowRight, AiOutlineArrowLeft } from \"react-icons/ai\"\n\nconst Wrapper = tw.div`flex flex-wrap-reverse mx-2 mt-4 md:flex-no-wrap md:justify-between`\n\nconst Button = tw.div`w-full md:w-1/2 m-2 md:m-4`\n\nconst Navigator = ({ pageContext }) => {\n  const { isDarkMode } = useContext(ThemeContext)\n  const { previous, next } = pageContext\n  return (\n    <Wrapper>\n      <Button>\n        {previous && (\n          <Link\n            css={css`\n              display: inline-block;\n              transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1);\n              text-align: left;\n              width: 100%;\n              height: 100%;\n              padding: 0.5rem;\n              background-color: ${isDarkMode ? \"#333\" : \"#eee\"};\n              border-radius: 0.25rem;\n              border-left-width: 4px;\n              border-color: ${isDarkMode\n                ? darkModeColor.mainColor2\n                : whiteModeColor.mainColor2};\n              &:hover {\n                background-color: ${isDarkMode ? \"#444\" : \"#ddd\"};\n              }\n            `}\n            to={previous.fields.slug}\n            rel=\"prev\"\n          >\n            <div css={tw`mr-4 ml-2 inline-block`}>\n              <AiOutlineArrowLeft css={tw`block w-8 h-8`} />\n            </div>\n            <div css={tw`inline-block my-2`}>\n              <p\n                css={css`\n                  color: ${isDarkMode\n                    ? darkModeColor.textColor1\n                    : whiteModeColor.textColor1};\n                `}\n              >\n                이전 포스트\n              </p>\n              <p>{previous.frontmatter.title}</p>\n            </div>\n          </Link>\n        )}\n      </Button>\n      <Button>\n        {next && (\n          <Link\n            css={css`\n              display: inline-block;\n              transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1);\n              text-align: right;\n              width: 100%;\n              height: 100%;\n              padding: 0.5rem;\n              background-color: ${isDarkMode ? \"#333\" : \"#eee\"};\n              border-radius: 0.25rem;\n              border-right-width: 4px;\n              border-color: ${isDarkMode\n                ? darkModeColor.mainColor2\n                : whiteModeColor.mainColor2};\n              &:hover {\n                background-color: ${isDarkMode ? \"#444\" : \"#ddd\"};\n              }\n            `}\n            to={next.fields.slug}\n            rel=\"next\"\n          >\n            <div css={tw`inline-block my-2`}>\n              <p\n                css={css`\n                  color: ${isDarkMode\n                    ? darkModeColor.textColor1\n                    : whiteModeColor.textColor1};\n                `}\n              >\n                다음 포스트\n              </p>\n              <p>{next.frontmatter.title}</p>\n            </div>\n            <div css={tw`ml-4 mr-2 inline-block`}>\n              <AiOutlineArrowRight css={tw`block w-8 h-8`} />\n            </div>\n          </Link>\n        )}\n      </Button>\n    </Wrapper>\n  )\n}\n\nexport default Navigator\n","import React, { useContext } from \"react\"\nimport { whiteModeColor, darkModeColor } from \"../../them-color\"\nimport ThemeContext from \"../lib/context/ThemContext\"\nimport tw, { css } from \"twin.macro\"\n\nconst TableOfContents = ({ toc, currentHeaderUrl }) => {\n  const { isDarkMode } = useContext(ThemeContext)\n  return toc ? (\n    <>\n      <div\n        css={css`\n          ::-webkit-scrollbar {\n            width: 4px;\n          }\n          ::-webkit-scrollbar-track {\n            background-color: transparent;\n          }\n          ::-webkit-scrollbar-thumb {\n            border-radius: 9999px;\n            background-color: gray;\n          }\n          ::-webkit-scrollbar-button {\n            width: 0;\n            height: 0;\n          }\n          /* Firefox scrollbar */\n          scrollbar-width: thin;\n          scrollbar-color: gray transparent;\n          display: none;\n          @media screen and (min-width: 1200px) {\n            float: right;\n            position: sticky;\n            top: 100px;\n            width: calc((100vw - 720px) / 2 - 80px);\n            max-width: 250px;\n            margin-right: 1rem;\n            overflow: auto;\n            word-break: break-word;\n            max-height: calc(100vh - 200px);\n            fontsize: 1rem;\n            display: flex;\n            border-left-width: 4px;\n            border-image: linear-gradient(\n              180deg,\n              ${isDarkMode\n                ? darkModeColor.mainColor1 +\n                  \",\" +\n                  darkModeColor.mainColor2 +\n                  \",\" +\n                  darkModeColor.mainColor3\n                : whiteModeColor.mainColor1 +\n                  \",\" +\n                  whiteModeColor.mainColor2 +\n                  \",\" +\n                  whiteModeColor.mainColor3}\n            );\n            border-image-slice: 1;\n          }\n        `}\n      >\n        <div\n          css={css`\n          ul {\n            margin-left: 13px;\n          }\n          ul > li a:hover {\n            color: ${isDarkMode ? \"#DDDDDD\" : \"#555555\"};\n          }\n          ul > li a {\n            transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1);\n            ${tw`text-gray-500 text-sm`}\n          }\n          ul > li a[href=\"${currentHeaderUrl}\"] {\n            font-size: 0.95rem;\n            color: ${isDarkMode ? \"#DDDDDD\" : \"#555555\"};\n          }\n        `}\n          dangerouslySetInnerHTML={{ __html: toc }}\n        ></div>\n      </div>\n    </>\n  ) : null\n}\n\nexport default TableOfContents\n","import React, { useEffect, useContext } from \"react\"\nimport ThemeContext from \"../lib/context/ThemContext\"\n\nconst src = \"https://utteranc.es/client.js\"\nconst DARK_THEME = \"github-dark\"\nconst LIGHT_THEME = \"github-light\"\n\nconst Utterances = ({ repo }) => {\n  const rootElm = React.createRef()\n  const { isDarkMode } = useContext(ThemeContext)\n\n  useEffect(() => {\n    const utterances = document.createElement(\"script\")\n    const utterancesConfig = {\n      src,\n      repo,\n      theme: isDarkMode ? DARK_THEME : LIGHT_THEME,\n      label: \"💬Comment\",\n      async: true,\n      \"issue-term\": \"pathname\",\n      crossorigin: \"anonymous\",\n    }\n\n    Object.keys(utterancesConfig).forEach((configKey) => {\n      utterances.setAttribute(configKey, utterancesConfig[configKey])\n    })\n    if (rootElm.current) {\n      rootElm.current.innerHTML = \"\"\n      rootElm.current.appendChild(utterances)\n    }\n  }, [isDarkMode, rootElm, repo])\n\n  return <div className=\"utterances\" ref={rootElm} />\n}\n\nexport default Utterances\n","import React, { useEffect, useState } from \"react\"\nimport { graphql, navigate } from \"gatsby\"\nimport SEO from \"../components/seo\"\nimport Profile from \"../components/Profile\"\nimport tw, { css } from \"twin.macro\"\nimport Markdown from \"../components/Markdown\"\nimport Navigator from \"../components/Navigator\"\nimport Divider from \"../components/Divider\"\nimport TableOfContents from \"../components/TableOfContents\"\nimport Layout from \"../components/Layout\"\nimport Utterances from \"../components/Utterances\"\nimport Tags from \"../components/Tags\"\nimport ShareButtons from \"../components/ShareButtons\"\n\nconst Wrapper = tw.div`w-full max-w-screen-md mx-auto`\nconst NAV_OFFSET_Y = 36\n\nexport default ({ data, pageContext, location }) => {\n  const metaData = data.site.siteMetadata\n  const { markdownRemark } = data\n  const { frontmatter, html, tableOfContents, excerpt } = markdownRemark\n\n  const [currentHeaderUrl, setCurrentHeaderUrl] = useState(undefined)\n\n  const isTOCVisible = tableOfContents?.length > 0\n\n  const handleTagClick = (tag) => {\n    navigate(`/?tag=${tag}`)\n  }\n\n  useEffect(() => {\n    const handleScroll = () => {\n      let aboveHeaderUrl\n      const currentOffsetY = window.pageYOffset\n      const headerElements = document.querySelectorAll(\".toc-header\")\n      for (const elem of headerElements) {\n        const { top } = elem.getBoundingClientRect()\n        const elemTop = top + currentOffsetY\n        const isLast = elem === headerElements[headerElements.length - 1]\n        if (currentOffsetY < elemTop - NAV_OFFSET_Y) {\n          aboveHeaderUrl &&\n            setCurrentHeaderUrl(aboveHeaderUrl.split(window.location.origin)[1])\n          !aboveHeaderUrl && setCurrentHeaderUrl(undefined)\n          break\n        } else {\n          isLast &&\n            setCurrentHeaderUrl(elem.href.split(window.location.origin)[1])\n          !isLast && (aboveHeaderUrl = elem.href)\n        }\n      }\n    }\n    window.addEventListener(\"scroll\", handleScroll)\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll)\n    }\n  }, [])\n\n  return (\n    <>\n      <Layout>\n        <SEO title={frontmatter.title} description={excerpt} />\n        <div css={tw`mt-4 px-4`} className=\"blog-post-container\">\n          <div className=\"blog-post\">\n            <Wrapper>\n              <h1\n                className=\"blog-title\"\n                css={tw`text-4xl md:text-5xl font-bold mb-4`}\n              >\n                {frontmatter.title}\n              </h1>\n              <h2 className=\"blog-date\" css={tw`text-base mb-4`}>\n                {frontmatter.date}\n              </h2>\n              <div className=\"blog-tags\" css={tw`mb-2`}>\n                <Tags tags={frontmatter.tags} onClick={handleTagClick} />\n              </div>\n              <Divider color />\n            </Wrapper>\n            <div className={\"blog-content\"}>\n              {isTOCVisible && (\n                <TableOfContents\n                  toc={tableOfContents}\n                  currentHeaderUrl={currentHeaderUrl}\n                />\n              )}\n              <Wrapper>\n                <Markdown html={html} />\n              </Wrapper>\n            </div>\n            <Wrapper>\n              <ShareButtons\n                url={location.href}\n                text={`\n              ${frontmatter.title} - ${metaData.author}\\n\n              ${excerpt}`}\n              />\n              {metaData.sponsor.buyMeACoffeeId && (\n                <div css={tw`flex justify-end px-2`}>\n                  <a\n                    css={css`\n                      ${tw`flex px-3 py-1 my-2 rounded text-white focus:outline-none`}\n                      background-color: #FF813E;\n                    `}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    href={`https://www.buymeacoffee.com/${metaData.sponsor.buyMeACoffeeId}`}\n                  >\n                    <img\n                      css={tw`mr-2`}\n                      src=\"https://www.buymeacoffee.com/assets/img/BMC-btn-logo.svg\"\n                      alt=\"Buy me a coffee\"\n                    />\n                    <span>Buy me a coffee</span>\n                  </a>\n                </div>\n              )}\n            </Wrapper>\n          </div>\n        </div>\n        <Wrapper>\n          <Navigator pageContext={pageContext} />\n          <Profile />\n          <div css={tw`mt-5 mx-2`}>\n            <Utterances repo={metaData.comment.utterances} />\n          </div>\n        </Wrapper>\n      </Layout>\n    </>\n  )\n}\nexport const pageQuery = graphql`\n  query PostQuery($slug: String!) {\n    site {\n      siteMetadata {\n        author\n        comment {\n          utterances\n        }\n        sponsor {\n          buyMeACoffeeId\n        }\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      excerpt(pruneLength: 200, truncate: true)\n      html\n      tableOfContents\n      frontmatter {\n        date(formatString: \"MMMM DD YYYY\")\n        title\n        tags\n      }\n    }\n  }\n`\n"],"sourceRoot":""}