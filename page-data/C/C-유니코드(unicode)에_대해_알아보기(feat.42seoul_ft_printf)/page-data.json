{"componentChunkName":"component---src-templates-blog-post-js","path":"/C/C-유니코드(unicode)에_대해_알아보기(feat.42seoul_ft_printf)/","result":{"data":{"site":{"siteMetadata":{"author":"JaeSeoKim","comment":{"utterances":"JaeSeoKim/jaeseokim.github.io"},"sponsor":{"buyMeACoffeeId":"jaeseokim"}}},"markdownRemark":{"excerpt":"intro 42Seoul에서 열심히 공부를 하면서 ft_print 서브젝트를 진행하면서 유니코드를 write() 함수로 직접 출력 해야 하는 부분이 있어서 공부를 하게 되었다. UNICODE? 유니코드(Unicode)는 전 세계의 모든 문자를 컴퓨터에서 일관되게 표현하고 다룰 수 있도록 설계된 산업 표준이며, 유니코드 협회(Unicode Consortiu…","html":"<h1 id=\"intro\" style=\"position:relative;\"><a href=\"#intro\" aria-label=\"intro permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>intro</h1>\n<p>42Seoul에서 열심히 공부를 하면서 <code>ft_print</code> 서브젝트를 진행하면서 유니코드를 write() 함수로 직접 출력 해야 하는 부분이 있어서 공부를 하게 되었다.</p>\n<h1 id=\"unicode\" style=\"position:relative;\"><a href=\"#unicode\" aria-label=\"unicode permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>UNICODE?</h1>\n<blockquote>\n<p>유니코드(Unicode)는 전 세계의 모든 문자를 컴퓨터에서 일관되게 표현하고 다룰 수 있도록 설계된 산업 표준이며, 유니코드 협회(Unicode Consortium)가 제정한다. 또한 이 표준에는 ISO 10646 문자 집합, 문자 인코딩, 문자 정보 데이터베이스, 문자들을 다루기 위한 알고리즘 등을 포함하고 있다.\n<a href=\"https://ko.wikipedia.org/wiki/%EC%9C%A0%EB%8B%88%EC%BD%94%EB%93%9C\"><em>- 출처 위키백과</em></a></p>\n</blockquote>\n<p>기본적으로 유니코드의 탄생 과정은 기존 ASCII코드 (0~255) 1byte의 크기를 가지고 컴퓨터에서 문자에 대하여 표현을 하고 있었다.</p>\n<p>하지만 Ascii는 기본적으로 영문자를 지원하기 때문에 각 나라에서는 이것을 해결하기 위하여 Ascii를 수정하여 자신의 나라의 언어로 배정하여 사용하는 등.. 다양한 방식으로 문자를 표현 하기 시작하였는데 이제 인터넷이 발달이 되면서 각 나라의 사람들이 동시에 같은 코드를 보게 되면 각기 다른 문자로 표현되는 일이 발생하였다.</p>\n<p>이 점을 해결하기 위해 나온것이 유니코드 이다.</p>\n<p>유니코드는 문자와 코드가 1대1로 매칭 되어 있는 코드표 이다.</p>\n<h1 id=\"utf-8하고-unicode는-어떤-차이\" style=\"position:relative;\"><a href=\"#utf-8%ED%95%98%EA%B3%A0-unicode%EB%8A%94-%EC%96%B4%EB%96%A4-%EC%B0%A8%EC%9D%B4\" aria-label=\"utf 8하고 unicode는 어떤 차이 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>UTF-8하고 Unicode는 어떤 차이?</h1>\n<p><code>unicde</code>는 위에서 말했던 것과 같이 전세계에서 공통으로 사용되는 규칙 이다.</p>\n<p>하지만 이 규칙을 컴퓨터에서는 표현하는데 다양한 방법을 사용하는 데 그것을 인코딩이라고 한다.</p>\n<p>그 중 UTF-8은 대표적인 인코딩 방식 중 하나이다.</p>\n<h1 id=\"utf-8\" style=\"position:relative;\"><a href=\"#utf-8\" aria-label=\"utf 8 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>UTF-8</h1>\n<p><code>UTF-8</code> 은 유니코드를 표현하기 위한 <code>가변 길이 문자 인코딩</code> 방식 중 하나이다.</p>\n<table>\n<thead>\n<tr>\n<th>코드값의 자릿수</th>\n<th>범위</th>\n<th>첫 바이트</th>\n<th>둘째 바이트</th>\n<th>셋째 바이트</th>\n<th>넷째 바이트</th>\n<th>다섯째 바이트</th>\n<th>여섯째 바이트</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>7비트</td>\n<td>0 ~ 0x7F<sup>127</sup></td>\n<td>0xxxxxxx</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>11비트</td>\n<td>0x80<sup>128</sup> ~ 0x7FF<sup>2,047</sup></td>\n<td>110xxxxx</td>\n<td>10xxxxxx</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>16비트</td>\n<td>0x800<sup>2,048</sup> ~ 0xFFFF<sup>65,535</sup></td>\n<td>1110xxxx</td>\n<td>10xxxxxx</td>\n<td>10xxxxxx</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>21비트</td>\n<td>0x10000<sup>65,536</sup> ~ 0x1FFFFF<sup>2,097,151</sup></td>\n<td>11110xxx</td>\n<td>10xxxxxx</td>\n<td>10xxxxxx</td>\n<td>10xxxxxx</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>26비트</td>\n<td>(미사용)</td>\n<td>111110xx</td>\n<td>10xxxxxx</td>\n<td>10xxxxxx</td>\n<td>10xxxxxx</td>\n<td>10xxxxxx</td>\n<td></td>\n</tr>\n<tr>\n<td>31비트</td>\n<td>(미사용)</td>\n<td>1111110x</td>\n<td>10xxxxxx</td>\n<td>10xxxxxx</td>\n<td>10xxxxxx</td>\n<td>10xxxxxx</td>\n<td>10xxxxxx</td>\n</tr>\n</tbody>\n</table>\n<p><code>UTF-8</code> 은 최소 1byte ~ 4byte 까지를 가변적으로 사용하게 되는 데 이때 각 표현이 가능한 문자열의 크기에 따라 정해 지게 된다.</p>\n<p>예를 들어서 <code>☠</code> 문자를 보면 unicode 값으로는 <code>9760</code> 이다.\n아래와 같이 <code>UTF-8</code> 인코딩 방식을 통해 3byte의 크기로 변환이 된다.</p>\n<p><img src=\"/a8e35df4618104bbba394bb3025364d8/utf-8-encoding.drawio.svg\" alt=\"utf-8-encoding\"></p>\n<p>이제 위 방법을 C로 구현을 해본다!</p>\n<h1 id=\"utf-8-encoding-with-c\" style=\"position:relative;\"><a href=\"#utf-8-encoding-with-c\" aria-label=\"utf 8 encoding with c permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>UTF-8 Encoding with C!</h1>\n<p>일단 헤더파일을 만든 후 아래와 같이 Define를 해둔다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"c\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk10\">#define</span><span class=\"mtk1\"> </span><span class=\"mtk3\">UTF8_1</span><span class=\"mtk1\"> </span><span class=\"mtk4\">0x</span><span class=\"mtk7\">7F</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk10\">#define</span><span class=\"mtk1\"> </span><span class=\"mtk3\">UTF8_2</span><span class=\"mtk1\"> </span><span class=\"mtk4\">0x</span><span class=\"mtk7\">7FF</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk10\">#define</span><span class=\"mtk1\"> </span><span class=\"mtk3\">UTF8_3</span><span class=\"mtk1\"> </span><span class=\"mtk4\">0x</span><span class=\"mtk7\">FFFF</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk10\">#define</span><span class=\"mtk1\"> </span><span class=\"mtk3\">UTF8_4</span><span class=\"mtk1\"> </span><span class=\"mtk4\">0x</span><span class=\"mtk7\">1FFFFF</span></span></span></code></pre>\n<p>위애서 Define를 한 값은 각 인코딩 되었을 때 바이트 별 최대 값이다.</p>\n<p>이걸 이용 하여 Bit연산을 통해 몇 byte가 필요한지 구한다!</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"c\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\">/* ************************************************************************** */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\">/*                                                                            */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\">/*                                                        :::      ::::::::   */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\">/*   ft_putwchar_fd.c                                   :+:      :+:    :+:   */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\">/*                                                    +:+ +:+         +:+     */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\">/*   By: jaeskim &lt;jaeskim@student.42seoul.kr&gt;       +#+  +:+       +#+        */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\">/*                                                +#+#+#+#+#+   +#+           */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\">/*   Created: 2020/10/23 17:46:22 by jaeskim           #+#    #+#             */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\">/*   Updated: 2020/10/23 21:27:57 by jaeskim          ###   ########.fr       */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\">/*                                                                            */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\">/* ************************************************************************** */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk10\">#include</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&lt;unistd.h&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk10\">#include</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&quot;ft_utf8.h&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk10\">static</span><span class=\"mtk1\"> </span><span class=\"mtk10\">void</span><span class=\"mtk1\">\t</span><span class=\"mtk3\">ft_utf_4</span><span class=\"mtk1\">(</span><span class=\"mtk10\">int</span><span class=\"mtk4\"> </span><span class=\"mtk4 mtki\">unicode</span><span class=\"mtk1\">,</span><span class=\"mtk4\"> </span><span class=\"mtk10\">int</span><span class=\"mtk4\"> </span><span class=\"mtk4 mtki\">fd</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk10\">unsigned</span><span class=\"mtk1\"> </span><span class=\"mtk10\">char</span><span class=\"mtk1\"> buf;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\tbuf </span><span class=\"mtk10\">=</span><span class=\"mtk1\"> (unicode </span><span class=\"mtk10\">&gt;&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk7\">18</span><span class=\"mtk1\"> </span><span class=\"mtk10\">&amp;</span><span class=\"mtk1\"> </span><span class=\"mtk7\">7</span><span class=\"mtk1\">) </span><span class=\"mtk10\">|</span><span class=\"mtk1\"> </span><span class=\"mtk7\">240</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk3\">write</span><span class=\"mtk1\">(fd, </span><span class=\"mtk10\">&amp;</span><span class=\"mtk1\">buf, </span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\tbuf </span><span class=\"mtk10\">=</span><span class=\"mtk1\"> (unicode </span><span class=\"mtk10\">&gt;&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk7\">12</span><span class=\"mtk1\"> </span><span class=\"mtk10\">&amp;</span><span class=\"mtk1\"> </span><span class=\"mtk7\">63</span><span class=\"mtk1\">) </span><span class=\"mtk10\">|</span><span class=\"mtk1\"> </span><span class=\"mtk7\">128</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk3\">write</span><span class=\"mtk1\">(fd, </span><span class=\"mtk10\">&amp;</span><span class=\"mtk1\">buf, </span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\tbuf </span><span class=\"mtk10\">=</span><span class=\"mtk1\"> (unicode </span><span class=\"mtk10\">&gt;&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk7\">6</span><span class=\"mtk1\"> </span><span class=\"mtk10\">&amp;</span><span class=\"mtk1\"> </span><span class=\"mtk7\">63</span><span class=\"mtk1\">) </span><span class=\"mtk10\">|</span><span class=\"mtk1\"> </span><span class=\"mtk7\">128</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk3\">write</span><span class=\"mtk1\">(fd, </span><span class=\"mtk10\">&amp;</span><span class=\"mtk1\">buf, </span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\tbuf </span><span class=\"mtk10\">=</span><span class=\"mtk1\"> (unicode </span><span class=\"mtk10\">&amp;</span><span class=\"mtk1\"> </span><span class=\"mtk7\">63</span><span class=\"mtk1\">) </span><span class=\"mtk10\">|</span><span class=\"mtk1\"> </span><span class=\"mtk7\">128</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk3\">write</span><span class=\"mtk1\">(fd, </span><span class=\"mtk10\">&amp;</span><span class=\"mtk1\">buf, </span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk10\">static</span><span class=\"mtk1\"> </span><span class=\"mtk10\">void</span><span class=\"mtk1\">\t</span><span class=\"mtk3\">ft_utf_3</span><span class=\"mtk1\">(</span><span class=\"mtk10\">int</span><span class=\"mtk4\"> </span><span class=\"mtk4 mtki\">unicode</span><span class=\"mtk1\">,</span><span class=\"mtk4\"> </span><span class=\"mtk10\">int</span><span class=\"mtk4\"> </span><span class=\"mtk4 mtki\">fd</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk10\">unsigned</span><span class=\"mtk1\"> </span><span class=\"mtk10\">char</span><span class=\"mtk1\"> buf;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\tbuf </span><span class=\"mtk10\">=</span><span class=\"mtk1\"> (unicode </span><span class=\"mtk10\">&gt;&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk7\">12</span><span class=\"mtk1\"> </span><span class=\"mtk10\">&amp;</span><span class=\"mtk1\"> </span><span class=\"mtk7\">15</span><span class=\"mtk1\">) </span><span class=\"mtk10\">|</span><span class=\"mtk1\"> </span><span class=\"mtk7\">224</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk3\">write</span><span class=\"mtk1\">(fd, </span><span class=\"mtk10\">&amp;</span><span class=\"mtk1\">buf, </span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\tbuf </span><span class=\"mtk10\">=</span><span class=\"mtk1\"> (unicode </span><span class=\"mtk10\">&gt;&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk7\">6</span><span class=\"mtk1\"> </span><span class=\"mtk10\">&amp;</span><span class=\"mtk1\"> </span><span class=\"mtk7\">63</span><span class=\"mtk1\">) </span><span class=\"mtk10\">|</span><span class=\"mtk1\"> </span><span class=\"mtk7\">128</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk3\">write</span><span class=\"mtk1\">(fd, </span><span class=\"mtk10\">&amp;</span><span class=\"mtk1\">buf, </span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\tbuf </span><span class=\"mtk10\">=</span><span class=\"mtk1\"> (unicode </span><span class=\"mtk10\">&amp;</span><span class=\"mtk1\"> </span><span class=\"mtk7\">63</span><span class=\"mtk1\">) </span><span class=\"mtk10\">|</span><span class=\"mtk1\"> </span><span class=\"mtk7\">128</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk3\">write</span><span class=\"mtk1\">(fd, </span><span class=\"mtk10\">&amp;</span><span class=\"mtk1\">buf, </span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk10\">static</span><span class=\"mtk1\"> </span><span class=\"mtk10\">void</span><span class=\"mtk1\">\t</span><span class=\"mtk3\">ft_utf_2</span><span class=\"mtk1\">(</span><span class=\"mtk10\">int</span><span class=\"mtk4\"> </span><span class=\"mtk4 mtki\">unicode</span><span class=\"mtk1\">,</span><span class=\"mtk4\"> </span><span class=\"mtk10\">int</span><span class=\"mtk4\"> </span><span class=\"mtk4 mtki\">fd</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk10\">unsigned</span><span class=\"mtk1\"> </span><span class=\"mtk10\">char</span><span class=\"mtk1\"> buf;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\tbuf </span><span class=\"mtk10\">=</span><span class=\"mtk1\"> unicode </span><span class=\"mtk10\">&gt;&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk7\">6</span><span class=\"mtk1\"> </span><span class=\"mtk10\">|</span><span class=\"mtk1\"> </span><span class=\"mtk7\">192</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk3\">write</span><span class=\"mtk1\">(fd, </span><span class=\"mtk10\">&amp;</span><span class=\"mtk1\">buf, </span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\tbuf </span><span class=\"mtk10\">=</span><span class=\"mtk1\"> (unicode </span><span class=\"mtk10\">&amp;</span><span class=\"mtk1\"> </span><span class=\"mtk7\">63</span><span class=\"mtk1\">) </span><span class=\"mtk10\">|</span><span class=\"mtk1\"> </span><span class=\"mtk7\">128</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk3\">write</span><span class=\"mtk1\">(fd, </span><span class=\"mtk10\">&amp;</span><span class=\"mtk1\">buf, </span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk10\">static</span><span class=\"mtk1\"> </span><span class=\"mtk10\">void</span><span class=\"mtk1\">\t</span><span class=\"mtk3\">ft_utf_1</span><span class=\"mtk1\">(</span><span class=\"mtk10\">char</span><span class=\"mtk4\"> </span><span class=\"mtk4 mtki\">unicode</span><span class=\"mtk1\">,</span><span class=\"mtk4\"> </span><span class=\"mtk10\">int</span><span class=\"mtk4\"> </span><span class=\"mtk4 mtki\">fd</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk3\">write</span><span class=\"mtk1\">(fd, </span><span class=\"mtk10\">&amp;</span><span class=\"mtk1\">unicode, </span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk10\">void</span><span class=\"mtk1\">\t\t</span><span class=\"mtk3\">ft_putwchar_fd</span><span class=\"mtk1\">(</span><span class=\"mtk10\">int</span><span class=\"mtk4\"> </span><span class=\"mtk4 mtki\">unicode</span><span class=\"mtk1\">,</span><span class=\"mtk4\"> </span><span class=\"mtk10\">int</span><span class=\"mtk4\"> </span><span class=\"mtk4 mtki\">fd</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk10\">if</span><span class=\"mtk1\"> ((unicode </span><span class=\"mtk10\">|</span><span class=\"mtk1\"> UTF8_1) </span><span class=\"mtk10\">==</span><span class=\"mtk1\"> UTF8_1)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk3\">ft_utf_1</span><span class=\"mtk1\">(unicode, fd);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk10\">else</span><span class=\"mtk1\"> </span><span class=\"mtk10\">if</span><span class=\"mtk1\"> ((unicode </span><span class=\"mtk10\">|</span><span class=\"mtk1\"> UTF8_2) </span><span class=\"mtk10\">==</span><span class=\"mtk1\"> UTF8_2)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk3\">ft_utf_2</span><span class=\"mtk1\">(unicode, fd);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk10\">else</span><span class=\"mtk1\"> </span><span class=\"mtk10\">if</span><span class=\"mtk1\"> ((unicode </span><span class=\"mtk10\">|</span><span class=\"mtk1\"> UTF8_3) </span><span class=\"mtk10\">==</span><span class=\"mtk1\"> UTF8_3)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk3\">ft_utf_3</span><span class=\"mtk1\">(unicode, fd);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk10\">else</span><span class=\"mtk1\"> </span><span class=\"mtk10\">if</span><span class=\"mtk1\"> ((unicode </span><span class=\"mtk10\">|</span><span class=\"mtk1\"> UTF8_4) </span><span class=\"mtk10\">==</span><span class=\"mtk1\"> UTF8_4)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk3\">ft_utf_4</span><span class=\"mtk1\">(unicode, fd);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk10\">else</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t\t</span><span class=\"mtk3\">ft_putchar_fd</span><span class=\"mtk1\">(unicode, fd);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>각 코드에 대해 설명을 하자면 일단 <code>ft_putwchar_fd</code> 에서 Define된 값을 이용하여 위에서 부터 1byte를 사용해야 할때 최대로 가질 수 있는 값과 or연산을 수행 후 그 값이 동일 하다면 그 범위안에 속한 것이기 때문에 1byte에 해당 하는 동작으로 넘어가게 된다!</p>\n<p>이제 각 2byte, 3byte.. 등의 부분에서는 이제 쉬프트 연산을 통하여 각 첫 바이트에 들어가야 하는 부분을 가져와 and 연산을 통하여 정리후 or 연산으로 고정 비트를 추가 하여 write 한게 된다.</p>\n<p>이 부분을 위에서 설명한 <code>☠(9760)</code> 문자를 가지고 설명을 해본다!.</p>\n<p>일단 처음 uncode로 값이 들어 왔을 때 <code>9760</code> 이기 때문에 위에서부터 차례대로 내려오다 <code>ft_utf_3</code> 함수로 넘어가게 돤다.</p>\n<p>그 후 일단 <code>9760</code> 를 2진수로 변환하여 생각 하였을 때 <code>0010 0110 0010 0000</code> 이다.</p>\n<p>그리고 <code>buf = (unicode >> 12 &#x26; 15) | 224;</code> 부분에서 12를 shift 연산을 통해 이동하게되어 <code>1000 1000 0000 1001</code> 가 되고 and 연산을 통해 <code>0000 1001</code> 으로 초기화가 된다. 그리고 마지막으로 고정비트를 추가 해주는 or 연산을 통하여 <code>1110 1001</code> 으로 되어서 1byte 출력을 하게 된다.</p>\n<p>그리고 나머지 2byte 부분은 shift 연산을 하는 동작 이외에는 동일하게 6bit씩만 사용하기 때문에 63과 and 연산을 통해 초기화 하고 128과 or 연산을 통하여 고정 비트를 추가하여 출력 하게 된다.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .one-dark-pro {\n    background-color: #282c34;\n    color: #abb2bf;\n  }\n  .one-dark-pro .mtki { font-style: italic; }\n  .one-dark-pro .mtk10 { color: #C678DD; }\n  .one-dark-pro .mtk1 { color: #ABB2BF; }\n  .one-dark-pro .mtk3 { color: #61AFEF; }\n  .one-dark-pro .mtk4 { color: #E06C75; }\n  .one-dark-pro .mtk7 { color: #D19A66; }\n  .one-dark-pro .mtk5 { color: #7F848E; }\n  .one-dark-pro .mtk6 { color: #98C379; }\n  .one-dark-pro .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","tableOfContents":"<ul>\n<li><a href=\"/C/C-%EC%9C%A0%EB%8B%88%EC%BD%94%EB%93%9C(unicode)%EC%97%90_%EB%8C%80%ED%95%B4_%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0(feat.42seoul_ft_printf)/#intro\">intro</a></li>\n<li><a href=\"/C/C-%EC%9C%A0%EB%8B%88%EC%BD%94%EB%93%9C(unicode)%EC%97%90_%EB%8C%80%ED%95%B4_%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0(feat.42seoul_ft_printf)/#unicode\">UNICODE?</a></li>\n<li><a href=\"/C/C-%EC%9C%A0%EB%8B%88%EC%BD%94%EB%93%9C(unicode)%EC%97%90_%EB%8C%80%ED%95%B4_%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0(feat.42seoul_ft_printf)/#utf-8%ED%95%98%EA%B3%A0-unicode%EB%8A%94-%EC%96%B4%EB%96%A4-%EC%B0%A8%EC%9D%B4\">UTF-8하고 Unicode는 어떤 차이?</a></li>\n<li><a href=\"/C/C-%EC%9C%A0%EB%8B%88%EC%BD%94%EB%93%9C(unicode)%EC%97%90_%EB%8C%80%ED%95%B4_%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0(feat.42seoul_ft_printf)/#utf-8\">UTF-8</a></li>\n<li><a href=\"/C/C-%EC%9C%A0%EB%8B%88%EC%BD%94%EB%93%9C(unicode)%EC%97%90_%EB%8C%80%ED%95%B4_%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0(feat.42seoul_ft_printf)/#utf-8-encoding-with-c\">UTF-8 Encoding with C!</a></li>\n</ul>","frontmatter":{"date":"2020년 10월 23일","title":"[C] 유니코드(unicode)에 대해 알아보기! (feat. 42seoul{ft_printf})","tags":["c","ft_printf","42seoul"]}}},"pageContext":{"slug":"/C/C-유니코드(unicode)에_대해_알아보기(feat.42seoul_ft_printf)/","previous":{"fields":{"slug":"/Javascript/badge42-개발기_2_aka_42-readme-stats/"},"frontmatter":{"title":"[Javascript] badge42 개발기(2) aka.42-readme-stats"}},"next":{"fields":{"slug":"/Javascript/badge42-개발기_3_aka_42-readme-stats/"},"frontmatter":{"title":"[Javascript] badge42 개발기(3) aka.42-readme-stats"}}}},"staticQueryHashes":["1081905842","63159454"]}