{"componentChunkName":"component---src-templates-blog-post-js","path":"/React/Framer-Motion의-AnimatePresence-동작-원리-분석하기/","result":{"data":{"site":{"siteMetadata":{"author":"JaeSeoKim","comment":{"utterances":"JaeSeoKim/jaeseokim.github.io"},"sponsor":{"buyMeACoffeeId":"jaeseokim"}}},"markdownRemark":{"excerpt":"Framer Motion의 AnimatePresence 동작 원리 분석하기! Framer Motion의 AnimatePresence 또는 React Transition Group를 사용해본 개발자라면 공통적으로 떠오르게 되는 의문점이 하나 있습니다. 어떻게 UnMount 된 Component를 유지하며 애니메이션을 동작시키는 것이지? 이 궁금증을 해결하기…","html":"<h1 id=\"framer-motion의-animatepresence-동작-원리-분석하기\" style=\"position:relative;\"><a href=\"#framer-motion%EC%9D%98-animatepresence-%EB%8F%99%EC%9E%91-%EC%9B%90%EB%A6%AC-%EB%B6%84%EC%84%9D%ED%95%98%EA%B8%B0\" aria-label=\"framer motion의 animatepresence 동작 원리 분석하기 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Framer Motion의 AnimatePresence 동작 원리 분석하기!</h1>\n<p>Framer Motion의 <code>AnimatePresence</code> 또는 <code>React Transition Group</code>를 사용해본 개발자라면 공통적으로 떠오르게 되는 의문점이 하나 있습니다.</p>\n<blockquote>\n<h4 id=\"어떻게-unmount-된-component를-유지하며-애니메이션을-동작시키는-것이지\" style=\"position:relative;\"><a href=\"#%EC%96%B4%EB%96%BB%EA%B2%8C-unmount-%EB%90%9C-component%EB%A5%BC-%EC%9C%A0%EC%A7%80%ED%95%98%EB%A9%B0-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98%EC%9D%84-%EB%8F%99%EC%9E%91%EC%8B%9C%ED%82%A4%EB%8A%94-%EA%B2%83%EC%9D%B4%EC%A7%80\" aria-label=\"어떻게 unmount 된 component를 유지하며 애니메이션을 동작시키는 것이지 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>어떻게 UnMount 된 Component를 유지하며 애니메이션을 동작시키는 것이지?</h4>\n</blockquote>\n<p>이 궁금증을 해결하기 위해 한번 Framer Motion의 소스코드를 뜯어보며 공부하게 되었습니다.</p>\n<blockquote>\n<h4 id=\"분석한-시점의-깃허브-코드-링크\" style=\"position:relative;\"><a href=\"#%EB%B6%84%EC%84%9D%ED%95%9C-%EC%8B%9C%EC%A0%90%EC%9D%98-%EA%B9%83%ED%97%88%EB%B8%8C-%EC%BD%94%EB%93%9C-%EB%A7%81%ED%81%AC\" aria-label=\"분석한 시점의 깃허브 코드 링크 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>분석한 시점의 깃허브 코드 링크</h4>\n<p><a href=\"https://github.com/framer/motion/blob/85a60580d57650777871184561fc5e88508d7519/packages/framer-motion/src/components/AnimatePresence/index.tsx\">https://github.com/framer/motion/blob/85a60580d57650777871184561fc5e88508d7519/packages/framer-motion/src/components/AnimatePresence/index.tsx</a></p>\n</blockquote>\n<p>그러면서 약 2년동안 해결되지 않은 애니메이션 관련 버그와 일부 잘못된 코드에 대해서 기여할 수 있는 기회가 되었습니다.! 🤓 🥳</p>\n<details>\n<summary>코드기여 내용</summary>\n<p><a href=\"https://github.com/framer/motion/pull/1569\">Fix AnimatePresence won't unmount fastly changing content by JaeSeoKim · Pull Request #1569 · framer/motion</a></p>\n<p><img src=\"https://res.craft.do/user/full/9b73b1e8-42ea-cb9a-4429-738126302e2a/doc/F15132A1-9A4D-4DE6-B39E-314A720C2D54/828B5C8E-51BF-4D37-AB02-AB0BB6A8CCCF_2/HCisdd25EULCQmVgvAPjK9MSbLAIM4x73W8fpMEYqAsz/Image.png\" alt=\"Image.png\"></p>\n<p><a href=\"https://github.com/framer/motion/pull/1531\">Remove unnecessary log codes by JaeSeoKim · Pull Request #1531 · framer/motion</a></p>\n<p><img src=\"https://res.craft.do/user/full/9b73b1e8-42ea-cb9a-4429-738126302e2a/doc/F15132A1-9A4D-4DE6-B39E-314A720C2D54/BCB95CAA-8799-478F-B72C-6C89BD58E6F2_2/Q87qCQvU84Fto6diHGiiHCydylsPA9jUA6CFYVcxt4Mz/%202022-06-02%20%208.08.32.png\" alt=\"스크린샷 2022-06-02 오후 8.08.32.png\"></p>\n</details>\n<h1 id=\"사전-지식-학습하기\" style=\"position:relative;\"><a href=\"#%EC%82%AC%EC%A0%84-%EC%A7%80%EC%8B%9D-%ED%95%99%EC%8A%B5%ED%95%98%EA%B8%B0\" aria-label=\"사전 지식 학습하기 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사전 지식 학습하기</h1>\n<p><code>AnimatePresence</code> 를 분석하기 이전에 내부에서 사용하는 custom hook과 일부 React API에 대해 먼저 간단하게 설명하고 진행합니다.</p>\n<h1 id=\"react-공식-api-hook\" style=\"position:relative;\"><a href=\"#react-%EA%B3%B5%EC%8B%9D-api-hook\" aria-label=\"react 공식 api hook permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React 공식 API, Hook</h1>\n<h2 id=\"reactnode\" style=\"position:relative;\"><a href=\"#reactnode\" aria-label=\"reactnode permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ReactNode</h2>\n<p>React에서 렌더링 할 수 있는 type에 대한 집합이며, 이 때 <code>boolean</code> , <code>null</code>, <code>undefined</code> 와 같은 값도 포함된 것을 확인 할 수 있습니다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"tsx\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">type</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ReactFragment</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Iterable</span><span class=\"mtk1\">&lt;</span><span class=\"mtk11\">ReactNode</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">type</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ReactNode</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  | </span><span class=\"mtk11\">ReactElement</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  | </span><span class=\"mtk11\">string</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  | </span><span class=\"mtk11\">number</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  | </span><span class=\"mtk11\">ReactFragment</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  | </span><span class=\"mtk11\">ReactPortal</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  | </span><span class=\"mtk11\">boolean</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  | </span><span class=\"mtk11\">null</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  | </span><span class=\"mtk11\">undefined</span></span></span></code></pre>\n<h3 id=\"reactelement\" style=\"position:relative;\"><a href=\"#reactelement\" aria-label=\"reactelement permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ReactElement</h3>\n<p><code>React.createElement</code> 함수를 사용시 반환하는 type으로 일반적으로는 JSX 문법을 사용시 얻게 되는 객체 입니다.</p>\n<p>해당 객체 내부에는 <code>props</code>와 같은 정보와 함께 <code>key</code> 에 대해서 접근하여 가져올 수 있습니다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"tsx\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">interface</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ReactElement</span><span class=\"mtk1\">&lt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">P</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk11\">any</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">T</span><span class=\"mtk1\"> </span><span class=\"mtk9\">extends</span><span class=\"mtk1\"> </span><span class=\"mtk11\">string</span><span class=\"mtk1\"> | </span><span class=\"mtk11\">JSXElementConstructor</span><span class=\"mtk1\">&lt;</span><span class=\"mtk11\">any</span><span class=\"mtk1\">&gt; </span><span class=\"mtk8\">=</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    | </span><span class=\"mtk11\">string</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    | </span><span class=\"mtk11\">JSXElementConstructor</span><span class=\"mtk1\">&lt;</span><span class=\"mtk11\">any</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">&gt; {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">type</span><span class=\"mtk1\">: </span><span class=\"mtk11\">T</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">props</span><span class=\"mtk1\">: </span><span class=\"mtk11\">P</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">key</span><span class=\"mtk1\">: </span><span class=\"mtk11\">Key</span><span class=\"mtk1\"> | </span><span class=\"mtk11\">null</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h2 id=\"cloneelement\" style=\"position:relative;\"><a href=\"#cloneelement\" aria-label=\"cloneelement permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>cloneElement()</h2>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"tsx\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">React</span><span class=\"mtk1\">.</span><span class=\"mtk3\">cloneElement</span><span class=\"mtk1\">(</span><span class=\"mtk4\">element</span><span class=\"mtk1\">, [</span><span class=\"mtk4\">config</span><span class=\"mtk1\">], [...</span><span class=\"mtk4\">children</span><span class=\"mtk1\">])</span></span></span></code></pre>\n<p>element 를 기준으로 하여 새로운 ReactElement를 복사하고 반환합니다.</p>\n<p>이때</p>\n<h2 id=\"isvalidelement\" style=\"position:relative;\"><a href=\"#isvalidelement\" aria-label=\"isvalidelement permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>isValidElement()</h2>\n<p>아래와 같이 <code>object</code> 를 넘기면 해당 객체가 <code>ReactElement</code> 인지 검증하는함수 입니다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"tsx\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">React</span><span class=\"mtk1\">.</span><span class=\"mtk3\">isValidElement</span><span class=\"mtk1\">(</span><span class=\"mtk4\">object</span><span class=\"mtk1\">)</span></span></span></code></pre>\n<p><a href=\"https://reactjs.org/docs/react-api.html#isvalidelement\">React Top-Level API – React</a></p>\n<h2 id=\"reactchildren\" style=\"position:relative;\"><a href=\"#reactchildren\" aria-label=\"reactchildren permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React.Children</h2>\n<p><code>this.props.children</code> 으로 넘어온 불명확한 데이터 구조를 다루기 위한 아래와 같은 유틸리티를 포함하고 있습니다.</p>\n<h3 id=\"reactchildrenonly\" style=\"position:relative;\"><a href=\"#reactchildrenonly\" aria-label=\"reactchildrenonly permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React.Children.only</h3>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"tsx\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">React</span><span class=\"mtk1\">.</span><span class=\"mtk11\">Children</span><span class=\"mtk1\">.</span><span class=\"mtk3\">only</span><span class=\"mtk1\">(</span><span class=\"mtk4\">children</span><span class=\"mtk1\">)</span></span></span></code></pre>\n<p><code>this.props.children</code> 으로 넘어온 객체가 단일 객체인지에 대해서 판별하는 함수입니다.</p>\n<p>만약 <code>children</code> 이 <code>Fragment</code> 로 감싸져 있다면, 단일 객체로 취급합니다.</p>\n<h3 id=\"reactchildrenforeach\" style=\"position:relative;\"><a href=\"#reactchildrenforeach\" aria-label=\"reactchildrenforeach permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React.Children.forEach</h3>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"tsx\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">React</span><span class=\"mtk1\">.</span><span class=\"mtk11\">Children</span><span class=\"mtk1\">.</span><span class=\"mtk3\">forEach</span><span class=\"mtk1\">(</span><span class=\"mtk4\">children</span><span class=\"mtk1\">, </span><span class=\"mtk9\">function</span><span class=\"mtk1\">[(</span><span class=\"mtk4 mtki\">thisArg</span><span class=\"mtk1\">)])</span></span></span></code></pre>\n<p>위와 같이 <code>children</code> 내부의 객체를 순환하여 <code>forEach</code> 함수와 동일한 기능을 수행합니다.</p>\n<p>이때 <code>children</code> 이 단일 객체라면 순환하지 않습니다.</p>\n<h2 id=\"useref\" style=\"position:relative;\"><a href=\"#useref\" aria-label=\"useref permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>useRef</h2>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"tsx\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">refContainer</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">useRef</span><span class=\"mtk1\">(</span><span class=\"mtk4\">initialValue</span><span class=\"mtk1\">)</span></span></span></code></pre>\n<p>수정이 가능한 <code>ref</code> 객체를 반환하며, <code>.current</code> 객체로 초기값이 전달됩니다.</p>\n<p>해당 객체는 컴포넌트의 전 생명주기 동안 유지됩니다.</p>\n<h2 id=\"uselayouteffect\" style=\"position:relative;\"><a href=\"#uselayouteffect\" aria-label=\"uselayouteffect permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>useLayoutEffect</h2>\n<p><code>useEffect</code> 와 사용법이 동일하며 효과도 매우 유사하지만, <code>useEffect</code> 의 경우 화면의 paint가 끝난 이후 실행이 되지만, React에서 dom를 업데이트 후 브라우저에서 paint 하기 이전에 <code>useLayoutEffect</code> 가 동작합니다.</p>\n<h1 id=\"custom-react-hook\" style=\"position:relative;\"><a href=\"#custom-react-hook\" aria-label=\"custom react hook permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Custom React Hook</h1>\n<h2 id=\"useisomorphiclayouteffect\" style=\"position:relative;\"><a href=\"#useisomorphiclayouteffect\" aria-label=\"useisomorphiclayouteffect permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>useIsomorphicLayoutEffect</h2>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"tsx\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">import</span><span class=\"mtk1\"> { </span><span class=\"mtk4\">useEffect</span><span class=\"mtk1\">, </span><span class=\"mtk4\">useLayoutEffect</span><span class=\"mtk1\"> } </span><span class=\"mtk9\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&quot;react&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">import</span><span class=\"mtk1\"> { </span><span class=\"mtk4\">isBrowser</span><span class=\"mtk1\"> } </span><span class=\"mtk9\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&quot;./is-browser&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">export</span><span class=\"mtk1\"> </span><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">useIsomorphicLayoutEffect</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk4\">isBrowser</span><span class=\"mtk1\"> </span><span class=\"mtk9\">?</span><span class=\"mtk1\"> </span><span class=\"mtk4\">useLayoutEffect</span><span class=\"mtk1\"> </span><span class=\"mtk9\">:</span><span class=\"mtk1\"> </span><span class=\"mtk4\">useEffect</span></span></span></code></pre>\n<p>SSR 시점에는 <code>useLayoutEffect</code> 에 대해서 수행할 수 있는 작업이 없기 때문에 SSR 이후 <code>hydrate</code> 불일치 문제가 발생하므로, 해당 문제를 해결하기 위해 <code>isBrowser</code> 즉 <code>typeof document !== \"undefined\"</code> 인지 체크 하는 것으로 브라우저 인 경우 <code>useLayoutEffect</code> 를 SSR 시점에는 <code>useEffect</code> 사용하는 것으로 이 문제점을 해결 하는 Hook 입니다.</p>\n<h2 id=\"useismounted\" style=\"position:relative;\"><a href=\"#useismounted\" aria-label=\"useismounted permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>useIsMounted</h2>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"tsx\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">import</span><span class=\"mtk1\"> { </span><span class=\"mtk4\">useRef</span><span class=\"mtk1\"> } </span><span class=\"mtk9\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&quot;react&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">import</span><span class=\"mtk1\"> { </span><span class=\"mtk4\">useIsomorphicLayoutEffect</span><span class=\"mtk1\"> } </span><span class=\"mtk9\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&quot;./use-isomorphic-effect&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">export</span><span class=\"mtk1\"> </span><span class=\"mtk9\">function</span><span class=\"mtk1\"> </span><span class=\"mtk3\">useIsMounted</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">isMounted</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">useRef</span><span class=\"mtk1\">(</span><span class=\"mtk7\">false</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">useIsomorphicLayoutEffect</span><span class=\"mtk1\">(() </span><span class=\"mtk9\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">isMounted</span><span class=\"mtk1\">.</span><span class=\"mtk4\">current</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">true</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> () </span><span class=\"mtk9\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">isMounted</span><span class=\"mtk1\">.</span><span class=\"mtk4\">current</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">false</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }, [])</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> </span><span class=\"mtk4\">isMounted</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>useRef 객체에 마운트 시점과 언마운트 시점에 해당 상태를 기록 하며, 해당 마운트 ref 객체를 반환하는 hook 입니다.</p>\n<p>이를 통해 리렌더링은 일어나지 않지만 <code>isMounted.current</code> 에 접근하는 것으로 마운트 되었는지에 대해서 알 수 있습니다.</p>\n<h2 id=\"useforceupdate\" style=\"position:relative;\"><a href=\"#useforceupdate\" aria-label=\"useforceupdate permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>useForceUpdate</h2>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"tsx\" data-index=\"9\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">import</span><span class=\"mtk1\"> </span><span class=\"mtk4\">sync</span><span class=\"mtk1\"> </span><span class=\"mtk9\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&quot;framesync&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">import</span><span class=\"mtk1\"> { </span><span class=\"mtk4\">useState</span><span class=\"mtk1\">, </span><span class=\"mtk4\">useCallback</span><span class=\"mtk1\"> } </span><span class=\"mtk9\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&quot;react&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">import</span><span class=\"mtk1\"> { </span><span class=\"mtk4\">useIsMounted</span><span class=\"mtk1\"> } </span><span class=\"mtk9\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&quot;./use-is-mounted&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">export</span><span class=\"mtk1\"> </span><span class=\"mtk9\">function</span><span class=\"mtk1\"> </span><span class=\"mtk3\">useForceUpdate</span><span class=\"mtk1\">(): [</span><span class=\"mtk11\">VoidFunction</span><span class=\"mtk1\">, </span><span class=\"mtk11\">number</span><span class=\"mtk1\">] {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">isMounted</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">useIsMounted</span><span class=\"mtk1\">()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9\">const</span><span class=\"mtk1\"> [</span><span class=\"mtk11\">forcedRenderCount</span><span class=\"mtk1\">, </span><span class=\"mtk11\">setForcedRenderCount</span><span class=\"mtk1\">] </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">useState</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">forceRender</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">useCallback</span><span class=\"mtk1\">(() </span><span class=\"mtk9\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">isMounted</span><span class=\"mtk1\">.</span><span class=\"mtk4\">current</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&amp;&amp;</span><span class=\"mtk1\"> </span><span class=\"mtk3\">setForcedRenderCount</span><span class=\"mtk1\">(</span><span class=\"mtk4\">forcedRenderCount</span><span class=\"mtk1\"> </span><span class=\"mtk8\">+</span><span class=\"mtk1\"> </span><span class=\"mtk7\">1</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }, [</span><span class=\"mtk4\">forcedRenderCount</span><span class=\"mtk1\">])</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk5 mtki\">/**</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\">   * Defer this to the end of the next animation frame in case there are multiple</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\">   * synchronous calls.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\">   */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">deferredForceRender</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">useCallback</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    () </span><span class=\"mtk9\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk11\">sync</span><span class=\"mtk1\">.</span><span class=\"mtk3\">postRender</span><span class=\"mtk1\">(</span><span class=\"mtk4\">forceRender</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    [</span><span class=\"mtk4\">forceRender</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> [</span><span class=\"mtk4\">deferredForceRender</span><span class=\"mtk1\">, </span><span class=\"mtk4\">forcedRenderCount</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><code>framer motion</code> 내부에서 정의된 custom hook으로 <code>state</code> 를 증가시킴으로써 해당 hook를 사용하는 컴포넌트를 리렌더링을 시킵니다.</p>\n<p>또한 <code>hook</code> 의 경우 정의 순서에 따른 sideEffect가 달라지기 때문에 정확하게 forceUpdate 하기 위해서는 최상단의 첫번째 hook으로써 정의해야 합니다.</p>\n<p>이때 <code>framer motion</code> 은 <code>popmotion</code> 이라는 javascript animation 라이브러리를 사용하므로, <code>framesync</code> 를 통해 다음 애니메이션 프레임에 강제 렌더링 시행 시키도록 구현된 것을 볼 수 있습니다.</p>\n<h2 id=\"useunmounteffect\" style=\"position:relative;\"><a href=\"#useunmounteffect\" aria-label=\"useunmounteffect permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>useUnmountEffect</h2>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"tsx\" data-index=\"10\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">import</span><span class=\"mtk1\"> { </span><span class=\"mtk4\">useEffect</span><span class=\"mtk1\"> } </span><span class=\"mtk9\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&quot;react&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">export</span><span class=\"mtk1\"> </span><span class=\"mtk9\">function</span><span class=\"mtk1\"> </span><span class=\"mtk3\">useUnmountEffect</span><span class=\"mtk1\">(</span><span class=\"mtk3\">callback</span><span class=\"mtk1\">: () </span><span class=\"mtk9\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk11\">void</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> </span><span class=\"mtk3\">useEffect</span><span class=\"mtk1\">(() </span><span class=\"mtk9\">=&gt;</span><span class=\"mtk1\"> () </span><span class=\"mtk9\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk3\">callback</span><span class=\"mtk1\">(), [])</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>의존성 배열이 비어있는 <code>useEffect</code> cleanUp 동작에 정의 하는 것으로 언마운트 시점에 동작할 함수를 정의 할 수 있습니다.</p>\n<p>해당 컴포넌트가 unmount 되는 시점에 정확하게 동작시키기 위해서는 hook 정의 순서대로 동작한다는 특성을 고려하여 맨마지막의 hook으로써 정의 해야 합니다.</p>\n<h1 id=\"animatepresence-코드-분석하기\" style=\"position:relative;\"><a href=\"#animatepresence-%EC%BD%94%EB%93%9C-%EB%B6%84%EC%84%9D%ED%95%98%EA%B8%B0\" aria-label=\"animatepresence 코드 분석하기 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AnimatePresence 코드 분석하기!</h1>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"tsx\" data-index=\"11\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\">// We want to force a re-render once all exiting animations have finished. We</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\">// either use a local forceRender function, or one from a parent context if it exists.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">let</span><span class=\"mtk1\"> [</span><span class=\"mtk4\">forceRender</span><span class=\"mtk1\">] </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">useForceUpdate</span><span class=\"mtk1\">()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">forceRenderLayoutGroup</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">useContext</span><span class=\"mtk1\">(</span><span class=\"mtk4\">LayoutGroupContext</span><span class=\"mtk1\">).</span><span class=\"mtk4\">forceRender</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">forceRenderLayoutGroup</span><span class=\"mtk1\">) </span><span class=\"mtk4\">forceRender</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk4\">forceRenderLayoutGroup</span></span></span></code></pre>\n<p><a href=\"https://github.com/framer/motion/blob/85a60580d57650777871184561fc5e88508d7519/packages/framer-motion/src/components/AnimatePresence/index.tsx#L86-L90\">packages/framer-motion/src/components/AnimatePresence/index.tsx#L86-L90</a></p>\n<p>코드를 보게 되면 첫 hook으로 <code>useForceUpdate()</code> 사용하지만 주석과 함께 이후의 코드를 확인하면, 모든 애니메이션이 끝난 이후에 리 렌더링이 일어나야 하므로, <code>context</code> 를 통해 이전에 정의된 forceRender가 있는지 확인하여 있다면 부모의 forceRender를 사용하는 것을 볼 수 있습니다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"tsx\" data-index=\"12\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">isMounted</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">useIsMounted</span><span class=\"mtk1\">()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\">// Filter out any children that aren&#39;t ReactElements. We can only track ReactElements with a props.key</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">filteredChildren</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">onlyElements</span><span class=\"mtk1\">(</span><span class=\"mtk4\">children</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">let</span><span class=\"mtk1\"> </span><span class=\"mtk4\">childrenToRender</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk4\">filteredChildren</span></span></span></code></pre>\n<p><a href=\"https://github.com/framer/motion/blob/85a60580d57650777871184561fc5e88508d7519/packages/framer-motion/src/components/AnimatePresence/index.tsx#L92-L96\">packages/framer-motion/src/components/AnimatePresence/index.tsx#L92-L96</a></p>\n<p>그 다음에는 children에서 <code>React.Children</code> 와 <code>isValidElement</code> 함수를 이용하여 Element만 추출 하는 것을 볼 수 있습니다.</p>\n<p>이후 렌더링 해야 하는 대상을 저장하는 변수는 <code>childrenToRender</code> 에 저장합니다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"tsx\" data-index=\"13\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">exiting</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk9\">new</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Set</span><span class=\"mtk1\">&lt;</span><span class=\"mtk11\">ComponentKey</span><span class=\"mtk1\">&gt;()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\">// Keep a living record of the children we&#39;re actually rendering so we</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\">// can diff to figure out which are entering and exiting</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">presentChildren</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">useRef</span><span class=\"mtk1\">(</span><span class=\"mtk4\">childrenToRender</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\">// A lookup table to quickly reference components by key</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">allChildren</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">useRef</span><span class=\"mtk1\">(</span><span class=\"mtk9\">new</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Map</span><span class=\"mtk1\">&lt;</span><span class=\"mtk11\">ComponentKey</span><span class=\"mtk1\">, </span><span class=\"mtk11\">ReactElement</span><span class=\"mtk1\">&lt;</span><span class=\"mtk11\">any</span><span class=\"mtk1\">&gt;&gt;()).</span><span class=\"mtk4\">current</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\">// If this is the initial component render, just deal with logic surrounding whether</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\">// we play onMount animations or not.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">isInitialRender</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">useRef</span><span class=\"mtk1\">(</span><span class=\"mtk7\">true</span><span class=\"mtk1\">)</span></span></span></code></pre>\n<p><a href=\"https://github.com/framer/motion/blob/85a60580d57650777871184561fc5e88508d7519/packages/framer-motion/src/components/AnimatePresence/index.tsx#L98-L111\">packages/framer-motion/src/components/AnimatePresence/index.tsx#L98-L111</a></p>\n<p>존재 여부에 대해서 사용하는 <code>exiting</code> 초기화 하고 <code>useRef</code> 를 이용하여 라이프 사이클에서 지속적으로 유지될 이전에 넘어온 Children를 저장하는 <code>presentChildren</code> 를 만듭니다.</p>\n<blockquote>\n<p>이 때 한가지의 오류를 발견할 수 있는데 바로 <code>exiting</code> 객체는 <code>useRef</code> 로 감싸져 있지 않다는 문제점 입니다.\n이 때 문에 라이프사이클 전반에 이루어 매번 초기화 작업이 이루어 지기 때문에 이후에 이야기 하는 특정 작업에서 버그가 발생하게 됩니다.</p>\n</blockquote>\n<p><a href=\"https://github.com/framer/motion/pull/1569\">Fix AnimatePresence won't unmount fastly changing content by JaeSeoKim · Pull Request #1569 · framer/motion</a></p>\n<p>또한 ComponentKey 와 ReactElement를 key value 쌍으로 묶어 전 라이프 사이클에서 걸쳐 기록 할 수 있는 ref를 만듭니다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"tsx\" data-index=\"14\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">useIsomorphicLayoutEffect</span><span class=\"mtk1\">(() </span><span class=\"mtk9\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">isInitialRender</span><span class=\"mtk1\">.</span><span class=\"mtk4\">current</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">false</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">updateChildLookup</span><span class=\"mtk1\">(</span><span class=\"mtk4\">filteredChildren</span><span class=\"mtk1\">, </span><span class=\"mtk4\">allChildren</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">presentChildren</span><span class=\"mtk1\">.</span><span class=\"mtk4\">current</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk4\">childrenToRender</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">})</span></span></span></code></pre>\n<p><a href=\"https://github.com/framer/motion/blob/85a60580d57650777871184561fc5e88508d7519/packages/framer-motion/src/components/AnimatePresence/index.tsx#L113-L118\">packages/framer-motion/src/components/AnimatePresence/index.tsx#L113-L118</a></p>\n<p>의존성에 대해서 정의 하지 않는 것으로 리렌더링 될 때 마다 동작하게 되는 <code>effect</code> 를 정의 합니다.</p>\n<p>이 때 <code>presentChildren</code> 에 현재 props로 넘어온 children에서 추출한 ReactElement를 넣는 것을 볼 수 있습니다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"tsx\" data-index=\"15\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">type</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ComponentKey</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk11\">string</span><span class=\"mtk1\"> | </span><span class=\"mtk11\">number</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk3\">getChildKey</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> (</span><span class=\"mtk4 mtki\">child</span><span class=\"mtk1\">: </span><span class=\"mtk11\">ReactElement</span><span class=\"mtk1\">&lt;</span><span class=\"mtk11\">any</span><span class=\"mtk1\">&gt;): </span><span class=\"mtk11\">ComponentKey</span><span class=\"mtk1\"> </span><span class=\"mtk9\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk11\">child</span><span class=\"mtk1\">.</span><span class=\"mtk4\">key</span><span class=\"mtk1\"> </span><span class=\"mtk8\">||</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&quot;&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">function</span><span class=\"mtk1\"> </span><span class=\"mtk3\">updateChildLookup</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4 mtki\">children</span><span class=\"mtk1\">: </span><span class=\"mtk11\">ReactElement</span><span class=\"mtk1\">&lt;</span><span class=\"mtk11\">any</span><span class=\"mtk1\">&gt;[],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4 mtki\">allChildren</span><span class=\"mtk1\">: </span><span class=\"mtk11\">Map</span><span class=\"mtk1\">&lt;</span><span class=\"mtk11\">ComponentKey</span><span class=\"mtk1\">, </span><span class=\"mtk11\">ReactElement</span><span class=\"mtk1\">&lt;</span><span class=\"mtk11\">any</span><span class=\"mtk1\">&gt;&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">children</span><span class=\"mtk1\">.</span><span class=\"mtk3\">forEach</span><span class=\"mtk1\">((</span><span class=\"mtk4 mtki\">child</span><span class=\"mtk1\">) </span><span class=\"mtk9\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">key</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">getChildKey</span><span class=\"mtk1\">(</span><span class=\"mtk4\">child</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">allChildren</span><span class=\"mtk1\">.</span><span class=\"mtk3\">set</span><span class=\"mtk1\">(</span><span class=\"mtk4\">key</span><span class=\"mtk1\">, </span><span class=\"mtk4\">child</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  })</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><a href=\"https://github.com/framer/motion/blob/85a60580d57650777871184561fc5e88508d7519/packages/framer-motion/src/components/AnimatePresence/index.tsx#L20-L32\">packages/framer-motion/src/components/AnimatePresence/index.tsx#L20-L32</a></p>\n<p>위와 같이 <code>updateChildLookup</code> 함수를 통해 <code>allChildren</code> 이라는 <code>Map</code> 자료형에 <code>Componentkey</code> 를 이용하여 <code>child</code> 를 저장 하는 것을 볼 수 있습니다.</p>\n<p><img src=\"https://res.craft.do/user/full/9b73b1e8-42ea-cb9a-4429-738126302e2a/doc/F15132A1-9A4D-4DE6-B39E-314A720C2D54/C89AD05F-B18A-4DF4-BA33-A4E7695674B9_2/Ng7Fizy1TfJlCyopirWE2cfmL2qHNSqk2RjBl4mjX7Qz/Image.png\" alt=\"Image.png\"></p>\n<p>이와 같이 <code>Component</code> 의 <code>key</code> 를 이용하여 이전 컴포넌트를 기억하고 이를 통해 애니메이션을 구현한 다는 것을 알 수 있습니다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"tsx\" data-index=\"16\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">useUnmountEffect</span><span class=\"mtk1\">(() </span><span class=\"mtk9\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">isInitialRender</span><span class=\"mtk1\">.</span><span class=\"mtk4\">current</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">true</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">allChildren</span><span class=\"mtk1\">.</span><span class=\"mtk3\">clear</span><span class=\"mtk1\">()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">exiting</span><span class=\"mtk1\">.</span><span class=\"mtk3\">clear</span><span class=\"mtk1\">()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">})</span></span></span></code></pre>\n<p><a href=\"https://github.com/framer/motion/blob/85a60580d57650777871184561fc5e88508d7519/packages/framer-motion/src/components/AnimatePresence/index.tsx#L120-L124\">packages/framer-motion/src/components/AnimatePresence/index.tsx#L120-L124</a></p>\n<p>최종적으로 <code>unmount</code> 될 때에 <code>useRef</code> 를 통해 저장한 값을 모두 초기 상태로 돌리는 것을 볼 수 있습니다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"tsx\" data-index=\"17\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">isInitialRender</span><span class=\"mtk1\">.</span><span class=\"mtk4\">current</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    &lt;&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk9\">{</span><span class=\"mtk11\">childrenToRender</span><span class=\"mtk1\">.</span><span class=\"mtk3\">map</span><span class=\"mtk1\">((</span><span class=\"mtk4 mtki\">child</span><span class=\"mtk1\">) </span><span class=\"mtk9\">=&gt;</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        &lt;</span><span class=\"mtk11\">PresenceChild</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk7 mtki\">key</span><span class=\"mtk8\">=</span><span class=\"mtk9\">{</span><span class=\"mtk3\">getChildKey</span><span class=\"mtk1\">(</span><span class=\"mtk4\">child</span><span class=\"mtk1\">)</span><span class=\"mtk9\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk7 mtki\">isPresent</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk7 mtki\">initial</span><span class=\"mtk8\">=</span><span class=\"mtk9\">{</span><span class=\"mtk4\">initial</span><span class=\"mtk1\"> </span><span class=\"mtk9\">?</span><span class=\"mtk1\"> </span><span class=\"mtk7\">undefined</span><span class=\"mtk1\"> </span><span class=\"mtk9\">:</span><span class=\"mtk1\"> </span><span class=\"mtk7\">false</span><span class=\"mtk9\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk7 mtki\">presenceAffectsLayout</span><span class=\"mtk8\">=</span><span class=\"mtk9\">{</span><span class=\"mtk4\">presenceAffectsLayout</span><span class=\"mtk9\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        &gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk9\">{</span><span class=\"mtk4\">child</span><span class=\"mtk9\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        &lt;/</span><span class=\"mtk11\">PresenceChild</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      ))</span><span class=\"mtk9\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    &lt;/&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><a href=\"https://github.com/framer/motion/blob/85a60580d57650777871184561fc5e88508d7519/packages/framer-motion/src/components/AnimatePresence/index.tsx#L126-L141\">packages/framer-motion/src/components/AnimatePresence/index.tsx#L126-L141</a></p>\n<p>이제 실제 렌더링 하는 부분 입니다. 만약 최초 렌더링 이라면, 만들어둔 <code>childrenToRender</code> 에 있는 <code>ReactElement</code> 를 꺼내 하나씩 애니메이션 구현을 위한 <code>PresenceChild</code> 컴포넌트를 감싸서 렌더링을 합니다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"tsx\" data-index=\"18\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\">// If this is a subsequent render, deal with entering and exiting children</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">childrenToRender</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> [...</span><span class=\"mtk4\">childrenToRender</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\">// Diff the keys of the currently-present and target children to update our</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\">// exiting list.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">presentKeys</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk11\">presentChildren</span><span class=\"mtk1\">.</span><span class=\"mtk11\">current</span><span class=\"mtk1\">.</span><span class=\"mtk3\">map</span><span class=\"mtk1\">(</span><span class=\"mtk4\">getChildKey</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">targetKeys</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk11\">filteredChildren</span><span class=\"mtk1\">.</span><span class=\"mtk3\">map</span><span class=\"mtk1\">(</span><span class=\"mtk4\">getChildKey</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\">// Diff the present children with our target children and mark those that are exiting</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">numPresent</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk11\">presentKeys</span><span class=\"mtk1\">.</span><span class=\"mtk4\">length</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk9\">let</span><span class=\"mtk1\"> </span><span class=\"mtk4\">i</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk4\">i</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&lt;</span><span class=\"mtk1\"> </span><span class=\"mtk4\">numPresent</span><span class=\"mtk1\">; </span><span class=\"mtk4\">i</span><span class=\"mtk8\">++</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">key</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk4\">presentKeys</span><span class=\"mtk1\">[</span><span class=\"mtk4\">i</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">targetKeys</span><span class=\"mtk1\">.</span><span class=\"mtk3\">indexOf</span><span class=\"mtk1\">(</span><span class=\"mtk4\">key</span><span class=\"mtk1\">) </span><span class=\"mtk8\">===</span><span class=\"mtk1\"> </span><span class=\"mtk8\">-</span><span class=\"mtk7\">1</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">exiting</span><span class=\"mtk1\">.</span><span class=\"mtk3\">add</span><span class=\"mtk1\">(</span><span class=\"mtk4\">key</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\">// If we currently have exiting children, and we&#39;re deferring rendering incoming children</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\">// until after all current children have exiting, empty the childrenToRender array</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">exitBeforeEnter</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&amp;&amp;</span><span class=\"mtk1\"> </span><span class=\"mtk11\">exiting</span><span class=\"mtk1\">.</span><span class=\"mtk4\">size</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">childrenToRender</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> []</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><a href=\"https://github.com/framer/motion/blob/85a60580d57650777871184561fc5e88508d7519/packages/framer-motion/src/components/AnimatePresence/index.tsx#L143-L165\">packages/framer-motion/src/components/AnimatePresence/index.tsx#L143-L165</a></p>\n<p>이후 최초 렌더링이 아니라면 이제 해당 로직들이 실행 됩니다.</p>\n<blockquote>\n<p>첫번 째 줄인 <code>childrenToRender</code> 에 다시 spread 문법을 통해서 재할당 하는 모습을 볼 수 있는데, 이 코드에 대한 히스토리를 살펴본 결과 리팩토링 과정에서 실수 한 것을 보여 해당 라인에 대해서 제거하는 PR를 생성하였습니다.</p>\n</blockquote>\n<p><code>presentChildren</code> 과 props로 넘어온 <code>children</code> 의 key를 추출하여 <code>presentChildren</code> 에 존재하였던 <code>key</code> 가 현재 <code>Children</code> 에 없다면 <code>exiting</code> 중인 상태로 정의 합니다.</p>\n<p><code>exitBeforeEnter</code> 옵션이 켜져있다면, <code>exiting</code> 이 전부 끝난 이후 렌더링을 할 수 있돌고 <code>childrenToRender</code> 를 비워줍니다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"tsx\" data-index=\"19\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\">// Loop through all currently exiting components and clone them to overwrite `animate`</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\">// with any `exit` prop they might have defined.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">exiting</span><span class=\"mtk1\">.</span><span class=\"mtk3\">forEach</span><span class=\"mtk1\">((</span><span class=\"mtk4 mtki\">key</span><span class=\"mtk1\">) </span><span class=\"mtk9\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk5 mtki\">// If this component is actually entering again, early return</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">targetKeys</span><span class=\"mtk1\">.</span><span class=\"mtk3\">indexOf</span><span class=\"mtk1\">(</span><span class=\"mtk4\">key</span><span class=\"mtk1\">) </span><span class=\"mtk8\">!==</span><span class=\"mtk1\"> </span><span class=\"mtk8\">-</span><span class=\"mtk7\">1</span><span class=\"mtk1\">) </span><span class=\"mtk9\">return</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">child</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk11\">allChildren</span><span class=\"mtk1\">.</span><span class=\"mtk3\">get</span><span class=\"mtk1\">(</span><span class=\"mtk4\">key</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk8\">!</span><span class=\"mtk4\">child</span><span class=\"mtk1\">) </span><span class=\"mtk9\">return</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">insertionIndex</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk11\">presentKeys</span><span class=\"mtk1\">.</span><span class=\"mtk3\">indexOf</span><span class=\"mtk1\">(</span><span class=\"mtk4\">key</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk3\">onExit</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> () </span><span class=\"mtk9\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">allChildren</span><span class=\"mtk1\">.</span><span class=\"mtk3\">delete</span><span class=\"mtk1\">(</span><span class=\"mtk4\">key</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">exiting</span><span class=\"mtk1\">.</span><span class=\"mtk3\">delete</span><span class=\"mtk1\">(</span><span class=\"mtk4\">key</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk5 mtki\">// Remove this child from the present children</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">removeIndex</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk11\">presentChildren</span><span class=\"mtk1\">.</span><span class=\"mtk11\">current</span><span class=\"mtk1\">.</span><span class=\"mtk3\">findIndex</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      (</span><span class=\"mtk4 mtki\">presentChild</span><span class=\"mtk1\">) </span><span class=\"mtk9\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk11\">presentChild</span><span class=\"mtk1\">.</span><span class=\"mtk4\">key</span><span class=\"mtk1\"> </span><span class=\"mtk8\">===</span><span class=\"mtk1\"> </span><span class=\"mtk4\">key</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">presentChildren</span><span class=\"mtk1\">.</span><span class=\"mtk11\">current</span><span class=\"mtk1\">.</span><span class=\"mtk3\">splice</span><span class=\"mtk1\">(</span><span class=\"mtk4\">removeIndex</span><span class=\"mtk1\">, </span><span class=\"mtk7\">1</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk5 mtki\">// Defer re-rendering until all exiting children have indeed left</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk9\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk8\">!</span><span class=\"mtk11\">exiting</span><span class=\"mtk1\">.</span><span class=\"mtk4\">size</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">presentChildren</span><span class=\"mtk1\">.</span><span class=\"mtk4\">current</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk4\">filteredChildren</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk9\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">isMounted</span><span class=\"mtk1\">.</span><span class=\"mtk4\">current</span><span class=\"mtk1\"> </span><span class=\"mtk8\">===</span><span class=\"mtk1\"> </span><span class=\"mtk7\">false</span><span class=\"mtk1\">) </span><span class=\"mtk9\">return</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk3\">forceRender</span><span class=\"mtk1\">()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">onExitComplete</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&amp;&amp;</span><span class=\"mtk1\"> </span><span class=\"mtk3\">onExitComplete</span><span class=\"mtk1\">()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">childrenToRender</span><span class=\"mtk1\">.</span><span class=\"mtk3\">splice</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">insertionIndex</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk7\">0</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    &lt;</span><span class=\"mtk11\">PresenceChild</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk7 mtki\">key</span><span class=\"mtk8\">=</span><span class=\"mtk9\">{</span><span class=\"mtk3\">getChildKey</span><span class=\"mtk1\">(</span><span class=\"mtk4\">child</span><span class=\"mtk1\">)</span><span class=\"mtk9\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk7 mtki\">isPresent</span><span class=\"mtk8\">=</span><span class=\"mtk9\">{</span><span class=\"mtk7\">false</span><span class=\"mtk9\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk7 mtki\">onExitComplete</span><span class=\"mtk8\">=</span><span class=\"mtk9\">{</span><span class=\"mtk4\">onExit</span><span class=\"mtk9\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk7 mtki\">custom</span><span class=\"mtk8\">=</span><span class=\"mtk9\">{</span><span class=\"mtk4\">custom</span><span class=\"mtk9\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk7 mtki\">presenceAffectsLayout</span><span class=\"mtk8\">=</span><span class=\"mtk9\">{</span><span class=\"mtk4\">presenceAffectsLayout</span><span class=\"mtk9\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    &gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk9\">{</span><span class=\"mtk4\">child</span><span class=\"mtk9\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    &lt;/</span><span class=\"mtk11\">PresenceChild</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">})</span></span></span></code></pre>\n<p><a href=\"https://github.com/framer/motion/blob/85a60580d57650777871184561fc5e88508d7519/packages/framer-motion/src/components/AnimatePresence/index.tsx#L167-L212\">packages/framer-motion/src/components/AnimatePresence/index.tsx#L167-L212</a></p>\n<p><code>exiting</code> 에 정의된 <code>key</code> 를 순환하면서 <code>childrenToRender</code> 에 이전에 위치하던 곳에 추가합니다.</p>\n<p>이때 <code>onExit</code> 에 해당하는 이벤트를 추가하는데, exit 애니메이션 종료이후 <code>exiting</code>, <code>allChildren</code> <code>presentChildren</code> 에서 모두 제거 하여 추후 다시 마운트후 제거시 애니메이션이 동작 할 수 있도록 합니다.</p>\n<p>또한 <code>exit</code> 애니메이션이 종료후 바로 렌더링 하는 것이 아닌 모든 <code>exiting</code> 객체가 종료 이후 렌더링을 연기합니다.</p>\n<blockquote>\n<p>하지만 여기서 기존코드는 <code>const exiting = new Set&#x3C;ComponentKey>()</code> 으로 매번 초기화 되기 때문에 연속적으로 빠르게 exiting이 발생시 서로 다른 exiting 객체를 가리키고 있어서 <code>re-rendering</code> 이 발생하지 않는 이슈가 있습니다.</p>\n<p>해당 이슈는 <code>const exiting = useRef(new Set()).current</code> 로 감싸 모두 동일한 객체를 바라 볼 수 있도록 함으로 해결하였습니다.</p>\n</blockquote>\n<p><a href=\"https://github.com/framer/motion/pull/1569\">Fix AnimatePresence won't unmount fastly changing content by JaeSeoKim · Pull Request #1569 · framer/motion</a></p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"tsx\" data-index=\"20\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\">// Add `MotionContext` even to children that don&#39;t need it to ensure we&#39;re rendering</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\">// the same tree between renders</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">childrenToRender</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk11\">childrenToRender</span><span class=\"mtk1\">.</span><span class=\"mtk3\">map</span><span class=\"mtk1\">((</span><span class=\"mtk4 mtki\">child</span><span class=\"mtk1\">) </span><span class=\"mtk9\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">key</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk11\">child</span><span class=\"mtk1\">.</span><span class=\"mtk4\">key</span><span class=\"mtk1\"> </span><span class=\"mtk9\">as</span><span class=\"mtk1\"> </span><span class=\"mtk11\">string</span><span class=\"mtk1\"> | </span><span class=\"mtk11\">number</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">exiting</span><span class=\"mtk1\">.</span><span class=\"mtk3\">has</span><span class=\"mtk1\">(</span><span class=\"mtk4\">key</span><span class=\"mtk1\">) </span><span class=\"mtk9\">?</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">child</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ) </span><span class=\"mtk9\">:</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    &lt;</span><span class=\"mtk11\">PresenceChild</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk7 mtki\">key</span><span class=\"mtk8\">=</span><span class=\"mtk9\">{</span><span class=\"mtk3\">getChildKey</span><span class=\"mtk1\">(</span><span class=\"mtk4\">child</span><span class=\"mtk1\">)</span><span class=\"mtk9\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk7 mtki\">isPresent</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk7 mtki\">presenceAffectsLayout</span><span class=\"mtk8\">=</span><span class=\"mtk9\">{</span><span class=\"mtk4\">presenceAffectsLayout</span><span class=\"mtk9\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    &gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk9\">{</span><span class=\"mtk4\">child</span><span class=\"mtk9\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    &lt;/</span><span class=\"mtk11\">PresenceChild</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">})</span></span></span></code></pre>\n<p><a href=\"https://github.com/framer/motion/blob/85a60580d57650777871184561fc5e88508d7519/packages/framer-motion/src/components/AnimatePresence/index.tsx#L214-L229\">packages/framer-motion/src/components/AnimatePresence/index.tsx#L214-L229</a></p>\n<p><code>childrenToRender</code> 를 순회 하면서 <code>exiting</code> 객체에 속하지 않는 최초 렌더링 child의 경우 <code>MotionContext</code> 를 포함해야 하므로, 해당 내용을 주입합니다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"tsx\" data-index=\"21\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">env</span><span class=\"mtk1\"> </span><span class=\"mtk8\">!==</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&quot;production&quot;</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&amp;&amp;</span><span class=\"mtk1\"> </span><span class=\"mtk4\">exitBeforeEnter</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&amp;&amp;</span><span class=\"mtk1\"> </span><span class=\"mtk11\">childrenToRender</span><span class=\"mtk1\">.</span><span class=\"mtk4\">length</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk7\">1</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">console</span><span class=\"mtk1\">.</span><span class=\"mtk3\">warn</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk6\">`You&#39;re attempting to animate multiple children within AnimatePresence, but its exitBeforeEnter prop is set to true. This will lead to odd visual behaviour.`</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">return</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  &lt;&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk9\">{</span><span class=\"mtk11\">exiting</span><span class=\"mtk1\">.</span><span class=\"mtk4\">size</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk9\">?</span><span class=\"mtk1\"> </span><span class=\"mtk4\">childrenToRender</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk9\">:</span><span class=\"mtk1\"> </span><span class=\"mtk11\">childrenToRender</span><span class=\"mtk1\">.</span><span class=\"mtk3\">map</span><span class=\"mtk1\">((</span><span class=\"mtk4 mtki\">child</span><span class=\"mtk1\">) </span><span class=\"mtk9\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk3\">cloneElement</span><span class=\"mtk1\">(</span><span class=\"mtk4\">child</span><span class=\"mtk1\">))</span><span class=\"mtk9\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  &lt;/&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">)</span></span></span></code></pre>\n<p><a href=\"https://github.com/framer/motion/blob/85a60580d57650777871184561fc5e88508d7519/packages/framer-motion/src/components/AnimatePresence/index.tsx#L231-L247\">packages/framer-motion/src/components/AnimatePresence/index.tsx#L231-L247</a></p>\n<p><code>exitBeforeEnter</code> 사용시에 대한 비쥬얼 경고 코드가 있고, 이제 마지막으로 <code>childrenToRender</code> 를 화면에 렌더링 할 수 있도록 반환합니다.</p>\n<p>이제 <code>PresenceChild</code> 컴포넌트에서는 넘어온 데이터를 바탕으로 애니메이션을 동작시킨 이후, <code>exit</code> 애니메이션을 동작해야 한다면, 해당 애니메이션을 동작후 props로 넘어온 <code>onExitComplete</code> 를 호출 시켜, <code>AnimatePresence</code> 에서 해당 정보를 알 수 있습니다.</p>\n<h1 id=\"분석하면서\" style=\"position:relative;\"><a href=\"#%EB%B6%84%EC%84%9D%ED%95%98%EB%A9%B4%EC%84%9C\" aria-label=\"분석하면서 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>분석하면서…</h1>\n<p><code>framer-motion</code> 를 사용해보고 흥미가 생겨서 분석을 해보게 되었는데, 다양하게 활용하는 방법에 대해서 깊게 공부 할 수 있는 기회가 되었고, 또 코드를 읽으면서 의문점이 생긴 부분을 통해 코드 기여까지 갈 수 있다는게 좋았습니다.</p>\n<p>제가 분석한 글이 도움이 안될수 있지만, 다른 분들도 꼭 오픈소스를 분석하면서 공부와 함께 코드기여를 해볼수 있다는 것을 알 수 있으면 좋겠습니다.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .one-dark-pro {\n    background-color: #282c34;\n    color: #abb2bf;\n  }\n  .one-dark-pro .mtki { font-style: italic; }\n  .one-dark-pro .mtk9 { color: #C678DD; }\n  .one-dark-pro .mtk1 { color: #ABB2BF; }\n  .one-dark-pro .mtk11 { color: #E5C07B; }\n  .one-dark-pro .mtk8 { color: #56B6C2; }\n  .one-dark-pro .mtk4 { color: #E06C75; }\n  .one-dark-pro .mtk3 { color: #61AFEF; }\n  .one-dark-pro .mtk6 { color: #98C379; }\n  .one-dark-pro .mtk7 { color: #D19A66; }\n  .one-dark-pro .mtk5 { color: #7F848E; }\n  .one-dark-pro .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","tableOfContents":"<ul>\n<li><a href=\"/React/Framer-Motion%EC%9D%98-AnimatePresence-%EB%8F%99%EC%9E%91-%EC%9B%90%EB%A6%AC-%EB%B6%84%EC%84%9D%ED%95%98%EA%B8%B0/#framer-motion%EC%9D%98-animatepresence-%EB%8F%99%EC%9E%91-%EC%9B%90%EB%A6%AC-%EB%B6%84%EC%84%9D%ED%95%98%EA%B8%B0\">Framer Motion의 AnimatePresence 동작 원리 분석하기!</a></li>\n<li><a href=\"/React/Framer-Motion%EC%9D%98-AnimatePresence-%EB%8F%99%EC%9E%91-%EC%9B%90%EB%A6%AC-%EB%B6%84%EC%84%9D%ED%95%98%EA%B8%B0/#%EC%82%AC%EC%A0%84-%EC%A7%80%EC%8B%9D-%ED%95%99%EC%8A%B5%ED%95%98%EA%B8%B0\">사전 지식 학습하기</a></li>\n<li>\n<p><a href=\"/React/Framer-Motion%EC%9D%98-AnimatePresence-%EB%8F%99%EC%9E%91-%EC%9B%90%EB%A6%AC-%EB%B6%84%EC%84%9D%ED%95%98%EA%B8%B0/#react-%EA%B3%B5%EC%8B%9D-api-hook\">React 공식 API, Hook</a></p>\n<ul>\n<li>\n<p><a href=\"/React/Framer-Motion%EC%9D%98-AnimatePresence-%EB%8F%99%EC%9E%91-%EC%9B%90%EB%A6%AC-%EB%B6%84%EC%84%9D%ED%95%98%EA%B8%B0/#reactnode\">ReactNode</a></p>\n<ul>\n<li><a href=\"/React/Framer-Motion%EC%9D%98-AnimatePresence-%EB%8F%99%EC%9E%91-%EC%9B%90%EB%A6%AC-%EB%B6%84%EC%84%9D%ED%95%98%EA%B8%B0/#reactelement\">ReactElement</a></li>\n</ul>\n</li>\n<li><a href=\"/React/Framer-Motion%EC%9D%98-AnimatePresence-%EB%8F%99%EC%9E%91-%EC%9B%90%EB%A6%AC-%EB%B6%84%EC%84%9D%ED%95%98%EA%B8%B0/#cloneelement\">cloneElement()</a></li>\n<li><a href=\"/React/Framer-Motion%EC%9D%98-AnimatePresence-%EB%8F%99%EC%9E%91-%EC%9B%90%EB%A6%AC-%EB%B6%84%EC%84%9D%ED%95%98%EA%B8%B0/#isvalidelement\">isValidElement()</a></li>\n<li>\n<p><a href=\"/React/Framer-Motion%EC%9D%98-AnimatePresence-%EB%8F%99%EC%9E%91-%EC%9B%90%EB%A6%AC-%EB%B6%84%EC%84%9D%ED%95%98%EA%B8%B0/#reactchildren\">React.Children</a></p>\n<ul>\n<li><a href=\"/React/Framer-Motion%EC%9D%98-AnimatePresence-%EB%8F%99%EC%9E%91-%EC%9B%90%EB%A6%AC-%EB%B6%84%EC%84%9D%ED%95%98%EA%B8%B0/#reactchildrenonly\">React.Children.only</a></li>\n<li><a href=\"/React/Framer-Motion%EC%9D%98-AnimatePresence-%EB%8F%99%EC%9E%91-%EC%9B%90%EB%A6%AC-%EB%B6%84%EC%84%9D%ED%95%98%EA%B8%B0/#reactchildrenforeach\">React.Children.forEach</a></li>\n</ul>\n</li>\n<li><a href=\"/React/Framer-Motion%EC%9D%98-AnimatePresence-%EB%8F%99%EC%9E%91-%EC%9B%90%EB%A6%AC-%EB%B6%84%EC%84%9D%ED%95%98%EA%B8%B0/#useref\">useRef</a></li>\n<li><a href=\"/React/Framer-Motion%EC%9D%98-AnimatePresence-%EB%8F%99%EC%9E%91-%EC%9B%90%EB%A6%AC-%EB%B6%84%EC%84%9D%ED%95%98%EA%B8%B0/#uselayouteffect\">useLayoutEffect</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/React/Framer-Motion%EC%9D%98-AnimatePresence-%EB%8F%99%EC%9E%91-%EC%9B%90%EB%A6%AC-%EB%B6%84%EC%84%9D%ED%95%98%EA%B8%B0/#custom-react-hook\">Custom React Hook</a></p>\n<ul>\n<li><a href=\"/React/Framer-Motion%EC%9D%98-AnimatePresence-%EB%8F%99%EC%9E%91-%EC%9B%90%EB%A6%AC-%EB%B6%84%EC%84%9D%ED%95%98%EA%B8%B0/#useisomorphiclayouteffect\">useIsomorphicLayoutEffect</a></li>\n<li><a href=\"/React/Framer-Motion%EC%9D%98-AnimatePresence-%EB%8F%99%EC%9E%91-%EC%9B%90%EB%A6%AC-%EB%B6%84%EC%84%9D%ED%95%98%EA%B8%B0/#useismounted\">useIsMounted</a></li>\n<li><a href=\"/React/Framer-Motion%EC%9D%98-AnimatePresence-%EB%8F%99%EC%9E%91-%EC%9B%90%EB%A6%AC-%EB%B6%84%EC%84%9D%ED%95%98%EA%B8%B0/#useforceupdate\">useForceUpdate</a></li>\n<li><a href=\"/React/Framer-Motion%EC%9D%98-AnimatePresence-%EB%8F%99%EC%9E%91-%EC%9B%90%EB%A6%AC-%EB%B6%84%EC%84%9D%ED%95%98%EA%B8%B0/#useunmounteffect\">useUnmountEffect</a></li>\n</ul>\n</li>\n<li><a href=\"/React/Framer-Motion%EC%9D%98-AnimatePresence-%EB%8F%99%EC%9E%91-%EC%9B%90%EB%A6%AC-%EB%B6%84%EC%84%9D%ED%95%98%EA%B8%B0/#animatepresence-%EC%BD%94%EB%93%9C-%EB%B6%84%EC%84%9D%ED%95%98%EA%B8%B0\">AnimatePresence 코드 분석하기!</a></li>\n<li><a href=\"/React/Framer-Motion%EC%9D%98-AnimatePresence-%EB%8F%99%EC%9E%91-%EC%9B%90%EB%A6%AC-%EB%B6%84%EC%84%9D%ED%95%98%EA%B8%B0/#%EB%B6%84%EC%84%9D%ED%95%98%EB%A9%B4%EC%84%9C\">분석하면서…</a></li>\n</ul>","frontmatter":{"date":"2022년 06월 06일","title":"Framer Motion의 AnimatePresence 동작 원리 분석하기!","tags":["framer-motion","open source","react"]}}},"pageContext":{"slug":"/React/Framer-Motion의-AnimatePresence-동작-원리-분석하기/","previous":{"fields":{"slug":"/Security/log4j-취약점-Log4Shell-CVE-2021-44228/"},"frontmatter":{"title":"log4j 취약점(Log4Shell-CVE-2021-44228)이 무서운 이유"}},"next":null}},"staticQueryHashes":["1081905842","3911196313"]}