{"componentChunkName":"component---src-templates-blog-post-js","path":"/Javascript/42-readme-stats-개발기_1/","result":{"data":{"site":{"siteMetadata":{"author":"JaeSeoKim","comment":{"utterances":"JaeSeoKim/jaeseokim.github.io"},"sponsor":{"buyMeACoffeeId":"jaeseokim"}}},"markdownRemark":{"excerpt":"이번에 42Seoul에 합격하고 어느덧 3주가 넘어가는 시점이 되었다. 그동안 Libft, netwhat, get_next_line 과 같은 기본 서클 과제를 깨면서 Github에 올리고 그 정보를 readme.md 파일에 각 프로젝트에 대하여 설명을 작성을 하였는데 무언가 Badge 나 Status를 보여주는 dynamic 한 SVG 이미지를 제공해주는…","html":"<p>이번에 <code>42Seoul</code>에 합격하고 어느덧 3주가 넘어가는 시점이 되었다.</p>\n<p>그동안 <code>Libft</code>, <code>netwhat</code>, <code>get_next_line</code> 과 같은 기본 서클 과제를 깨면서 Github에 올리고 그 정보를 <code>readme.md</code> 파일에 각 프로젝트에 대하여 설명을 작성을 하였는데 무언가 <code>Badge</code> 나 <code>Status</code>를 보여주는 <code>dynamic</code> 한 <code>SVG</code> 이미지를 제공해주는 서비스가 필요 하겠다고 생각을 하게 되었다.</p>\n<p>그리고 이번에 <code>ft_printf</code> 과제를 하다가 중간에 집중이 안되어서 기분 전환 겸으로 <strong>토이 프로젝트</strong>를 시작하였다.!</p>\n<h1 id=\"-42-readme-stats\" style=\"position:relative;\"><a href=\"#-42-readme-stats\" aria-label=\" 42 readme stats permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🚀 <a href=\"https://github.com/JaeSeoKim/badge42\">42-readme-stats</a></h1>\n<p>바로 프로젝트 이름은 <strong><code>42-readme-stats</code></strong> 이다..! 🙌</p>\n<p>아직은 개발을 시작 한지 2일 밖에 안되는 시점이라 어떤 방향으로 계획하고 있는지, 또한 어떻게 개발을 해보고 있는지에 대하여 작성을 해본다.</p>\n<h2 id=\"️-프로젝트-설명\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%84%A4%EB%AA%85\" aria-label=\"️ 프로젝트 설명 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✏️ 프로젝트 설명</h2>\n<p>일단 Referense가 된 프로젝트가 있는데 바로 <strong><a href=\"https://github.com/anuraghazra/github-readme-stats\">github-readme-stats</a></strong> 이다.</p>\n<p>github-readme-stats는 <code>github-api</code>를 이용하여 사용자의 Github 정보를 바탕으로 Github 평가와 함께 정보를 보여주는 서비스 이다.</p>\n<p>이 서비스의 특 장점은 기본적으로 응닶 값이 <code>svg</code> 이기 때문에 <code>Github readme</code> 를 비롯한 대부분의 <code>Markdown</code> 에서 이미지로써 삽입이 가능하고 지속적으로 데이터가 변화되어진다는 것이다.</p>\n<blockquote>\n<p>예시 :</p>\n<p><img src=\"https://github-readme-stats.vercel.app/api?username=JaeSeoKim&#x26;bg_color=7f7fd5,86a8e7,91eac9&#x26;title_color=fff&#x26;text_color=fff\" alt=\"JaeSeoKim&#x27;s github stats\"></p>\n</blockquote>\n<p>이렇게 정보를 보여 주는 모습을 보고 어?? 이거 <code>42intra</code> 에서도 <code>API</code>를 제공 해주니깐 이걸로 한번 만들어 보면 좋지 않을까? 하고 시작을 하게 되었다.</p>\n<p>일단 대략적으로 목표로 하고 있는 기능들은 <code>Cursus</code> 별 상태와 <code>Project</code> 별 점수를 포함한 Retry 횟수? 등을 포함한 <code>Badge</code> 등을 만드는 것을 목표로 하고 있다.</p>\n<h2 id=\"-api를-사용해보자---graphql이-위대한-이유-ㅠㅠ\" style=\"position:relative;\"><a href=\"#-api%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%B4%EB%B3%B4%EC%9E%90---graphql%EC%9D%B4-%EC%9C%84%EB%8C%80%ED%95%9C-%EC%9D%B4%EC%9C%A0-%E3%85%A0%E3%85%A0\" aria-label=\" api를 사용해보자   graphql이 위대한 이유 ㅠㅠ permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔧 API를 사용해보자! - (<del>GraphQL이 위대한 이유 ㅠㅠ</del>)</h2>\n<p>일단 대부분의 API가 그렇듯 사용을 하기 위해서 <code>api.intra.42.fr</code> 에 들어가 문서를 읽고 <code>App</code>를 등록 후 필요한 정보에 대하여 가져오는 <code>API EndPoint</code>에 대해서 탐색을 해보았다.</p>\n<p>일단 시작을 하기 전에 등록한 <code>AppID</code> <code>SecretKey</code> 를 가지고 있다고 바로 요청이 가능한 것이 아니라 Token를 발급 후 사용이 가능하기 때문에 문서에서 설명한 것을 바탕으로 Token를 발급 받는 함수를 만들었다.</p>\n<p>그 다음 일단 기본적인 사용자가 가지고 있는 정보에 대해 알 수 있는 <code>EndPoint(\"/v2/users/:id\")</code> 에 요청을 하여 다양한 응답을 받았지만 현재 필요한 <code>login_name</code>, <code>first_name</code>, <code>last_name</code>, <code>id</code>, <code>email</code>, <code>capus 정보</code> 등을 Parsing하여 리턴을 하는 함수를 만들었다.</p>\n<p>이번에는 소속하고 있는 Team(coalition)의 <code>Name</code>, <code>Logo</code>와 <code>Color</code>를 가져와 배경 색과 로고를 보여주게 하기 위하여 <code>EndPoint(\"/v2/users/:id/coalitions\")</code> 에 요청을 하는 함수를 만들었다.</p>\n<p>하지만 이것만 으로도 아직 원하는 정보를 모두 얻을 수가 없어서 또 한번 Rest Api의 EndPoint에 접근하여 정보를 가져오게 되었다 ㅠㅠ(<del>42Api를 이용한 인트라 어플이 존재하였는데 사용시 너무 로딩 시간이 길어서 불만 이였지만 그 이유를 알게 된 것 같았다 ㅠㅠㅠ</del>)</p>\n<p>마지막으로 현재 진행 중인 <code>cursus</code>의 정보를 가져와 현재 <code>블랙홀의 정보</code>, <code>시작 날짜</code>, <code>종료 날짜</code>, <code>현재 레벨</code> 등의 정보를 가져오는 작업을 했다.</p>\n<p>이 때 발생했던 문제는 endpoint에 접근을 할 때 기존 <code>Intra id</code> 로 사용을 하는 것이 아닌 <code>EndPoint(\"/v2/users/:id\")</code> 에 요청을 하여서 받은 <code>id</code> 를 가지고 요청을 해야 하기 때문에 동시에 실행이 불가능하게 되는 요인이 되었다.</p>\n<p>위와 같은 API 호출에 관한 함수를 전부 제작을 하고 나니 호출 시 응답을 받는데 까지 대략적으로 <code>5~10</code> 사이의 시간이 걸리는 것을 볼 수 있었다.....</p>\n<p>기본적으로 <code>42intra</code> 가 프랑스에 존재하기 때문에 기본적으로 응답 시간이 느린 편인데 이것을 동시에 요청이 불가능 하기 때문에 엄청난 속도를 볼 수 있었다...</p>\n<p>이 부분을 조금이라도 해결하기 위해 Promise 객체를 이용하여 동시에 요청이 가능한 것은 묶어서 요청을 하였지만 이 방법도 중간 중간 너무 빠르게 요청을 보낸다는 이유로 응답 거부를 받기 때문에 실패 하였다...</p>\n<p>이 문제를 해결 하기 위해 일단 생각 하고 있는 방법은 <code>Cache</code>를 하여 처리를 할려고 생각을 하고 있다.</p>\n<blockquote>\n<p>GraphQL를 공부하면서 단 하나의 EndPoint로 모든 요청이 가능하다는 점에 대하여 엄청난 장점인가? 하고 의문을 가진적이 있었는데 실제로 Rest API를 사용하면서 EndPoint가 수십 곳으로 분기가 되어 있으니 응답 속도에 대하여 문제가 있을 수 있다는 것을 확실히 깨닫게 되었다. (api.intra.42.fr API v3에 새롭게 GraphQL로 바꿔서 내주세요 ㅠㅠㅠ)</p>\n</blockquote>\n<h2 id=\"-svg-디자인\" style=\"position:relative;\"><a href=\"#-svg-%EB%94%94%EC%9E%90%EC%9D%B8\" aria-label=\" svg 디자인 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎨 SVG 디자인!</h2>\n<p>일단 간단하게 무지막지하게 느리지만 API를 통해 성공적으로 정보를 가져왔으니 이제 SVG를 완성하여서 Return해주는 부분에 대하여 고민을 해보았다.</p>\n<p>일단 기본적으로 응답을 받을 때 SVG로 사용을 하기 위해서는 <code>Content-Type</code> 이 <code>image/svg+xml</code> 으로 설정이 되어 있어야 하기 때문에 response의 Header에 설정을 하였고, 이제 response에 Send해야 하는 <code>Text</code>를 <code>SVG</code> render가 된 것을 Return 해야 하기 때문에 일단은 단순 무식하지만 아래와 같이 SVG TEXT를 리턴 하도록 만들었다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"js\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk10\">import</span><span class=\"mtk1\"> </span><span class=\"mtk4\">getImageToBase64</span><span class=\"mtk1\"> </span><span class=\"mtk10\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&quot;../util/getImageToBase64&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk10\">import</span><span class=\"mtk1\"> </span><span class=\"mtk4\">getRemainDay</span><span class=\"mtk1\"> </span><span class=\"mtk10\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&quot;../util/getRemainDay&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk10\">import</span><span class=\"mtk1\"> </span><span class=\"mtk4\">renderBlackhole</span><span class=\"mtk1\"> </span><span class=\"mtk10\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&quot;./renderBlackhole&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk10\">import</span><span class=\"mtk1\"> </span><span class=\"mtk4\">renderCursus</span><span class=\"mtk1\"> </span><span class=\"mtk10\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&quot;./renderCursus&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk10\">import</span><span class=\"mtk1\"> </span><span class=\"mtk4\">renderHeader</span><span class=\"mtk1\"> </span><span class=\"mtk10\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&quot;./renderHeader&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk10\">import</span><span class=\"mtk1\"> </span><span class=\"mtk4\">renderLogo</span><span class=\"mtk1\"> </span><span class=\"mtk10\">from</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&quot;./renderLogo&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk10\">export</span><span class=\"mtk1\"> </span><span class=\"mtk10\">default</span><span class=\"mtk1\"> </span><span class=\"mtk10\">async</span><span class=\"mtk1\"> (</span><span class=\"mtk4 mtki\">user_data</span><span class=\"mtk1\">) </span><span class=\"mtk10\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">console</span><span class=\"mtk1\">.</span><span class=\"mtk3\">log</span><span class=\"mtk1\">(</span><span class=\"mtk4\">user_data</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk10\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">color</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk4\">user_data</span><span class=\"mtk1\">.</span><span class=\"mtk4\">color</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk10\">?</span><span class=\"mtk1\"> </span><span class=\"mtk4\">user_data</span><span class=\"mtk1\">.</span><span class=\"mtk4\">color</span><span class=\"mtk1\">.</span><span class=\"mtk3\">substring</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk7\">1</span><span class=\"mtk1\">) </span><span class=\"mtk8\">==</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&quot;#&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk10\">?</span><span class=\"mtk1\"> </span><span class=\"mtk4\">user_data</span><span class=\"mtk1\">.</span><span class=\"mtk4\">color</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk10\">:</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&quot;#&quot;</span><span class=\"mtk1\"> </span><span class=\"mtk8\">+</span><span class=\"mtk1\"> </span><span class=\"mtk4\">user_data</span><span class=\"mtk1\">.</span><span class=\"mtk4\">color</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk10\">:</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&quot;#00BABC&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk10\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">logo</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk10\">await</span><span class=\"mtk1\"> </span><span class=\"mtk3\">getImageToBase64</span><span class=\"mtk1\">(</span><span class=\"mtk4\">user_data</span><span class=\"mtk1\">.</span><span class=\"mtk4\">image_url</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk5 mtki\">// TODO: end_at이 null이 아닌 경우 언제 종료 했는지 보여주어야 함.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk10\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">blackhole_remain</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">getRemainDay</span><span class=\"mtk1\">(</span><span class=\"mtk4\">user_data</span><span class=\"mtk1\">.</span><span class=\"mtk4\">blackholed_at</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk10\">return</span><span class=\"mtk1\"> </span><span class=\"mtk6\">`</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk6\">    &lt;svg</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk6\">      width=&quot;495&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk6\">      height=&quot;195&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk6\">      viewBox=&quot;0 0 495 195&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk6\">      fill=&quot;none&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk6\">      xmlns=&quot;http://www.w3.org/2000/svg&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk6\">    &gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk6\">    &lt;style&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk6\">    .bg {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk6\">      width: 100%;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk6\">      object-fit: fill;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk6\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk6\">    .header {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk6\">      font: 600 18px &#39;Arial&#39;, &#39;Segoe UI&#39;, Ubuntu, Sans-Serif;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk6\">      fill: #fff;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk6\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk6\">    .logo {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk6\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk6\">    .cursus {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk6\">      font: 600 14px &#39;Arial&#39;, &#39;Segoe UI&#39;, Ubuntu, Sans-Serif;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk6\">      fill: #fff;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk6\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk6\">    &lt;/style&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk6\">    &lt;rect</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk6\">      x=&quot;0.5&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk6\">      y=&quot;0.5&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk6\">      rx=&quot;4.5&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk6\">      height=&quot;99%&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk6\">      stroke=&quot;#E4E2E2&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk6\">      width=&quot;494&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk6\">      fill=&quot;</span><span class=\"mtk10\">${</span><span class=\"mtk4\">color</span><span class=\"mtk10\">}</span><span class=\"mtk6\">&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk6\">      stroke-opacity=&quot;1&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk6\">    /&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk6\">    </span><span class=\"mtk10\">${</span><span class=\"mtk3\">renderLogo</span><span class=\"mtk1\">(</span><span class=\"mtk4\">color</span><span class=\"mtk1\">, </span><span class=\"mtk4\">logo</span><span class=\"mtk1\">)</span><span class=\"mtk10\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk6\">    </span><span class=\"mtk10\">${</span><span class=\"mtk3\">renderHeader</span><span class=\"mtk1\">(</span><span class=\"mtk4\">user_data</span><span class=\"mtk1\">.</span><span class=\"mtk4\">login</span><span class=\"mtk1\">, </span><span class=\"mtk4\">user_data</span><span class=\"mtk1\">.</span><span class=\"mtk4\">capus</span><span class=\"mtk1\">.</span><span class=\"mtk4\">name</span><span class=\"mtk1\">)</span><span class=\"mtk10\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk6\">    </span><span class=\"mtk10\">${</span><span class=\"mtk3\">renderCursus</span><span class=\"mtk1\">(</span><span class=\"mtk4\">user_data</span><span class=\"mtk1\">.</span><span class=\"mtk4\">cursus_name</span><span class=\"mtk1\">)</span><span class=\"mtk10\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk6\">    </span><span class=\"mtk10\">${</span><span class=\"mtk3\">renderBlackhole</span><span class=\"mtk1\">(</span><span class=\"mtk4\">blackhole_remain</span><span class=\"mtk1\">)</span><span class=\"mtk10\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk6\">    &lt;/svg&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk6\">  `</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>작성을 하다 보니 모든 SVG 디자인을 한 곳에서 몰아서 할 이유가 없기 때문에 각 Part 별로 함수를 분리하여서 제작을 하였다.</p>\n<p>아직은 제작 중이지만 결과를 보면 아래와 같이 완성된 모습을 볼 수 있다.</p>\n<h3 id=\"-개발-중-샘플---2020-10-17-02시-기준\" style=\"position:relative;\"><a href=\"#-%EA%B0%9C%EB%B0%9C-%EC%A4%91-%EC%83%98%ED%94%8C---2020-10-17-02%EC%8B%9C-%EA%B8%B0%EC%A4%80\" aria-label=\" 개발 중 샘플   2020 10 17 02시 기준 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👷 개발 중 샘플 - (2020-10-17 02시 기준)</h3>\n<p><em>(응답으로 온 SVG를 저장하여 보여 주는 모습입니다. 개발되어 변경된 모습을 Live로 보고 싶다면 <a href=\"https://github.com/JaeSeoKim/badge42\">github</a>로 들어와 확인 해주세요!)</em></p>\n<p>(2020-10-17 기준)</p>\n<p><img src=\"/d6c45910c543c56dc2cca04e9ebfbc1e/jaeskim.svg\" alt=\"sample_jaeskim\"></p>\n<p><img src=\"/e6ec3edf0d9d9f418efb098d38f13516/hkwon.svg\" alt=\"sample_hkwon\"></p>\n<p><img src=\"/3b4068747cbaad24eaa2eb7cc01daf6c/spark.svg\" alt=\"sample_spark\"></p>\n<p><img src=\"/26e41217f323361aee71908774583a2e/yjung.svg\" alt=\"sample_yjung\"></p>\n<h2 id=\"-개발-방향\" style=\"position:relative;\"><a href=\"#-%EA%B0%9C%EB%B0%9C-%EB%B0%A9%ED%96%A5\" aria-label=\" 개발 방향 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🚧 개발 방향!</h2>\n<h3 id=\"느린-응답-속도\" style=\"position:relative;\"><a href=\"#%EB%8A%90%EB%A6%B0-%EC%9D%91%EB%8B%B5-%EC%86%8D%EB%8F%84\" aria-label=\"느린 응답 속도 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>느린 응답 속도...</h3>\n<p>개발을 하면서 지금 가장 큰 문제점인 응답 속도에 대하여 고민을 하게 되었는데 일단 임시 조치와 같은 형태로 아래의 코드를 추가함으로 <code>Cache</code> 되도록 처리를 하였다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"js\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">res</span><span class=\"mtk1\">.</span><span class=\"mtk3\">setHeader</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&quot;Cache-Control&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk6\">&quot;s-maxage=3600, stale-while-revalidate&quot;</span><span class=\"mtk1\">)</span></span></span></code></pre>\n<p>일단 저 조치를 통하여 저 시간 동안은 괜찮겠지만 그 다음 로딩 시 무수히 느린 응답을 받게 된다면 사용자는 첫 로딩 시에는 제대로 된 결과 화면을 마주 할 수 없으므로 그 부분에 대하여 개선이 필요하다.</p>\n<p>지금 <code>vercel</code>를 이용하여 사용을 하고 있는데 이 서비스는 <code>ServerLess</code> 형태로 운영이 되기 때문에 사용된 Token를 메모리에 저장을 하고 결과 값을 Cache화 하는 방법 등에 대하여 사용이 어렵기 때문에 Heroku로 서버를 이전을 하고 지금 <code>Next.js</code> 를 사용 하였지만 <code>Express</code> 또는 <code>Koa</code> 를 API 담당 하도록 하여서 <code>Token</code> 이 만약 <code>expires_in</code> 에 해당하는 시간이 메모리에 남아 있도록 하여서 API 요청 할 때 마다 요청 하는 작업을 줄이도록 하고 그리고 기본적으로 필요한 정보를 아예 Hompage에서 정보를 받아와 URL를 완성 시켜 API 호출을 최소화 하는 방향으로 수정을 해봐야 할 것 같다.</p>\n<h3 id=\"추가-적인-기능\" style=\"position:relative;\"><a href=\"#%EC%B6%94%EA%B0%80-%EC%A0%81%EC%9D%B8-%EA%B8%B0%EB%8A%A5\" aria-label=\"추가 적인 기능 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>추가 적인 기능!</h3>\n<p>지금은 일단 사용자의 Stats를 보여 주는 기능만 만들고 있지만 추가적으로 각 프로젝트에 대한 <code>점수</code>와 <code>완료한 날짜</code>, 몇번 시도를 했는지 등에 대하여 보여주는 <code>Badge</code> 기능도 추가를 해보는 방향으로 개선을 해보고 싶다.</p>\n<h2 id=\"-마무리-하면서\" style=\"position:relative;\"><a href=\"#-%EB%A7%88%EB%AC%B4%EB%A6%AC-%ED%95%98%EB%A9%B4%EC%84%9C\" aria-label=\" 마무리 하면서 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🙈 마무리 하면서...</h2>\n<p>처음 시작을 할 때에는 가볍게 한번 이게 가능 할까? 하고 시작을 했지만 고민을 하다 보니 제대로 완성을 하고 싶어져서 이렇게 개발 일지를 작성하게 되었다.</p>\n<p>아직은 개발을 시작한지 몇 일 안된 조그만한 프로젝트 지만 몇 달 뒤에는 42에 속한 사람들이 다들 자연스럽게 사용하는 프로젝트가 되는 것이 목표 이다!</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .one-dark-pro {\n    background-color: #282c34;\n    color: #abb2bf;\n  }\n  .one-dark-pro .mtki { font-style: italic; }\n  .one-dark-pro .mtk10 { color: #C678DD; }\n  .one-dark-pro .mtk1 { color: #ABB2BF; }\n  .one-dark-pro .mtk4 { color: #E06C75; }\n  .one-dark-pro .mtk6 { color: #98C379; }\n  .one-dark-pro .mtk11 { color: #E5C07B; }\n  .one-dark-pro .mtk3 { color: #61AFEF; }\n  .one-dark-pro .mtk8 { color: #56B6C2; }\n  .one-dark-pro .mtk7 { color: #D19A66; }\n  .one-dark-pro .mtk5 { color: #7F848E; }\n  .one-dark-pro .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","tableOfContents":"<ul>\n<li>\n<p><a href=\"/Javascript/42-readme-stats-%EA%B0%9C%EB%B0%9C%EA%B8%B0_1/#-42-readme-stats\">🚀 42-readme-stats</a></p>\n<ul>\n<li><a href=\"/Javascript/42-readme-stats-%EA%B0%9C%EB%B0%9C%EA%B8%B0_1/#%EF%B8%8F-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%84%A4%EB%AA%85\">✏️ 프로젝트 설명</a></li>\n<li><a href=\"/Javascript/42-readme-stats-%EA%B0%9C%EB%B0%9C%EA%B8%B0_1/#-api%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%B4%EB%B3%B4%EC%9E%90---graphql%EC%9D%B4-%EC%9C%84%EB%8C%80%ED%95%9C-%EC%9D%B4%EC%9C%A0-%E3%85%A0%E3%85%A0\">🔧 API를 사용해보자! - (<del>GraphQL이 위대한 이유 ㅠㅠ</del>)</a></li>\n<li>\n<p><a href=\"/Javascript/42-readme-stats-%EA%B0%9C%EB%B0%9C%EA%B8%B0_1/#-svg-%EB%94%94%EC%9E%90%EC%9D%B8\">🎨 SVG 디자인!</a></p>\n<ul>\n<li><a href=\"/Javascript/42-readme-stats-%EA%B0%9C%EB%B0%9C%EA%B8%B0_1/#-%EA%B0%9C%EB%B0%9C-%EC%A4%91-%EC%83%98%ED%94%8C---2020-10-17-02%EC%8B%9C-%EA%B8%B0%EC%A4%80\">👷 개발 중 샘플 - (2020-10-17 02시 기준)</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/Javascript/42-readme-stats-%EA%B0%9C%EB%B0%9C%EA%B8%B0_1/#-%EA%B0%9C%EB%B0%9C-%EB%B0%A9%ED%96%A5\">🚧 개발 방향!</a></p>\n<ul>\n<li><a href=\"/Javascript/42-readme-stats-%EA%B0%9C%EB%B0%9C%EA%B8%B0_1/#%EB%8A%90%EB%A6%B0-%EC%9D%91%EB%8B%B5-%EC%86%8D%EB%8F%84\">느린 응답 속도...</a></li>\n<li><a href=\"/Javascript/42-readme-stats-%EA%B0%9C%EB%B0%9C%EA%B8%B0_1/#%EC%B6%94%EA%B0%80-%EC%A0%81%EC%9D%B8-%EA%B8%B0%EB%8A%A5\">추가 적인 기능!</a></li>\n</ul>\n</li>\n<li><a href=\"/Javascript/42-readme-stats-%EA%B0%9C%EB%B0%9C%EA%B8%B0_1/#-%EB%A7%88%EB%AC%B4%EB%A6%AC-%ED%95%98%EB%A9%B4%EC%84%9C\">🙈 마무리 하면서...</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"date":"2020년 10월 17일","title":"[Javascript] 42-readme-stats 개발기(1)","tags":["badge42","Readme Badge","Javascript","42seoul"]}}},"pageContext":{"slug":"/Javascript/42-readme-stats-개발기_1/","previous":{"fields":{"slug":"/C/C-variable-argument-사용법에-대해-알아-보기/"},"frontmatter":{"title":"[C] variable argument 사용법에 대해 알아 보기!"}},"next":{"fields":{"slug":"/Javascript/badge42-개발기_2_aka_42-readme-stats/"},"frontmatter":{"title":"[Javascript] badge42 개발기(2) aka.42-readme-stats"}}}},"staticQueryHashes":["1081905842","63159454"]}