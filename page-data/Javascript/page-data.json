{"componentChunkName":"component---src-templates-category-js","path":"/Javascript/","result":{"data":{"site":{"siteMetadata":{"configs":{"countOfInitialPost":10}}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"✍️ 이전 1편 읽으러 가기! 하위 Notion Block 불러오기! 저번에 간단하게 만들어둔 Block Rendering 부분에서 Child Component 를 Rendering 하는 부분은 코드 상으로 존재하지만 notion 의 응답이 실제 typedef 된 부분과 다르기 때문에 아래의 함수를 만들어서 재귀를 돌려 하위 child blocks 모두 불…","fields":{"slug":"/Javascript/analysis-notion-api-feat_nextjs_part_2/"},"frontmatter":{"date":"2021년 07월 26일","title":"Notion API 분석해보기!(feat. Next.js)(2)","tags":["notion","notion-api","next.js"]}}},{"node":{"excerpt":"최근에 Noiton API Beta로 오픈이 되어서 한번 Notion를 CMS로 하는 사이트를 개발 할려고 하다가 생각 보다 지원하는 기능이 적어서 분석하는 글을 작성하게 되었습니다. 글을 작성하면서 참고하게된 Reference는 다음과 같습니다. 🔗 https://samuelkraft.com/blog/building-a-notion-blog-with-p…","fields":{"slug":"/Javascript/analysis-notion-api-feat_nextjs_part_1/"},"frontmatter":{"date":"2021년 07월 24일","title":"Notion API 분석해보기!(feat. Next.js)(1)","tags":["notion","notion-api","next.js"]}}},{"node":{"excerpt":"토이 프로젝트(badge42) 개발기 3편 입니다! 이전글 1편 보러 가기! 이전글 2편 보러 가기! 이전글 3편 보러 가기! 📌 badge42! 한동안 개발을 하면서 많은 변화와 함께 여러가지 이슈에 대해 해결한 방법에 대해 기록을 하고자 작성을 해보았다! ♻️ Typescript로 이전! 이전 부터 작업을 하면서 불만 이였던 부분중 하나인 API 응답값…","fields":{"slug":"/Javascript/badge42-개발기_4/"},"frontmatter":{"date":"2020년 11월 22일","title":"[Typescript] badge42 개발기(4)","tags":["Badge42","Readme Badge","Javascript","42Seoul"]}}},{"node":{"excerpt":"토이 프로젝트(badge42) 개발기 3편 입니다! 이전글 1편 보러 가기! 이전글 2편 보러 가기! 📌 badge42! (aka. 42-readme-stats) 이전과 달리 개발에 대해서는 아직 ft_printf 프로젝트를 진행 중이라서 추가로 개발이 되었던 부분은 없지만 깃허브와 슬랙으로 이슈를 받게 되어서 그 부분에 해결한 기록을 남겨 보려고 한다!…","fields":{"slug":"/Javascript/badge42-개발기_3_aka_42-readme-stats/"},"frontmatter":{"date":"2020년 11월 01일","title":"[Javascript] badge42 개발기(3) aka.42-readme-stats","tags":["Badge42","Readme Badge","Javascript","42Seoul"]}}},{"node":{"excerpt":"토이 프로젝트(badge42) 개발기 2편 입니다! 이전글 1편 보러 가기! 📌 badge42! (aka. 42-readme-stats) 이전에 작성했던 글에서는 프로젝트 명을 42-readme-stats로 명명 하였는데 이번에 구조를 개선하기 위하여 Vercel에서 Heroku로 이전을 하게 되면서 Heroku의 도메인은 영어 소문자로 시작을 해야 한다…","fields":{"slug":"/Javascript/badge42-개발기_2_aka_42-readme-stats/"},"frontmatter":{"date":"2020년 10월 20일","title":"[Javascript] badge42 개발기(2) aka.42-readme-stats","tags":["Badge42","Readme Badge","Javascript","42Seoul"]}}},{"node":{"excerpt":"이번에 42Seoul에 합격하고 어느덧 3주가 넘어가는 시점이 되었다. 그동안 Libft, netwhat, get_next_line 과 같은 기본 서클 과제를 깨면서 Github에 올리고 그 정보를 readme.md 파일에 각 프로젝트에 대하여 설명을 작성을 하였는데 무언가 Badge 나 Status를 보여주는 dynamic 한 SVG 이미지를 제공해주는…","fields":{"slug":"/Javascript/42-readme-stats-개발기_1/"},"frontmatter":{"date":"2020년 10월 17일","title":"[Javascript] 42-readme-stats 개발기(1)","tags":["Badge42","Readme Badge","Javascript","42Seoul"]}}},{"node":{"excerpt":"TypeScript는 다양한 타입을 가지고 있기 때문에 타입에 대해서 정리를 해보았다. Any any 타입은 어떤 타입이 와도 전부 허용을 한다는 타입이다. 하지만 이 타입을 사용할 때에는 주의를 기울어서 사용을 해야 한다. 만약 any타입을 남발해서 사용을 하게 된다면 TypeChecker가 동작하지 않게 되고 기존 JavaScript와 다른 점이 없어…","fields":{"slug":"/Javascript/typescript-basic-types/"},"frontmatter":{"date":"2020년 09월 19일","title":"[TypeScript] Basic Types","tags":["TypeScript"]}}},{"node":{"excerpt":"TypeScript? TypeScript에 대해서 처음 관심을 가지게 된 것은 React를 공부하며 개발을 하다 중간 중간 Type에 대해 제대로 체크를 안하고 그냥 사용을 하다 런타임에서 문제가 발생한다는 것을 눈으로 보고 수정을 하는 경우가 많았는데 이러한 문제를 원천 차단 할 수 있는 JavaScript 의 SuperSet 언어인 TypeScript…","fields":{"slug":"/Javascript/hello-typescript-with-deno/"},"frontmatter":{"date":"2020년 08월 31일","title":"[TypeScript] Hello TypeScript! with Deno🦕","tags":["TypeScript","Deno"]}}}]}},"pageContext":{"categoryRegex":"/^(/home/runner/work/jaeseokim.github.io/jaeseokim.github.io/content/posts/)(Javascript/)([^/]*.md$)/"}},"staticQueryHashes":["1081905842","1900723382","63159454"]}