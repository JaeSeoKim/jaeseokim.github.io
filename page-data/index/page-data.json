{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"site":{"siteMetadata":{"configs":{"countOfInitialPost":10}}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"귀여운 Docker Logo! 🐳 Docker란! Docker는 Linux Container 기술을 이용하여 만든 Container 기술 중 하나! Linux Container는 기본적으로 프로세스를 격리 시킨다는 개념에서 출발. 예를 들어 chroot 명령어는 프로세스가 접근 할 수 있는 / 경로를 변경하여 접근 하는 파일에 대해서 제어 가능. 하지만 …","fields":{"slug":"/Etc/docker기초부터-wordpress서비스-직접구현까지/"},"frontmatter":{"date":"2020년 12월 01일","title":"🐳 Docker 기초 부터 Wordpress 서비스 직접 구현 까지!","tags":["docker","ft_server","42seoul"]}}},{"node":{"excerpt":"🚧 프로젝트 진행 기간 2020.10.05 ~ 2020.11.19 ft_printf-score 이번에 ft_printf 프로젝트를 진행하면서 어떤 형태로 고민을 하고 해결을 하였는 지에 대해 기록을 하고자 작성을 해본다. ✈️ 프로젝트 시작 ft_printf라는 프로젝트를 들었을 때는 선발 과정인 피신 과정 진행 중 이였다. 처음에는 농담 식으로 이렇게 s…","fields":{"slug":"/C/42Seoul-ft_printf-프로젝트-기록/"},"frontmatter":{"date":"2020년 11월 24일","title":"[42Seoul] ft_printf 프로젝트 기록.","tags":["42seoul","ft_printf","C"]}}},{"node":{"excerpt":"토이 프로젝트(badge42) 개발기 3편 입니다! 이전글 1편 보러 가기! 이전글 2편 보러 가기! 이전글 3편 보러 가기! 📌 badge42! 한동안 개발을 하면서 많은 변화와 함께 여러가지 이슈에 대해 해결한 방법에 대해 기록을 하고자 작성을 해보았다! ♻️ Typescript로 이전! 이전 부터 작업을 하면서 불만 이였던 부분중 하나인 API 응답값…","fields":{"slug":"/Javascript/badge42-개발기_4/"},"frontmatter":{"date":"2020년 11월 22일","title":"[Typescript] badge42 개발기(4)","tags":["badge42","Readme Badge","Javascript","42seoul"]}}},{"node":{"excerpt":"intro 이전부터 42seoul의 프로젝트를 진행하면서 vscode debugger 를 사용하는 일이 많아지면서 한번 간단하게 예시를 이용하여 정리를 해보았다! vscode debugger! vscode에서는 다양한 언어에 대하여 디버깅 기능을 지원을 하는데 여기서는 c/c++ 언어에 대하여 사용하는 법에 대하여 작성을 해본다. 일단 디버깅을 위해서는 …","fields":{"slug":"/C/C-vscode-debugger-사용하기/"},"frontmatter":{"date":"2020년 11월 15일","title":"[C] vscode debugger 사용하기!","tags":["C","vscode","debug"]}}},{"node":{"excerpt":"일단 부동소수점(Floating Point System)이란 컴퓨터에서 실수를 표현하는 방법 중 하나이다. 기본적으로 부동소수점이란 움직이지 않는다는 뜻의 부동이 아닌 자유 롭게 떠다닌다는 의미의 부동(浮動)이다. 즉 부동소수점이라는 것은 2bit로 표현을 할 때 소수점 위치에 대해 가변적으로 조절을 하여 사용한다고 이해를 하면 된다. 부동소수점(Floa…","fields":{"slug":"/Etc/부동소수점(Floating_Point_System)_알아보기!(feat.ft_printf)/"},"frontmatter":{"date":"2020년 11월 08일","title":"부동소수점(Floating Point System) 알아보기!(feat.ft_printf)","tags":["IEEE 754","42seoul","ft_printf"]}}},{"node":{"excerpt":"토이 프로젝트(badge42) 개발기 3편 입니다! 이전글 1편 보러 가기! 이전글 2편 보러 가기! 📌 badge42! (aka. 42-readme-stats) 이전과 달리 개발에 대해서는 아직 ft_printf 프로젝트를 진행 중이라서 추가로 개발이 되었던 부분은 없지만 깃허브와 슬랙으로 이슈를 받게 되어서 그 부분에 해결한 기록을 남겨 보려고 한다!…","fields":{"slug":"/Javascript/badge42-개발기_3_aka_42-readme-stats/"},"frontmatter":{"date":"2020년 11월 01일","title":"[Javascript] badge42 개발기(3) aka.42-readme-stats","tags":["badge42","Readme Badge","Javascript","42seoul"]}}},{"node":{"excerpt":"intro 42Seoul에서 열심히 공부를 하면서 ft_print 서브젝트를 진행하면서 유니코드를 write() 함수로 직접 출력 해야 하는 부분이 있어서 공부를 하게 되었다. UNICODE? 유니코드(Unicode)는 전 세계의 모든 문자를 컴퓨터에서 일관되게 표현하고 다룰 수 있도록 설계된 산업 표준이며, 유니코드 협회(Unicode Consortiu…","fields":{"slug":"/C/C-유니코드(unicode)에_대해_알아보기(feat.42seoul_ft_printf)/"},"frontmatter":{"date":"2020년 10월 23일","title":"[C] 유니코드(unicode)에 대해 알아보기! (feat. 42seoul{ft_printf})","tags":["c","ft_printf","42seoul"]}}},{"node":{"excerpt":"토이 프로젝트(badge42) 개발기 2편 입니다! 이전글 1편 보러 가기! 📌 badge42! (aka. 42-readme-stats) 이전에 작성했던 글에서는 프로젝트 명을 42-readme-stats로 명명 하였는데 이번에 구조를 개선하기 위하여 Vercel에서 Heroku로 이전을 하게 되면서 Heroku의 도메인은 영어 소문자로 시작을 해야 한다…","fields":{"slug":"/Javascript/badge42-개발기_2_aka_42-readme-stats/"},"frontmatter":{"date":"2020년 10월 20일","title":"[Javascript] badge42 개발기(2) aka.42-readme-stats","tags":["badge42","Readme Badge","Javascript","42seoul"]}}},{"node":{"excerpt":"이번에 42Seoul에 합격하고 어느덧 3주가 넘어가는 시점이 되었다. 그동안 Libft, netwhat, get_next_line 과 같은 기본 서클 과제를 깨면서 Github에 올리고 그 정보를 readme.md 파일에 각 프로젝트에 대하여 설명을 작성을 하였는데 무언가 Badge 나 Status를 보여주는 dynamic 한 SVG 이미지를 제공해주는…","fields":{"slug":"/Javascript/42-readme-stats-개발기_1/"},"frontmatter":{"date":"2020년 10월 17일","title":"[Javascript] 42-readme-stats 개발기(1)","tags":["badge42","Readme Badge","Javascript","42seoul"]}}},{"node":{"excerpt":"Intro 42Seoul의 본 과정을 드디어 시작을 하여서 빠르게 Libft 프로젝트를 클리어 하여서 ft_printf 프로젝트를 풀기 위해 준비를 하게 되었다. 일단 함수의 proto type은 반드시 ft_printf(const char *, ...); 이여야 한다는 조건과 함께 va_* 와 같은 함수들의 제약 조건이 해제 되어 있는 것을 보고 가변 …","fields":{"slug":"/C/C-variable-argument-사용법에-대해-알아-보기/"},"frontmatter":{"date":"2020년 10월 06일","title":"[C] variable argument 사용법에 대해 알아 보기!","tags":["c","ft_printf","42seoul"]}}},{"node":{"excerpt":"TypeScript는 다양한 타입을 가지고 있기 때문에 타입에 대해서 정리를 해보았다. Any any 타입은 어떤 타입이 와도 전부 허용을 한다는 타입이다. 하지만 이 타입을 사용할 때에는 주의를 기울어서 사용을 해야 한다. 만약 any타입을 남발해서 사용을 하게 된다면 TypeChecker가 동작하지 않게 되고 기존 JavaScript와 다른 점이 없어…","fields":{"slug":"/Javascript/typescript-basic-types/"},"frontmatter":{"date":"2020년 09월 19일","title":"[TypeScript] Basic Types","tags":["TypeScript"]}}},{"node":{"excerpt":"이번에 Github의 새로운 feature 기능인 Codespaces의 베타에 당첨되어 한번 글을 작성하게 되었습니다. Codespaces 란? Codespaces는 Github에서 새롭게 지원하게 되는 기능 중 하나입니다. 기존 Github는 웹상에서 코드에 대해 수정은 가능하지만 코드를 직접 실행하거나 디버깅을 하는 것은 거의 불가능에 가까웠는데 이번…","fields":{"slug":"/Etc/github-codespaces-beta-review/"},"frontmatter":{"date":"2020년 09월 14일","title":"[Github] Codespaces Beta 후기","tags":["github"]}}},{"node":{"excerpt":"TypeScript? TypeScript에 대해서 처음 관심을 가지게 된 것은 React를 공부하며 개발을 하다 중간 중간 Type에 대해 제대로 체크를 안하고 그냥 사용을 하다 런타임에서 문제가 발생한다는 것을 눈으로 보고 수정을 하는 경우가 많았는데 이러한 문제를 원천 차단 할 수 있는 JavaScript 의 SuperSet 언어인 TypeScript…","fields":{"slug":"/Javascript/hello-typescript-with-deno/"},"frontmatter":{"date":"2020년 08월 31일","title":"[TypeScript] Hello TypeScript! with Deno🦕","tags":["TypeScript","Deno"]}}},{"node":{"excerpt":"intro 최근 블로그를 관리와 글 작성을 소홀히 하고 있는 내 모습을 어느 순간 발견하게 되었다. 42서울 본 과정도 코로나로 인하여 지연이 되고 나태해 지는 자신을 반성하고자 블로그를 다시 제대로 하기로 마음을 먹게 되었다. 블로그를 제대로 다시 하기 위하여 일단 기존 Tistory 블로그에 작성된 글을 읽어보니 틀린 내용과 어설프게 작성된 내용들이 …","fields":{"slug":"/React/gatsby-blog-개발-후기/"},"frontmatter":{"date":"2020년 08월 29일","title":"gatsby를 이용한 Github blog 개발후기","tags":["gatsby","gitblog","react","개발후기"]}}},{"node":{"excerpt":"게시판 기능을 구현을 하면서  react-simplemde-editor 를 사용하여 이미지 업로드 기능까지 구현을 하였는데 문제를 발견한 부분이 Drag & Drop 으로 이미지를 삽입시 추가된 IMG 내용을 onChange 으로 전달을 하지 않아 Drag & Drop 이미지 삽입후 즉시 저장시 이미지 업로드 내용을 반영하지 않아서 한번 소스 코드를 분석…","fields":{"slug":"/React/첫-GitHub-Contribution-feat-react-simplemde-editor/"},"frontmatter":{"date":"2020년 06월 08일","title":"첫 GitHub Contribution!! (feat. react-simplemde-editor)","tags":["open source","github"]}}},{"node":{"excerpt":"Next.js를 공부하다 Client 단에서 Data Fetch할 때 자주 사용 되는 swr 에 대해서 알게 되어 한번 정리를 해보았습니다. ⭐ 혹시 잘못 이해해서 잘못된 부분이 있다면 댓글로 알려주세요.! ⭐  useSWR 이란? SWR 사이트에 대해 들어가 보면 아래의 내용으로 SWR에 대해서 설명을 하고 있습니다. SWR is a React Hook…","fields":{"slug":"/React/React-Nextjs-useSWR-Hook-알아보기/"},"frontmatter":{"date":"2020년 05월 05일","title":"[React, Next.js] - useSWR Hook 알아보기!","tags":["react","react hook","Next.js","swr"]}}},{"node":{"excerpt":"이전 18.04 lts 세팅을 하였던 것을 기반으로 이번에 20.04를 설치하고 세팅하면서 다시 작성합니다. https://jaeseokim.tistory.com/97 chrome 설치 https://www.google.com/chrome/ 에서 ubuntu/debian용 deb 패키지를 다운 받습니다. 위 명령어를 통해 설치를 합니다. Ibus -> u…","fields":{"slug":"/Etc/XPS-13-7390-ubuntu-2004-Update-세팅-기록용/"},"frontmatter":{"date":"2020년 04월 26일","title":"XPS 13 7390 ubuntu 20.04 Update! 세팅 기록용","tags":["Dell XPS 13 7390","Ubuntu 20.04"]}}},{"node":{"excerpt":"Ghostcat logo created by 차이틴 테크(Chaitin Tech) 취약점 개요 Apache Tomcat에서 기본으로 제공하던 AJP(Apache JServ Protocol) Connector에 취약점이 발견하게 되어 이를 통해 인증없이 Tomcat서버의 webapp목록 하위에 있는 모든 파일을 읽을 수 있습니다. 또한 파일 업로드가 가능한…","fields":{"slug":"/Security/Ghostcatcve-2020-1938-CNVD-2020-10487-취약점-이란-톰캣-AJP-취약점-Feat-VolgaCTF-2020-Qualifier-NetCorp/"},"frontmatter":{"date":"2020년 03월 30일","title":"Ghostcat(cve-2020-1938, CNVD-2020-10487) 취약점 이란? 톰캣 AJP 취약점 (Feat. VolgaCTF 2020 Qualifier NetCorp)","tags":["ghostcat","CVE"]}}},{"node":{"excerpt":"이번에 React JS에 대해 공부를 하면서 \"나도 한번 마스크맵, 재난문자 서비스를 개발 해보자!\" 라는 생각이 가지게 되어서 급하게 바로 개발을 하기 시작 하게 되었다. 맨 처음 리액트의 컴포넌트 생명주기에서 골머리를 앓았는데 Hook 이라는 매우 좋은 기술을 알게 되어서 편하게 개발을 할 수 있었다. 그래서 맨 처음 만들어 낸 작품이 재난문자 확인 …","fields":{"slug":"/React/React-JS-공적-마스크맵-개발-후기feat-Kakaomap/"},"frontmatter":{"date":"2020년 03월 18일","title":"[React JS] - 공적 마스크맵 개발 후기(feat. Kakaomap)","tags":["react","kakaomap","공적마스크맵","개발후기"]}}},{"node":{"excerpt":"이번에 TeamMODU에서 다른 형이 발표한 NullCon2020-splitsecond 문제의 WriteUp를 보며 신기하고 재미있어 보여서 한번 공부를 해봤습니다. CVE-2018-12116 대상 : Node.js: All versions prior to Node.js 6.15.0 and 8.14.0 위협 : HTTP request splitting N…","fields":{"slug":"/Security/nodejs-HTTP-request-splitting을-이용한-SSRF-취약점featNullCon2020-splitsecond-WriteUp/"},"frontmatter":{"date":"2020년 03월 01일","title":"[node.js] : HTTP request splitting을 이용한 SSRF 취약점(feat.NullCon_2020-split_second WriteUp)","tags":["SSRF","CVE"]}}},{"node":{"excerpt":"CSP(Content Security Policy)란 웹 브라우저에서 사용되는 콘텐츠에 대한 보호 정책입니다. 웹에서 사용되는 콘텐츠 즉 이미지, 동영상, 스크립트 등에 대해 사용을 허가를 하는지에 대해 정의를 하는 규칙 입니다. 이 보호 정책을 이용하여 XSS에서 이용되는 src의 주소를 자신의 하위 도메인 또는 자기 자신에게만 허용함으로 외부의 공격에…","fields":{"slug":"/Writeup/CodeGate-writeup-csp_web/"},"frontmatter":{"date":"2020년 02월 13일","title":"CodeGate - writeUp - csp(web)","tags":["xss","CODEGATE","webhakcing","length extension attack","csp bypass"]}}},{"node":{"excerpt":"Selenium를 이용하여 naver 구독 Feed를 크롤링 하기 위해서는 일단 Naver Login를 처리해야 하고 그다음 피드 페이지의 내용을 불러와 크롤링을 해야 합니다. 여기서 2가지의 문제가 발생하는 데 일단 Naver Login의 captcha 우회가 필요하고 그 다음 피드 페이지의 내용을 스크롤 다운을 통해 불러와야 합니다. Naver Log…","fields":{"slug":"/Python/python-Selenium을-이용한-웹-크롤링-Naver-login-후-구독-Feed-크롤링/"},"frontmatter":{"date":"2020년 01월 28일","title":"[python] Selenium을 이용한 웹 크롤링 - Naver login 후 구독 Feed 크롤링","tags":["python","selenium"]}}},{"node":{"excerpt":"Selenium 이란? 다양한 언어에서 웹 드라이버를 통한 웹 자동화 테스트를 지원하는 라이브러리 입니다. 여기서 웹 자동화 테스트에서만 국한 되는 것이 아닌 웹에서 자동화를 통한 다양한 작업을 할 수 있습니다. 글 제목에서 적혀 있듯이 웹 크롤링을 할 때에도 사용 합니다. python - requests, beautifulsoup를 이용한 웹 크롤링과의…","fields":{"slug":"/Python/python-Selenium을-이용한-웹-크롤링-간단-사용법-및-예제/"},"frontmatter":{"date":"2020년 01월 26일","title":"[python] Selenium을 이용한 웹 크롤링 - 간단 사용법 및 예제","tags":["selenium","python"]}}},{"node":{"excerpt":"dnspy란? dnspy - github 주소 Debug .NET and Unity assemblies Edit .NET and Unity assemblies\n dnspy 설치 방법 github에서 직접 소스를 다운받아 build를 하여 설치가 가능하다. 또는 releases 된 파일을 받아서 사용이 가능하다. dnspy 간단 사용법 Debug용 단축키 …","fields":{"slug":"/Security/dnspy-사용법-Net-assembly-editor-debugger-decompiler/"},"frontmatter":{"date":"2019년 12월 23일","title":"dnspy - 사용법 (.Net assembly-editor, debugger, decompiler)","tags":["reversing"]}}},{"node":{"excerpt":"X-MAS: Lapland Mission X - MAS의 Lapland Mission 문제를 다운 받아보면 아래와 같이 Unitity로 만들어진 것을 파악할 수 있다.  이제 이 파일을 실행 해보면 아래처럼 FPS 게임과 같은 형식인 것을 볼 수 있는데 게임을 클리어를 불가능 하게 만들어진 것을 확인할 수 있다.  이때 dnspy를 통해 분석을 하고 게임…","fields":{"slug":"/Writeup/X-MAS-CTF-2019-Lapland-Mission/"},"frontmatter":{"date":"2019년 12월 23일","title":"X-MAS CTF 2019 : Lapland Mission","tags":["ctf","writeup","reversing"]}}},{"node":{"excerpt":"평소 requests에만 너무 의존을 하는 것 같아 한번 urllib라는 python 기본 제공 라이브러리를 이용해서 크롤링 스크립트를 만들었습니다. 크롤링 대상은 다음 홈페이지의 메인 포털 상단 오른쪽의 지역별 날씨 항목을 가져와 크롤링 했습니다.  아래의 코드에 주석을 달아 두었으니 한번 보시면서 이해하시면 될것 같습니다. 후기... requests …","fields":{"slug":"/Python/Python-urllib-BeautifulSoup를-이용한-다음-날씨-크롤링/"},"frontmatter":{"date":"2019년 11월 25일","title":"Python urllib, BeautifulSoup를 이용한 다음 날씨 크롤링!","tags":["Python","BeautifulSoup","urllib"]}}},{"node":{"excerpt":"시작 하기에 앞서 이전 포스트 1편 을 보고 와주시면 감사하겠습니다. 이전 포스트에서 알아낸 ID을 가지고 password의 길이에 대해 알아내는 스크립트를 작성해봅니다/ 위와 같이 간단하게 스크립트를 작성해봅니다. 결과값으로 아래와 같이 나오는데 이 정보를 가지고 다시 작성해봅니다. 일단 admin의 pw의 길이가 36자리인데 이때 ascii를 통하여 …","fields":{"slug":"/Python/Python-requests를-이용한-blind-injecthion-스크립트-제작-2편/"},"frontmatter":{"date":"2019년 10월 23일","title":"Python requests를 이용한 blind injecthion 스크립트 제작 (2편)","tags":["Python","requests","blind injection","sqi","파이썬 스크립트","blind injection script"]}}},{"node":{"excerpt":"Python requests를 이용한 blind injecthion 스크립트 제작 일단 시작하기전에 앞서 Blind SQL Injecthion에 대해 모르신다면 이전 포스트 를 참조하세요. Python의 requests라이브러리를 이용해서 패킷을 전송하고 질의한 응답값을 보고 참과 거짓을 구분하여 자동으로 분석해주는 스크립트를 제작 하는 것이 목표! re…","fields":{"slug":"/Python/Python-requests를-이용한-blind-injecthion-스크립트-제작-1편/"},"frontmatter":{"date":"2019년 10월 23일","title":"Python requests를 이용한 blind injecthion 스크립트 제작 (1편)","tags":["Python","requests","blind injection"]}}}]}},"pageContext":{}},"staticQueryHashes":["1081905842","1900723382","63159454"]}